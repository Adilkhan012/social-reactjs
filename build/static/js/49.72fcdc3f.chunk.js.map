{"version":3,"sources":["views/pages/Admin/AnlaysisUser.js","../node_modules/@material-ui/icons/Visibility.js","../node_modules/@material-ui/core/esm/MenuItem/MenuItem.js"],"names":["useStyles","makeStyles","theme","root","position","bottom","right","width","margin","borderRadius","overflow","breakpoints","down","height","display","alignItems","justifyContent","marginTop","border","maxWidth","marginLeft","padding","textOverflow","backgroundColor","main","color","paddingBottom","cell","fontSize","heading","TabButtonsBox","borderTop","marginBottom","textAlign","borderBottom","AnlaysisUser","classes","history","useHistory","useState","isClear","setIsClear","page","setPage","noOfPages","setNoOfPages","isLoading","setIsLoading","setTransactionListAll","transactionListData","setTransactionList","day","setDay","adminUserListHandler","Axios","method","url","Apiconfigs","analysisForTrends","headers","token","window","localStorage","getItem","params","limit","days","res","data","responseCode","result","docs","pages","adminUserListHandlerForCSV","map","i","Username","userName","Email","email","Mobilenumber","countryCode","mobileNumber","Walletaddress","bnbAccount","address","RegistrationDate","moment","createdAt","format","Status","status","StoryStatus","isStory","SocialStory","isSocial","useEffect","pageCheck","className","variant","style","onClick","e","target","value","mt","background","component","Paper","align","key","tbody","scope","userId","name","sortAddress","text","cursor","toast","info","push","pathname","search","_id","length","count","onChange","v","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","React","_default","createElement","d","MenuItem","props","ref","tabIndex","_props$component","_props$disableGutters","disableGutters","ListItemClasses","_props$role","role","selected","tabIndexProp","other","_objectWithoutProperties","disabled","undefined","ListItem","_extends","button","dense","clsx","gutters","withStyles","typography","body1","_defineProperty","minHeight","paddingTop","boxSizing","whiteSpace","up","body2"],"mappings":"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","file":"static/js/49.72fcdc3f.chunk.js","sourcesContent":["import {\r\n    makeStyles,\r\n    Paper,\r\n    Box,\r\n    Typography,\r\n    Grid,\r\n    Container,\r\n    Button,\r\n    TextField,\r\n\r\n    FormControl,\r\n    Select,\r\n    MenuItem,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow\r\n} from \"@material-ui/core\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from 'react'\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { AiOutlineDownload } from \"react-icons/ai\";\r\nimport NoDataFound from \"src/component/NoDataFound\";\r\nimport * as XLSX from \"xlsx\";\r\nimport DataLoading from \"src/component/DataLoading\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport { FiCopy } from \"react-icons/fi\";\r\nimport { sortAddress } from \"src/utils\";\r\nimport CopyToClipboard from \"react-copy-to-clipboard\";\r\nimport Apiconfigs from \"src/ApiConfig/ApiConfig\";\r\nimport Axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        \"& .imgbox\": {\r\n            position: \"relative\",\r\n            \"& .editicon\": {\r\n                position: \"absolute\",\r\n                bottom: \"10px\",\r\n                right: \"10px\",\r\n            },\r\n            \"& .postImg\": {\r\n                width: \"100%\",\r\n                margin: \"16px 0\",\r\n                borderRadius: \"20px 20px 0px 0px\",\r\n                overflow: \"hidden\",\r\n                [theme.breakpoints.down(\"xs\")]: {\r\n                    borderRadius: \"8px 8px 0px 0px\",\r\n                },\r\n                \"& img\": {\r\n                    width: \"100%\",\r\n                    height: \"250px\",\r\n                    \"@media(max-width:767px)\": {\r\n                        height: \"130px\",\r\n                    },\r\n                },\r\n            },\r\n        },\r\n        \"& .userProfile\": {\r\n            position: \"relative\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"left\",\r\n            marginTop: \"-20px\",\r\n            \"& figure\": {\r\n                borderRadius: \"50%\",\r\n                border: \"2px solid #f1f1f1\",\r\n                maxWidth: \"150px\",\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                position: \"relative\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"space-between\",\r\n                margin: \"0 auto 13px\",\r\n                \"@media(max-width:767px)\": {\r\n                    maxWidth: \"75px\",\r\n                },\r\n            },\r\n            \"& .editprofile\": {\r\n                position: \"absolute\",\r\n                bottom: \"-40px\",\r\n                right: \"-10px\",\r\n            },\r\n            \"& .user\": {\r\n                position: \"absolute\",\r\n                marginLeft: \"15px\",\r\n                \"& img\": {\r\n                    width: \"100%\",\r\n                },\r\n            },\r\n        },\r\n        \"& .username\": {\r\n            marginTop: \"75px\",\r\n            marginLeft: \"25px\",\r\n            \"@media(max-width:767px)\": {\r\n                marginTop: \"45px\",\r\n            },\r\n            \"& p\": {\r\n                padding: \"5px 0px\",\r\n                overflow: \"hidden\",\r\n                maxWidth: \"150px\",\r\n                textOverflow: \"ellipsis\",\r\n            },\r\n        },\r\n        \"& .buttonbox\": {\r\n            \"& Button\": {\r\n                margin: \"0px 15px\",\r\n            },\r\n        },\r\n        \"& .detail\": {\r\n            margin: \"15px\",\r\n            padding: \"15px\",\r\n            backgroundColor: \"#101010\",\r\n        },\r\n    },\r\n\r\n    main: {\r\n        marginTop: \"40px\",\r\n        backgroundColor: \"#242526\",\r\n        padding: \"15px\",\r\n        borderRadius: \"10px\",\r\n        \"& .content\": {\r\n            backgroundColor: \"#101010\",\r\n            // width: \"100%\",\r\n            padding: \"15px\",\r\n            color: \"#e6e5e8\",\r\n            \"& .heading\": {\r\n                paddingBottom: \"15px\",\r\n\r\n                \"& h3\": {},\r\n            },\r\n        },\r\n    },\r\n    cell: {\r\n        fontSize: \"14px\",\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            fontSize: \"14px\",\r\n        },\r\n    },\r\n    heading: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    TabButtonsBox: {\r\n        borderTop: \"0.5px solid gray\",\r\n        marginBottom: \"29px\",\r\n        textAlign: \"center\",\r\n        \"& button\": {\r\n            color: \"#9E9E9E\",\r\n            fontSize: \"16px\",\r\n            borderBottom: \"2px solid transparent\",\r\n            borderRadius: 0,\r\n            \"&.active\": {\r\n                color: \"#fff\",\r\n                borderTop: \"1px solid #fff\",\r\n                marginTop: \"-1px\",\r\n            },\r\n        },\r\n    },\r\n\r\n}));\r\nconst currenciesUser = [\r\n    {\r\n        value: \"ACTIVE\",\r\n        label: \"ACTIVE\",\r\n    },\r\n    {\r\n        value: \"BLOCK\",\r\n        label: \"BLOCK\",\r\n    },\r\n];\r\n\r\nexport default function AnlaysisUser() {\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n    const [isClear, setIsClear] = useState(false);\r\n    const [timeFilter, setTimeFilter] = useState();\r\n    const [toTimeFilter, setToTimeFilter] = useState();\r\n    const [page, setPage] = useState(1);\r\n    const [noOfPages, setNoOfPages] = useState(1);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [searchUserName, setSearchUserName] = useState(\"\");\r\n    const [typeactivty, setTypeactivty] = useState(\"All\");\r\n    const [transactionListDataAll, setTransactionListAll] = useState([]);\r\n    const [transactionListData, setTransactionList] = useState([]);\r\n    const [day, setDay] = useState(\"1\")\r\n\r\n\r\n\r\n\r\n    const clearHandler = () => {\r\n        setTimeFilter();\r\n        setToTimeFilter();\r\n        setTypeactivty(\"All\");\r\n        setSearchUserName(\"\");\r\n        setIsClear(true);\r\n\r\n    };\r\n\r\n\r\n    const adminUserListHandler = async () => {\r\n        // setIsLoading(true);\r\n        setTransactionList([])\r\n        try {\r\n            const res = await Axios({\r\n                method: \"GET\",\r\n                url: Apiconfigs.analysisForTrends,\r\n                headers: {\r\n                    token: window.localStorage.getItem(\"token\"),\r\n                },\r\n                params: {\r\n                    page: page,\r\n                    limit: 15,\r\n                    days: day\r\n\r\n                },\r\n\r\n            });\r\n\r\n            if (res.data.responseCode === 200) {\r\n                setIsClear(false);\r\n                setTransactionList(res.data.result.docs);\r\n\r\n                setNoOfPages(res.data.result.pages);\r\n            } else {\r\n                setIsClear(false);\r\n                setTransactionList([]);\r\n            }\r\n            setIsLoading(false);\r\n        } catch (error) {\r\n            setIsClear(false);\r\n            setTransactionList([]);\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n    const adminUserListHandlerForCSV = async () => {\r\n\r\n        try {\r\n            const res = await Axios({\r\n                method: \"GET\",\r\n                url: Apiconfigs.analysisForTrends,\r\n                headers: {\r\n                    token: window.localStorage.getItem(\"token\"),\r\n                },\r\n                params: {\r\n                    days: \"15\"\r\n                }\r\n\r\n            });\r\n\r\n            if (res.data.responseCode === 200) {\r\n                setTransactionListAll(\r\n                    res.data.result?.map((data, i) => {\r\n                        return {\r\n                            Username: data.userName ? data.userName : null,\r\n                            Email: data.email ? data.email : null,\r\n                            Mobilenumber: `${data.countryCode} ${data.mobileNumber}`,\r\n                            Walletaddress: data.bnbAccount.address\r\n                                ? data.bnbAccount.address\r\n                                : null,\r\n                            RegistrationDate: moment(data.createdAt).format(\"lll\"),\r\n                            Status: data.status ? data.status : null,\r\n                            StoryStatus: data.isStory ? data.isStory : null,\r\n                            SocialStory: data.isSocial ? data.isSocial : null,\r\n                        };\r\n                    })\r\n                );\r\n            } else {\r\n\r\n            }\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const downloadExcel = () => {\r\n        const workSheet = XLSX.utils.json_to_sheet(transactionListDataAll);\r\n        const workBook = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(workBook, workSheet, \"userList\");\r\n        let buf = XLSX.write(workBook, { bookType: \"xlsx\", type: \"buffer\" });\r\n        XLSX.write(workBook, { bookType: \"xlsx\", type: \"binary\" });\r\n        XLSX.writeFile(workBook, \"user_list.xlsx\");\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        adminUserListHandler();\r\n        adminUserListHandlerForCSV();\r\n\r\n\r\n    }, [page, isClear, day]);\r\n\r\n\r\n    const pageCheck = page === 1 ? 15 : 0\r\n\r\n\r\n    return (\r\n        <Box>\r\n            <Container>\r\n                <Box className={classes.main}>\r\n                    <Box className={classes.heading}>\r\n                        <Typography\r\n                            variant=\"h3\"\r\n                            // color=\"primary.main\"\r\n                            style={{ color: \"#e6e5e8\" }}\r\n                        >\r\n                            Analysis Tranding User\r\n                        </Typography>\r\n                        <Typography\r\n                            variant=\"h3\"\r\n                            // color=\"primary.main\"\r\n                            style={{ color: \"#e6e5e8\" }}\r\n                        >\r\n\r\n                        </Typography>\r\n                        <Select onClick={(e) => setDay(e.target.value)} value={day}>\r\n                            <MenuItem value=\"1\">1 Days</MenuItem>\r\n                            <MenuItem value=\"15\">15 Days</MenuItem>\r\n                            <MenuItem value=\"30\">30 Days</MenuItem>\r\n                            <MenuItem value=\"60\">60 Days</MenuItem>\r\n                        </Select>\r\n                    </Box>\r\n\r\n                    &nbsp;\r\n                    <Box mt={3}\r\n                        className=\"content\"\r\n                        style={{ background: \"#000\", padding: \"15px\" }}\r\n                    >\r\n                        {isLoading ? (\r\n                            <Box style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                                <DataLoading />\r\n                            </Box>\r\n\r\n                        ) : (\r\n                            <TableContainer>\r\n                                <Table>\r\n                                    <TableHead component={Paper} className=\"headingcell\">\r\n                                        <TableRow>\r\n                                            <TableCell align=\"Center\" className={classes.cell}>\r\n                                                Sr.No\r\n                                            </TableCell>\r\n                                            <TableCell align=\"Center\" className={classes.cell}>\r\n                                                User Name\r\n                                            </TableCell>\r\n                                            <TableCell align=\"Center\" className={classes.cell}>\r\n                                                Wallet Address\r\n                                            </TableCell>\r\n                                            {/* <TableCell align=\"Center\" className={classes.cell}>\r\n                        Order Count\r\n                      </TableCell>\r\n\r\n                      <TableCell align=\"Center\" className={classes.cell}>\r\n                        Total Earning\r\n                      </TableCell> */}\r\n                                            <TableCell align=\"Center\" className={classes.cell}>\r\n                                                Status\r\n                                            </TableCell>\r\n                                            <TableCell align=\"Center\" className={classes.cell}>\r\n                                                Date & Time\r\n                                            </TableCell>\r\n\r\n                                            <TableCell align=\"Center\" className={classes.cell}>\r\n                                                Action\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    {transactionListData?.map((data, i) => {\r\n                                        return (\r\n                                            <TableBody key={i}>\r\n                                                <TableRow className={classes.tbody}>\r\n                                                    <TableCell\r\n                                                        align=\"Center\"\r\n                                                        component=\"th\"\r\n                                                        scope=\"row\"\r\n                                                    >\r\n                                                        {(page - 1) * 15 + i + 1}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"Center\">\r\n                                                        {data?.userId?.userName ? data?.userId?.userName : data?.name}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"Center\">\r\n                                                        {sortAddress(data?.userId?.bnbAccount?.address)}&nbsp;\r\n                                                        <CopyToClipboard\r\n                                                            text={data?.userId?.bnbAccount?.address}\r\n                                                            style={{ cursor: \"pointer\" }}\r\n                                                        >\r\n                                                            <FiCopy\r\n                                                                onClick={() => toast.info(\"Copied\")}\r\n                                                            />\r\n                                                        </CopyToClipboard>\r\n                                                        {/* <IoMdCopy /> */}\r\n                                                    </TableCell>\r\n                                                    {/* <TableCell align=\"Center\">0 </TableCell>\r\n                          <TableCell align=\"Center\">0 </TableCell> */}\r\n                                                    <TableCell align=\"Center\">\r\n                                                        {data?.status}{\" \"}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"Center\">\r\n                                                        {moment(data?.createdAt).format(\"lll\")}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"Center\">\r\n                                                        <Box\r\n                                                            style={{\r\n                                                                display: \"flex\",\r\n                                                                justifyContent: \"space-evenly\",\r\n                                                                cursor: \"pointer\",\r\n                                                            }}\r\n                                                        >\r\n                                                            <Button\r\n                                                                // variant=\"contained\"\r\n                                                                onClick={() =>\r\n                                                                    history.push({\r\n                                                                        pathname: \"/about-creators\",\r\n                                                                        search: data.userId?._id,\r\n                                                                    })\r\n                                                                }\r\n                                                                color=\"primary\"\r\n                                                            >\r\n                                                                <VisibilityIcon />\r\n                                                            </Button>\r\n\r\n\r\n                                                        </Box>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            </TableBody>\r\n                                        );\r\n                                    })}\r\n                                </Table>\r\n                            </TableContainer>\r\n                        )}\r\n                        {!isLoading &&\r\n                            transactionListData &&\r\n                            transactionListData.length === 0 && <NoDataFound />}\r\n\r\n                        {transactionListData && transactionListData.length >= pageCheck && (\r\n                            <Box mt={2} display=\"flex\" justifyContent=\"center\">\r\n                                <Pagination\r\n                                    count={noOfPages}\r\n                                    page={page}\r\n                                    onChange={(e, v) => setPage(v)}\r\n                                />\r\n                            </Box>\r\n                        )}\r\n                    </Box>\r\n                </Box>\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO v5: remove\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      ListItemClasses = props.ListItemClasses,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"ListItemClasses\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: _extends({\n      dense: classes.dense\n    }, ListItemClasses),\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /**\n   * Menu item contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * `classes` prop applied to the [`ListItem`](/api/list-item/) element.\n   */\n  ListItemClasses: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);"],"sourceRoot":""}