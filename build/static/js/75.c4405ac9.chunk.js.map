{"version":3,"sources":["views/pages/Rewards/CommingSoon.js","blockchain/LpRewardContract.js","views/pages/Rewards/LpReward.js","views/pages/Rewards/Rewards.js"],"names":["useStyles","makeStyles","theme","root","display","flexDirection","justifyContent","alignItems","height","transition","backgroundColor","message","textAlign","padding","spacing","transform","color","palette","secondary","main","fontFamily","fontSize","textShadow","boxContainer","marginTop","box","width","borderRadius","position","overflow","boxShadow","breakpoints","down","shiningEffect","content","top","left","opacity","animation","text","primary","contrastText","fontWeight","textTransform","zIndex","ComingSoon","classes","className","Typography","variant","component","Box","lpRewardABI","inputs","internalType","name","type","stateMutability","anonymous","indexed","outputs","initLpRewardContract","web3","Web3","window","ethereum","Promise","resolve","reject","eth","Contract","checkbox","marginBottom","tooltipIconHeader","tooltip","sliderThumb","heading","toolTipHeader","bannerBox","Buttonbox","border","input","inputLabel","marginLeft","warningContainer","warningMessage","paddingInline","margin","maxWidth","StakeReward","useState","userAddress","setAddress","lpRewardContract","setLpRewardContract","userNameContract","setUserNameContract","laziTokenContract","setLaziTokenContract","totalStaked","setTotalStaked","userRewards","setUserRewards","selectedUserNames","setSelectedUserNames","mintedUserNames","setMintedUserNames","selectedTime","setSelectedTime","userAPR","setUserAPR","flexible","setFlexible","locked","setLocked","tokenStakeValue","setTokenStakeValue","setConfirmStaking","afterLocked","setAfterLocked","AddLockedButton","setAddLockedButton","addFlexibleButton","setAddFlexibleButton","switchToLock","setSwitchToLocked","userBalance","setUserBalance","userStakedDuration","setUserStakedDuration","userStakedTokens","setUserStakedTokens","isTransactionPending","setTransactionPending","handleAddLockedButton","handleConfirmLockedButton","handleStake","fetchInformation","fetchUserRewards","fetchTotalStaked","fetchUserAPR","fetchUserBalance","console","log","handleConfirmFlexibleButton","handleDayStakeButton","weeks","handleFlexibleButton","setTimeout","options","title","align","offsetX","offsetY","floating","style","undefined","enabled","toolbar","foreColor","colors","chart","id","dataLabels","legend","show","xaxis","categories","series","data","setLockPeriodState","setStakedTokenState","setRewardTokenState","userNameChart","setUserNameChartState","handleStakeTokenChange","event","target","value","totalMultiplier","multiplier","length","calculateTotalMultiplier","useEffect","initMetamask","address","initlaziTokenContract","tokenContract","initUserNameContract","contractUserName","error","initialize","isMobile","useMediaQuery","handlePercentageBalance","percentage","toString","handleApproval","methods","approve","estimateGas","from","gasEstimate","send","gas","maxPriorityFeePerGas","utils","toWei","toast","success","erc20Amount","stake","on","hash","receipt","POSITION","TOP_RIGHT","code","Error","errorMessage","split","startIndex","indexOf","endIndex","substring","handleUnstake","unstake","useCallback","call","getUserRewards","userRewardsValue","etherValue","parseInt","toFixed","balanceOf","balance","REWARD_PER_SEC","REWARD_PER_DAY","APR","BigInt","getOwnerMintedUserNames","mintedDomains","tokensOfOwner","tokenIds","tokenId","domainNameOf","mintedDomain","push","domainName","fetchDistributionsData","daysToStake","getDistributions","distributions","lockPeriodDistributions","stakedTokenDistributions","rewardTokenDistributions","prevState","stakes","userInfo","lockPeriod","stakingAmount","AnimatedNumber","targetNumber","suffix","currentNumber","setCurrentNumber","interval","setInterval","prevNumber","clearInterval","Paper","Grid","container","item","md","xs","elevation","Tooltip","cursor","placement","gap","Button","onClick","open","mt","mb","paddingBlock","whiteSpace","TextField","onChange","map","key","Checkbox","checked","includes","userName","selectedTokenId","prevSelectedUserNames","filter","progress","handleCheckboxChange","size","inputProps","bgcolor","paddingBottom","paddingTop","e","disabled","BiBorderRadius","borderLeft","borderBottom","textDecoration","Rewards","location","useLocation","tabview","setTabView","ids","sm","Link","py","LpReward"],"mappings":"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","file":"static/js/75.c4405ac9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"100vh\",\r\n    transition: \"background-color 0.5s\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"grey\",\r\n    },\r\n  },\r\n  message: {\r\n    textAlign: \"center\",\r\n    padding: theme.spacing(2),\r\n    transition: \"transform 0.3s, color 0.3s\",\r\n    \"&:hover\": {\r\n      transform: \"scale(1.1)\",\r\n      color: theme.palette.secondary.main,\r\n    },\r\n    fontFamily: \"Pacifico, cursive\",\r\n    fontSize: \"2.5rem\",\r\n    color: \"#EC167F\",\r\n    textShadow: \"2px 2px 4px rgba(0, 0, 0, 0.3)\",\r\n  },\r\n  boxContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  box: {\r\n    height: \"200px\",\r\n    width: \"400px\",\r\n    backgroundColor: '#EC167F',\r\n    borderRadius: \"8px\",\r\n    position: \"relative\",\r\n    overflow: \"hidden\",\r\n    boxShadow: \"0 0 10px rgba(0, 0, 0, 0.2)\",\r\n    transition: \"box-shadow 0.3s, transform 0.3s\",\r\n    \"&:hover\": {\r\n      boxShadow: \"0 0 20px rgba(0, 0, 0, 0.3)\",\r\n      transform: \"scale(1.05)\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      height: \"150px\",\r\n      width: \"300px\",\r\n    },\r\n  },\r\n  shiningEffect: {\r\n    content: '\"\"',\r\n    position: \"absolute\",\r\n    top: \"-50%\",\r\n    left: \"-50%\",\r\n    width: \"200%\",\r\n    height: \"200%\",\r\n    borderRadius: \"50%\",\r\n    transform: \"rotate(-30deg)\",\r\n    backgroundColor: \"rgba(255, 255, 255, 0.6)\",\r\n    opacity: \"0\",\r\n    animation: \"$shine 2s linear infinite\",\r\n  },\r\n  \"@keyframes shine\": {\r\n    \"0%\": {\r\n      opacity: \"0\",\r\n      transform: \"rotate(-30deg) translateX(-50%)\",\r\n    },\r\n    \"50%\": {\r\n      opacity: \"1\",\r\n    },\r\n    \"100%\": {\r\n      opacity: \"0\",\r\n      transform: \"rotate(-30deg) translateX(50%)\",\r\n    },\r\n  },\r\n  text: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    color: theme.palette.primary.contrastText,\r\n    fontSize: \"24px\",\r\n    fontWeight: \"bold\",\r\n    textTransform: \"uppercase\",\r\n    zIndex: 1,\r\n    height: \"100%\",\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst ComingSoon = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"h4\" component=\"h1\" className={classes.message}>\r\n        We're working on something awesome!\r\n        <br />\r\n        Stay tuned for exciting updates.\r\n      </Typography>\r\n      <Box className={classes.boxContainer}>\r\n        <div className={classes.box}>\r\n          <div className={classes.shiningEffect} />\r\n          <span className={classes.text}>Coming Soon</span>\r\n        </div>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComingSoon;\r\n","import Web3 from \"web3\";\r\n\r\n//testnet\r\n// const lpRewardAddress = \"0x27208049A8021C35e9A923e5fc810956312F4949\";\r\n//mainnet\r\nconst lpRewardAddress = \"0x489bA6AE9E6eA991Db6842b09682d15a76194D51\";\r\n\r\n//testnet\r\n// const lpRewardABI = [\r\n// \t{\r\n// \t\t\"inputs\": [],\r\n// \t\t\"name\": \"harvest\",\r\n// \t\t\"outputs\": [],\r\n// \t\t\"stateMutability\": \"nonpayable\",\r\n// \t\t\"type\": \"function\"\r\n// \t},\r\n// \t{\r\n// \t\t\"inputs\": [\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"address\",\r\n// \t\t\t\t\"name\": \"\",\r\n// \t\t\t\t\"type\": \"address\"\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"address\",\r\n// \t\t\t\t\"name\": \"\",\r\n// \t\t\t\t\"type\": \"address\"\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"uint256\",\r\n// \t\t\t\t\"name\": \"\",\r\n// \t\t\t\t\"type\": \"uint256\"\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"bytes\",\r\n// \t\t\t\t\"name\": \"\",\r\n// \t\t\t\t\"type\": \"bytes\"\r\n// \t\t\t}\r\n// \t\t],\r\n// \t\t\"name\": \"onERC721Received\",\r\n// \t\t\"outputs\": [\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"bytes4\",\r\n// \t\t\t\t\"name\": \"\",\r\n// \t\t\t\t\"type\": \"bytes4\"\r\n// \t\t\t}\r\n// \t\t],\r\n// \t\t\"stateMutability\": \"nonpayable\",\r\n// \t\t\"type\": \"function\"\r\n// \t},\r\n// \t{\r\n// \t\t\"inputs\": [\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"contract IERC20\",\r\n// \t\t\t\t\"name\": \"_stakingToken\",\r\n// \t\t\t\t\"type\": \"address\"\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"contract LAZI\",\r\n// \t\t\t\t\"name\": \"_rewardToken\",\r\n// \t\t\t\t\"type\": \"address\"\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"contract IERC721\",\r\n// \t\t\t\t\"name\": \"_erc721\",\r\n// \t\t\t\t\"type\": \"address\"\r\n// \t\t\t}\r\n// \t\t],\r\n// \t\t\"stateMutability\": \"nonpayable\",\r\n// \t\t\"type\": \"constructor\"\r\n// \t},\r\n// \t{\r\n// \t\t\"anonymous\": false,\r\n// \t\t\"inputs\": [\r\n// \t\t\t{\r\n// \t\t\t\t\"indexed\": true,\r\n// \t\t\t\t\"internalType\": \"address\",\r\n// \t\t\t\t\"name\": \"previousOwner\",\r\n// \t\t\t\t\"type\": \"address\"\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\t\"indexed\": true,\r\n// \t\t\t\t\"internalType\": \"address\",\r\n// \t\t\t\t\"name\": \"newOwner\",\r\n// \t\t\t\t\"type\": \"address\"\r\n// \t\t\t}\r\n// \t\t],\r\n// \t\t\"name\": \"OwnershipTransferred\",\r\n// \t\t\"type\": \"event\"\r\n// \t},\r\n// \t{\r\n// \t\t\"inputs\": [],\r\n// \t\t\"name\": \"renounceOwnership\",\r\n// \t\t\"outputs\": [],\r\n// \t\t\"stateMutability\": \"nonpayable\",\r\n// \t\t\"type\": \"function\"\r\n// \t},\r\n// \t{\r\n// \t\t\"inputs\": [\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"uint256\",\r\n// \t\t\t\t\"name\": \"erc20Amount\",\r\n// \t\t\t\t\"type\": \"uint256\"\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"uint256\",\r\n// \t\t\t\t\"name\": \"lockPeriod\",\r\n// \t\t\t\t\"type\": \"uint256\"\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"uint256[]\",\r\n// \t\t\t\t\"name\": \"erc721TokenIds\",\r\n// \t\t\t\t\"type\": \"uint256[]\"\r\n// \t\t\t}\r\n// \t\t],\r\n// \t\t\"name\": \"stake\",\r\n// \t\t\"outputs\": [],\r\n// \t\t\"stateMutability\": \"nonpayable\",\r\n// \t\t\"type\": \"function\"\r\n// \t},\r\n// \t{\r\n// \t\t\"inputs\": [\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"address\",\r\n// \t\t\t\t\"name\": \"newOwner\",\r\n// \t\t\t\t\"type\": \"address\"\r\n// \t\t\t}\r\n// \t\t],\r\n// \t\t\"name\": \"transferOwnership\",\r\n// \t\t\"outputs\": [],\r\n// \t\t\"stateMutability\": \"nonpayable\",\r\n// \t\t\"type\": \"function\"\r\n// \t},\r\n// \t{\r\n// \t\t\"inputs\": [],\r\n// \t\t\"name\": \"unstake\",\r\n// \t\t\"outputs\": [],\r\n// \t\t\"stateMutability\": \"nonpayable\",\r\n// \t\t\"type\": \"function\"\r\n// \t},\r\n// \t{\r\n// \t\t\"inputs\": [\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"uint256\",\r\n// \t\t\t\t\"name\": \"maxLockDuration\",\r\n// \t\t\t\t\"type\": \"uint256\"\r\n// \t\t\t}\r\n// \t\t],\r\n// \t\t\"name\": \"updateMaxLockDuration\",\r\n// \t\t\"outputs\": [],\r\n// \t\t\"stateMutability\": \"nonpayable\",\r\n// \t\t\"type\": \"function\"\r\n// \t},\r\n// \t{\r\n// \t\t\"inputs\": [\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"uint256\",\r\n// \t\t\t\t\"name\": \"minLockDuration\",\r\n// \t\t\t\t\"type\": \"uint256\"\r\n// \t\t\t}\r\n// \t\t],\r\n// \t\t\"name\": \"updateMinLockDuration\",\r\n// \t\t\"outputs\": [],\r\n// \t\t\"stateMutability\": \"nonpayable\",\r\n// \t\t\"type\": \"function\"\r\n// \t},\r\n// \t{\r\n// \t\t\"inputs\": [\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"uint256\",\r\n// \t\t\t\t\"name\": \"increment\",\r\n// \t\t\t\t\"type\": \"uint256\"\r\n// \t\t\t}\r\n// \t\t],\r\n// \t\t\"name\": \"updateMultiplierIncrementErc721\",\r\n// \t\t\"outputs\": [],\r\n// \t\t\"stateMutability\": \"nonpayable\",\r\n// \t\t\"type\": \"function\"\r\n// \t},\r\n// \t{\r\n// \t\t\"inputs\": [\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"uint256\",\r\n// \t\t\t\t\"name\": \"increment\",\r\n// \t\t\t\t\"type\": \"uint256\"\r\n// \t\t\t}\r\n// \t\t],\r\n// \t\t\"name\": \"updateMultiplierIncrementLockPeriod\",\r\n// \t\t\"outputs\": [],\r\n// \t\t\"stateMutability\": \"nonpayable\",\r\n// \t\t\"type\": \"function\"\r\n// \t},\r\n// \t{\r\n// \t\t\"inputs\": [\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"uint256\",\r\n// \t\t\t\t\"name\": \"rewardPerSec\",\r\n// \t\t\t\t\"type\": \"uint256\"\r\n// \t\t\t}\r\n// \t\t],\r\n// \t\t\"name\": \"updateRewardPerSec\",\r\n// \t\t\"outputs\": [],\r\n// \t\t\"stateMutability\": \"nonpayable\",\r\n// \t\t\"type\": \"function\"\r\n// \t},\r\n// \t{\r\n// \t\t\"inputs\": [\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"uint256\",\r\n// \t\t\t\t\"name\": \"stopTime\",\r\n// \t\t\t\t\"type\": \"uint256\"\r\n// \t\t\t}\r\n// \t\t],\r\n// \t\t\"name\": \"updateRewardStopTime\",\r\n// \t\t\"outputs\": [],\r\n// \t\t\"stateMutability\": \"nonpayable\",\r\n// \t\t\"type\": \"function\"\r\n// \t},\r\n// \t{\r\n// \t\t\"inputs\": [\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"address\",\r\n// \t\t\t\t\"name\": \"_erc20\",\r\n// \t\t\t\t\"type\": \"address\"\r\n// \t\t\t}\r\n// \t\t],\r\n// \t\t\"name\": \"withdrawERC20\",\r\n// \t\t\"outputs\": [],\r\n// \t\t\"stateMutability\": \"nonpayable\",\r\n// \t\t\"type\": \"function\"\r\n// \t},\r\n// \t{\r\n// \t\t\"inputs\": [],\r\n// \t\t\"name\": \"erc721\",\r\n// \t\t\"outputs\": [\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"contract IERC721\",\r\n// \t\t\t\t\"name\": \"\",\r\n// \t\t\t\t\"type\": \"address\"\r\n// \t\t\t}\r\n// \t\t],\r\n// \t\t\"stateMutability\": \"view\",\r\n// \t\t\"type\": \"function\"\r\n// \t},\r\n// \t{\r\n// \t\t\"inputs\": [\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"uint256[]\",\r\n// \t\t\t\t\"name\": \"timeToStake\",\r\n// \t\t\t\t\"type\": \"uint256[]\"\r\n// \t\t\t}\r\n// \t\t],\r\n// \t\t\"name\": \"getDistributions\",\r\n// \t\t\"outputs\": [\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"uint256[]\",\r\n// \t\t\t\t\"name\": \"txDistributions\",\r\n// \t\t\t\t\"type\": \"uint256[]\"\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"uint256[]\",\r\n// \t\t\t\t\"name\": \"stakedTokenDistributions\",\r\n// \t\t\t\t\"type\": \"uint256[]\"\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"uint256[]\",\r\n// \t\t\t\t\"name\": \"rewardTokenDistributions\",\r\n// \t\t\t\t\"type\": \"uint256[]\"\r\n// \t\t\t}\r\n// \t\t],\r\n// \t\t\"stateMutability\": \"view\",\r\n// \t\t\"type\": \"function\"\r\n// \t},\r\n// \t{\r\n// \t\t\"inputs\": [\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"address\",\r\n// \t\t\t\t\"name\": \"user\",\r\n// \t\t\t\t\"type\": \"address\"\r\n// \t\t\t}\r\n// \t\t],\r\n// \t\t\"name\": \"getUserRewards\",\r\n// \t\t\"outputs\": [\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"uint256\",\r\n// \t\t\t\t\"name\": \"\",\r\n// \t\t\t\t\"type\": \"uint256\"\r\n// \t\t\t}\r\n// \t\t],\r\n// \t\t\"stateMutability\": \"view\",\r\n// \t\t\"type\": \"function\"\r\n// \t},\r\n// \t{\r\n// \t\t\"inputs\": [],\r\n// \t\t\"name\": \"MAX_LOCK_DURATION\",\r\n// \t\t\"outputs\": [\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"uint256\",\r\n// \t\t\t\t\"name\": \"\",\r\n// \t\t\t\t\"type\": \"uint256\"\r\n// \t\t\t}\r\n// \t\t],\r\n// \t\t\"stateMutability\": \"view\",\r\n// \t\t\"type\": \"function\"\r\n// \t},\r\n// \t{\r\n// \t\t\"inputs\": [],\r\n// \t\t\"name\": \"MIN_LOCK_DURATION\",\r\n// \t\t\"outputs\": [\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"uint256\",\r\n// \t\t\t\t\"name\": \"\",\r\n// \t\t\t\t\"type\": \"uint256\"\r\n// \t\t\t}\r\n// \t\t],\r\n// \t\t\"stateMutability\": \"view\",\r\n// \t\t\"type\": \"function\"\r\n// \t},\r\n// \t{\r\n// \t\t\"inputs\": [],\r\n// \t\t\"name\": \"owner\",\r\n// \t\t\"outputs\": [\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"address\",\r\n// \t\t\t\t\"name\": \"\",\r\n// \t\t\t\t\"type\": \"address\"\r\n// \t\t\t}\r\n// \t\t],\r\n// \t\t\"stateMutability\": \"view\",\r\n// \t\t\"type\": \"function\"\r\n// \t},\r\n// \t{\r\n// \t\t\"inputs\": [],\r\n// \t\t\"name\": \"REWARD_PER_SEC\",\r\n// \t\t\"outputs\": [\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"uint256\",\r\n// \t\t\t\t\"name\": \"\",\r\n// \t\t\t\t\"type\": \"uint256\"\r\n// \t\t\t}\r\n// \t\t],\r\n// \t\t\"stateMutability\": \"view\",\r\n// \t\t\"type\": \"function\"\r\n// \t},\r\n// \t{\r\n// \t\t\"inputs\": [],\r\n// \t\t\"name\": \"REWARD_STOP_TIME\",\r\n// \t\t\"outputs\": [\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"uint256\",\r\n// \t\t\t\t\"name\": \"\",\r\n// \t\t\t\t\"type\": \"uint256\"\r\n// \t\t\t}\r\n// \t\t],\r\n// \t\t\"stateMutability\": \"view\",\r\n// \t\t\"type\": \"function\"\r\n// \t},\r\n// \t{\r\n// \t\t\"inputs\": [],\r\n// \t\t\"name\": \"rewardToken\",\r\n// \t\t\"outputs\": [\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"contract LAZI\",\r\n// \t\t\t\t\"name\": \"\",\r\n// \t\t\t\t\"type\": \"address\"\r\n// \t\t\t}\r\n// \t\t],\r\n// \t\t\"stateMutability\": \"view\",\r\n// \t\t\"type\": \"function\"\r\n// \t},\r\n// \t{\r\n// \t\t\"inputs\": [\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"address\",\r\n// \t\t\t\t\"name\": \"\",\r\n// \t\t\t\t\"type\": \"address\"\r\n// \t\t\t}\r\n// \t\t],\r\n// \t\t\"name\": \"stakes\",\r\n// \t\t\"outputs\": [\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"uint256\",\r\n// \t\t\t\t\"name\": \"stakingAmount\",\r\n// \t\t\t\t\"type\": \"uint256\"\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"uint256\",\r\n// \t\t\t\t\"name\": \"lockPeriod\",\r\n// \t\t\t\t\"type\": \"uint256\"\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"uint256\",\r\n// \t\t\t\t\"name\": \"stakeStartTime\",\r\n// \t\t\t\t\"type\": \"uint256\"\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"uint256\",\r\n// \t\t\t\t\"name\": \"weightedStake\",\r\n// \t\t\t\t\"type\": \"uint256\"\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"uint256\",\r\n// \t\t\t\t\"name\": \"claimedRewards\",\r\n// \t\t\t\t\"type\": \"uint256\"\r\n// \t\t\t}\r\n// \t\t],\r\n// \t\t\"stateMutability\": \"view\",\r\n// \t\t\"type\": \"function\"\r\n// \t},\r\n// \t{\r\n// \t\t\"inputs\": [],\r\n// \t\t\"name\": \"stakingToken\",\r\n// \t\t\"outputs\": [\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"contract IERC20\",\r\n// \t\t\t\t\"name\": \"\",\r\n// \t\t\t\t\"type\": \"address\"\r\n// \t\t\t}\r\n// \t\t],\r\n// \t\t\"stateMutability\": \"view\",\r\n// \t\t\"type\": \"function\"\r\n// \t},\r\n// \t{\r\n// \t\t\"inputs\": [],\r\n// \t\t\"name\": \"totalStaked\",\r\n// \t\t\"outputs\": [\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"uint256\",\r\n// \t\t\t\t\"name\": \"\",\r\n// \t\t\t\t\"type\": \"uint256\"\r\n// \t\t\t}\r\n// \t\t],\r\n// \t\t\"stateMutability\": \"view\",\r\n// \t\t\"type\": \"function\"\r\n// \t},\r\n// \t{\r\n// \t\t\"inputs\": [],\r\n// \t\t\"name\": \"totalWeightedStake\",\r\n// \t\t\"outputs\": [\r\n// \t\t\t{\r\n// \t\t\t\t\"internalType\": \"uint256\",\r\n// \t\t\t\t\"name\": \"\",\r\n// \t\t\t\t\"type\": \"uint256\"\r\n// \t\t\t}\r\n// \t\t],\r\n// \t\t\"stateMutability\": \"view\",\r\n// \t\t\"type\": \"function\"\r\n// \t}\r\n// ]\r\n\r\n//mainnet ABI\r\nconst lpRewardABI = [\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"contract IERC20\",\r\n        name: \"_stakingToken\",\r\n        type: \"address\",\r\n      },\r\n      { internalType: \"contract LAZI\", name: \"_rewardToken\", type: \"address\" },\r\n      { internalType: \"contract IERC721\", name: \"_erc721\", type: \"address\" },\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"constructor\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"previousOwner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"newOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"OwnershipTransferred\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"MAX_LOCK_DURATION\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"MIN_LOCK_DURATION\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"REWARD_PER_SEC\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"REWARD_STOP_TIME\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"erc721\",\r\n    outputs: [{ internalType: \"contract IERC721\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256[]\", name: \"timeToStake\", type: \"uint256[]\" },\r\n    ],\r\n    name: \"getDistributions\",\r\n    outputs: [\r\n      { internalType: \"uint256[]\", name: \"txDistributions\", type: \"uint256[]\" },\r\n      {\r\n        internalType: \"uint256[]\",\r\n        name: \"stakedTokenDistributions\",\r\n        type: \"uint256[]\",\r\n      },\r\n      {\r\n        internalType: \"uint256[]\",\r\n        name: \"rewardTokenDistributions\",\r\n        type: \"uint256[]\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"user\", type: \"address\" }],\r\n    name: \"getUserRewards\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"harvest\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"\", type: \"address\" },\r\n      { internalType: \"address\", name: \"\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"\", type: \"uint256\" },\r\n      { internalType: \"bytes\", name: \"\", type: \"bytes\" },\r\n    ],\r\n    name: \"onERC721Received\",\r\n    outputs: [{ internalType: \"bytes4\", name: \"\", type: \"bytes4\" }],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"owner\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"renounceOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"rewardToken\",\r\n    outputs: [{ internalType: \"contract LAZI\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"erc20Amount\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"lockPeriod\", type: \"uint256\" },\r\n      { internalType: \"uint256[]\", name: \"erc721TokenIds\", type: \"uint256[]\" },\r\n    ],\r\n    name: \"stake\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    name: \"stakes\",\r\n    outputs: [\r\n      { internalType: \"uint256\", name: \"stakingAmount\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"lockPeriod\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"stakeStartTime\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"weightedStake\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"claimedRewards\", type: \"uint256\" },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"stakingToken\",\r\n    outputs: [{ internalType: \"contract IERC20\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"totalStaked\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"totalWeightedStake\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"newOwner\", type: \"address\" }],\r\n    name: \"transferOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"unstake\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"maxLockDuration\", type: \"uint256\" },\r\n    ],\r\n    name: \"updateMaxLockDuration\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"minLockDuration\", type: \"uint256\" },\r\n    ],\r\n    name: \"updateMinLockDuration\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"increment\", type: \"uint256\" }],\r\n    name: \"updateMultiplierIncrementErc721\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"increment\", type: \"uint256\" }],\r\n    name: \"updateMultiplierIncrementLockPeriod\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"rewardPerSec\", type: \"uint256\" },\r\n    ],\r\n    name: \"updateRewardPerSec\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"stopTime\", type: \"uint256\" }],\r\n    name: \"updateRewardStopTime\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"_erc20\", type: \"address\" }],\r\n    name: \"withdrawERC20\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n];\r\n\r\nconst initLpRewardContract = async () => {\r\n  const web3 = new Web3(window.ethereum);\r\n  return new Promise((resolve, reject) => {\r\n    const stakingContract = new web3.eth.Contract(lpRewardABI, lpRewardAddress);\r\n    resolve(stakingContract);\r\n  });\r\n};\r\n\r\nexport default initLpRewardContract;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { toast } from \"react-toastify\";\r\nimport BigInt from \"big-integer\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\n\r\nimport initMetamask from \"src/blockchain/metamaskConnection\";\r\nimport initLpRewardContract from \"src/blockchain/LpRewardContract\";\r\nimport initlaziTokenContract from \"src/blockchain/laziTokenContract\";\r\nimport initUserNameContract from \"src/blockchain/laziUserNameContract\";\r\nimport { styles } from \"@material-ui/pickers/views/Clock/Clock\";\r\nimport Web3 from \"web3\";\r\nimport { Balance } from \"@mui/icons-material\";\r\n// import MetaMaskOnboarding from \"@metamask/onboarding\";\r\nconst laziTokenAddress = \"0xf472134D28216581F47304c66Fb18922a146e514\";\r\nconst lpRewardAddress = \"0x27208049A8021C35e9A923e5fc810956312F4949\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  checkbox: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  tooltipIconHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  tooltip: {\r\n    backgroundColor: \"secondary\",\r\n    textAlign: \"center\",\r\n  },\r\n  sliderThumb: {\r\n    transition: \"transform 0.2s ease-out\",\r\n    \"&:hover\": {\r\n      transform: \"scale(1.2)\",\r\n    },\r\n  },\r\n\r\n  heading: {\r\n    display: \"flex\",\r\n  },\r\n  toolTipHeader: {\r\n    position: \"absolute\",\r\n    top: \"11.5%\",\r\n    left: \"47%\",\r\n  },\r\n  bannerBox: {\r\n    padding: \"10px 0px 150px 0px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      padding: \"90px 0\",\r\n    },\r\n    \"& label\": {\r\n      color: \"#e8aa3e\",\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n  root: {\r\n    padding: \"15px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      padding: \"10px\",\r\n    },\r\n  },\r\n  Buttonbox: {\r\n    \"& Button\": {\r\n      padding: \"11px 16px\",\r\n      borderRadius: \"4px\",\r\n      color: \"#fff\",\r\n      fontSize: \"16px\",\r\n      fontWeight: \"bold\",\r\n      position: \"relative\",\r\n      overflow: \"hidden\",\r\n      backgroundColor: \"#EC167F\",\r\n      border: \"none\",\r\n      \"&::before\": {\r\n        content: '\"\"',\r\n        position: \"absolute\",\r\n        top: \"0\",\r\n        left: \"-50%\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        backgroundColor: \"rgba(255, 255, 255, 0.2)\",\r\n        transform: \"translateX(-150%) skewX(-45deg)\",\r\n        animation: \"$shining 1.5s ease-in-out infinite\",\r\n      },\r\n    },\r\n  },\r\n  \"@keyframes shining\": {\r\n    \"0%\": {\r\n      transform: \"translateX(-150%) skewX(-45deg)\",\r\n    },\r\n    \"100%\": {\r\n      transform: \"translateX(150%) skewX(-45deg)\",\r\n    },\r\n  },\r\n\r\n  input: {\r\n    width: \"100%\",\r\n    \"& .MuiOutlinedInput-root\": {\r\n      color: \"white\",\r\n      borderRadius: 10,\r\n      height: \"40px\",\r\n      border: \"1px solid #575758\",\r\n      fontSize: 12,\r\n    },\r\n  },\r\n  inputLabel: {\r\n    color: \"#fff\",\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    marginLeft: 12,\r\n  },\r\n  warningContainer: {\r\n    backgroundColor: \"E70C9B\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    top: 0,\r\n    left: 0,\r\n    zIndex: 9999,\r\n  },\r\n  warningMessage: {\r\n    backgroundColor: \"E70C9B\",\r\n    padding:2,\r\n    paddingInline:7,\r\n    margin: 0,\r\n    marginBottom:4,\r\n    color: \"#E70C9B\",\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: 400,\r\n    textAlign: \"center\",\r\n    maxWidth: \"90%\",\r\n  },\r\n}));\r\n\r\nconst StakeReward = () => {\r\n  const classes = useStyles();\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const [userAddress, setAddress] = useState(null);\r\n  const [lpRewardContract, setLpRewardContract] = useState(null);\r\n  const [userNameContract, setUserNameContract] = useState(null);\r\n  const [laziTokenContract, setLaziTokenContract] = useState(null);\r\n  const [totalStaked, setTotalStaked] = useState(0);\r\n  const [userRewards, setUserRewards] = useState(0);\r\n  const [selectedUserNames, setSelectedUserNames] = useState([]);\r\n  const [mintedUserNames, setMintedUserNames] = useState([]);\r\n  const [selectedTime, setSelectedTime] = useState(0);\r\n  const [userAPR, setUserAPR] = useState(0);\r\n  const [flexible, setFlexible] = useState(false);\r\n  const [locked, setLocked] = useState(false);\r\n  const [tokenStakeValue, setTokenStakeValue] = useState(0);\r\n  const [confirmStaking, setConfirmStaking] = useState(false);\r\n  const [lazinessProfit, setLazinessProfit] = useState(0);\r\n  const [afterLocked, setAfterLocked] = useState(false);\r\n  const [AddLockedButton, setAddLockedButton] = useState(false);\r\n  const [addFlexibleButton, setAddFlexibleButton] = useState(false);\r\n  const [switchToLock, setSwitchToLocked] = useState(false);\r\n  const [userBalance, setUserBalance] = useState(false);\r\n  const [totalStakers, setTotalStakers] = useState(0);\r\n  const [userStakedDuration, setUserStakedDuration] = useState(0);\r\n  const [userStakedTokens, setUserStakedTokens] = useState(0);\r\n  const [isTransactionPending, setTransactionPending] = useState(false);\r\n\r\n  // function editing here\r\n\r\n  const handleGoBacktoLocked = () => {\r\n    setAddLockedButton(false);\r\n    setAfterLocked(true);\r\n  };\r\n\r\n  const handleAddFlexibleButton = () => {\r\n    setAddFlexibleButton(true);\r\n    setFlexible(false);\r\n    setConfirmStaking(false);\r\n    setLocked(false);\r\n    setAfterLocked(false);\r\n  };\r\n  const handleAddLockedButton = () => {\r\n    setAddLockedButton(true);\r\n    setConfirmStaking(false);\r\n    setLocked(false);\r\n    setAfterLocked(false);\r\n  };\r\n\r\n  const handleGoBackOfLocked = () => {\r\n    setLocked(true);\r\n    setFlexible(false);\r\n    setAfterLocked(false);\r\n  };\r\n  const handleSwitchLockedGoBack = () => {\r\n    setFlexible(true);\r\n    setSwitchToLocked(false);\r\n  };\r\n\r\n  const handleConfirmLockedButton = async () => {\r\n    try {\r\n      await handleStake();\r\n      await fetchInformation();\r\n      fetchUserRewards();\r\n      fetchTotalStaked();\r\n      fetchUserAPR();\r\n      fetchUserBalance();\r\n      setAfterLocked(true);\r\n      setLocked(false);\r\n      setFlexible(false);\r\n      setAddLockedButton(false);\r\n      setSelectedTime(0);\r\n      setTokenStakeValue(0);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleSwitchToLock = () => {\r\n    setFlexible(false);\r\n    // setSwitchToLocked(true);\r\n    setLocked(true);\r\n    setSelectedTime(0);\r\n    setTokenStakeValue(0);\r\n  };\r\n\r\n  const handleDayStake = (e) => {\r\n    setSelectedTime(e.target.value);\r\n  };\r\n\r\n  const handleGoBacktoFlexible = () => {\r\n    setFlexible(true);\r\n    setLocked(false);\r\n    setConfirmStaking(false);\r\n    setAddFlexibleButton(false);\r\n    setSelectedTime(0);\r\n    setTokenStakeValue(0);\r\n  };\r\n\r\n  const handleConfirmFlexibleButton = async () => {\r\n    try {\r\n      await handleStake();\r\n      await fetchInformation();\r\n      fetchUserRewards();\r\n      fetchTotalStaked();\r\n\r\n      fetchUserAPR();\r\n\r\n      fetchUserBalance();\r\n      setFlexible(true);\r\n      setLocked(false);\r\n      setConfirmStaking(false);\r\n      setAddFlexibleButton(false);\r\n      setSelectedTime(0);\r\n      setTokenStakeValue(0);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const handleGoBackforFlexibleIncrement = () => {\r\n    setFlexible(false);\r\n    setLocked(false);\r\n    setConfirmStaking(true);\r\n    setAddFlexibleButton(false);\r\n  };\r\n\r\n  const handleStakeInfoButton = () => {\r\n    setAfterLocked(true);\r\n    setLocked(false);\r\n    setFlexible(false);\r\n    // setExtendLockedButton(false);\r\n    setSelectedTime(0);\r\n    setTokenStakeValue(0);\r\n  };\r\n  const handleMainMenuButton = () => {\r\n    setAfterLocked(false);\r\n    setLocked(false);\r\n    setFlexible(false);\r\n    setSelectedTime(0);\r\n    setTokenStakeValue(0);\r\n  };\r\n\r\n  const handleIncrement = () => {\r\n    setLazinessProfit((prevProfit) => prevProfit + 0.1);\r\n  };\r\n\r\n  const handleDecrement = () => {\r\n    setLazinessProfit((prevProfit) => prevProfit - 0.1);\r\n  };\r\n\r\n  const handleConfirmStakingButton = () => {\r\n    setConfirmStaking(true);\r\n    setFlexible(false);\r\n    setSelectedTime(0);\r\n    setTokenStakeValue(0);\r\n  };\r\n\r\n  const handleDayStakeButton = (weeks) => {\r\n    setSelectedTime(weeks * 7);\r\n  };\r\n\r\n  // Back Icon\r\n\r\n  const handleGoBack = () => {\r\n    setFlexible(false);\r\n    setLocked(false);\r\n    // setConfirmStaking(false);\r\n    setSelectedTime(0);\r\n    setTokenStakeValue(0);\r\n  };\r\n\r\n  // Flexbile Button Function\r\n  const handleFlexibleButton = async () => {\r\n    try {\r\n      await handleStake();\r\n      await fetchInformation();\r\n      fetchUserRewards();\r\n      fetchTotalStaked();\r\n\r\n      fetchUserAPR();\r\n\r\n      fetchUserBalance();\r\n\r\n      setSelectedTime(0);\r\n      setTokenStakeValue(0);\r\n      setTimeout(() => {\r\n        setFlexible(!flexible);\r\n        setLocked(false);\r\n      }, 500);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  // Locked Button Function\r\n\r\n  const handleLockedButton = () => {\r\n    setTimeout(() => {\r\n      setLocked(!locked);\r\n      setFlexible(false);\r\n    }, 500);\r\n  };\r\n\r\n  //chart state\r\n  const [state, setState] = useState({\r\n    options: {\r\n      title: {\r\n        text: \"chart\",\r\n        align: \"left\",\r\n        margin: 10,\r\n        offsetX: 0,\r\n        offsetY: 0,\r\n        floating: false,\r\n        style: {\r\n          fontSize: \"14px\",\r\n          fontWeight: \"bold\",\r\n          fontFamily: undefined,\r\n          color: \"#fff\",\r\n        },\r\n      },\r\n      tooltip: {\r\n        enabled: true,\r\n        style: {\r\n          fontFamily: \"'Montserrat', 'sans-serif'\",\r\n        },\r\n\r\n        theme: \"dark\",\r\n      },\r\n      toolbar: {\r\n        foreColor: \"#ffff\",\r\n        style: {\r\n          color: \"black\",\r\n        },\r\n      },\r\n      colors: [\"#8a8688\", \"#e31a89\"],\r\n      chart: { foreColor: \"#e6e5e8\", id: \"basic-bar\" },\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n      legend: {\r\n        show: false,\r\n      },\r\n      xaxis: {\r\n        categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999],\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: \"series-1\",\r\n        data: [30, 40, 45, 50, 49, 60, 70, 91],\r\n      },\r\n      {\r\n        name: \"series-2\",\r\n        data: [40, 14, 51, 5, 42, 30, 22, 100],\r\n      },\r\n    ],\r\n  });\r\n  //lockPeriodState\r\n  const [lockPeriodState, setLockPeriodState] = useState({\r\n    options: {\r\n      title: {\r\n        text: \"LockPeriodDistributions\",\r\n        align: \"left\",\r\n        margin: 10,\r\n        offsetX: 0,\r\n        offsetY: 0,\r\n        floating: false,\r\n        style: {\r\n          fontSize: \"14px\",\r\n          fontWeight: \"bold\",\r\n          fontFamily: undefined,\r\n          color: \"#fff\",\r\n        },\r\n      },\r\n      tooltip: {\r\n        enabled: true,\r\n        style: {\r\n          fontFamily: \"'Montserrat', 'sans-serif'\",\r\n        },\r\n        theme: \"dark\",\r\n      },\r\n      toolbar: {\r\n        foreColor: \"#ffff\",\r\n        style: {\r\n          color: \"black\",\r\n        },\r\n      },\r\n      colors: [\"#8a8688\", \"#e31a89\"],\r\n      chart: { foreColor: \"#e6e5e8\", id: \"basic-bar\" },\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n      legend: {\r\n        show: false,\r\n      },\r\n      xaxis: {\r\n        categories: [],\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Lock Period Distributions\",\r\n        data: [],\r\n      },\r\n    ],\r\n  });\r\n\r\n  // stakedTokenState\r\n  const [stakedTokenState, setStakedTokenState] = useState({\r\n    options: {\r\n      title: {\r\n        text: \"StakedTokenDistributions\",\r\n        align: \"left\",\r\n        margin: 10,\r\n        offsetX: 0,\r\n        offsetY: 0,\r\n        floating: false,\r\n        style: {\r\n          fontSize: \"14px\",\r\n          fontWeight: \"bold\",\r\n          fontFamily: undefined,\r\n          color: \"#fff\",\r\n        },\r\n      },\r\n      tooltip: {\r\n        enabled: true,\r\n        style: {\r\n          fontFamily: \"'Montserrat', 'sans-serif'\",\r\n        },\r\n        theme: \"dark\",\r\n      },\r\n      toolbar: {\r\n        foreColor: \"#ffff\",\r\n        style: {\r\n          color: \"black\",\r\n        },\r\n      },\r\n      colors: [\"#8a8688\", \"#e31a89\"],\r\n      chart: { foreColor: \"#e6e5e8\", id: \"basic-bar\" },\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n      legend: {\r\n        show: false,\r\n      },\r\n      xaxis: {\r\n        categories: [],\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Staked Token Distributions\",\r\n        data: [],\r\n      },\r\n    ],\r\n  });\r\n\r\n  //Reward Token State\r\n  const [rewardTokenState, setRewardTokenState] = useState({\r\n    options: {\r\n      title: {\r\n        text: \"RewardTokenDistributions\",\r\n        align: \"left\",\r\n        margin: 10,\r\n        offsetX: 0,\r\n        offsetY: 0,\r\n        floating: false,\r\n        style: {\r\n          fontSize: \"14px\",\r\n          fontWeight: \"bold\",\r\n          fontFamily: undefined,\r\n          color: \"#fff\",\r\n        },\r\n      },\r\n      tooltip: {\r\n        enabled: true,\r\n        style: {\r\n          fontFamily: \"'Montserrat', 'sans-serif'\",\r\n        },\r\n        theme: \"dark\",\r\n      },\r\n      toolbar: {\r\n        foreColor: \"#ffff\",\r\n        style: {\r\n          color: \"black\",\r\n        },\r\n      },\r\n      colors: [\"#8a8688\", \"#e31a89\"],\r\n      chart: { foreColor: \"#e6e5e8\", id: \"basic-bar\" },\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n      legend: {\r\n        show: false,\r\n      },\r\n      xaxis: {\r\n        categories: [],\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Staked Token Distributions\",\r\n        data: [],\r\n      },\r\n    ],\r\n  });\r\n\r\n  //userName chart state\r\n  const [userNameChart, setUserNameChartState] = useState({\r\n    options: {\r\n      title: {\r\n        text: \"chart\",\r\n        align: \"left\",\r\n        margin: 10,\r\n        offsetX: 0,\r\n        offsetY: 0,\r\n        floating: false,\r\n        style: {\r\n          fontSize: \"14px\",\r\n          fontWeight: \"bold\",\r\n          fontFamily: undefined,\r\n          color: \"#fff\",\r\n        },\r\n      },\r\n      tooltip: {\r\n        enabled: true,\r\n        style: {\r\n          fontFamily: \"'Montserrat', 'sans-serif'\",\r\n        },\r\n\r\n        theme: \"dark\",\r\n      },\r\n      toolbar: {\r\n        foreColor: \"#ffff\",\r\n        style: {\r\n          color: \"black\",\r\n        },\r\n      },\r\n      colors: [\"#8a8688\", \"#e31a89\"],\r\n      chart: { foreColor: \"#e6e5e8\", id: \"basic-bar\" },\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n      legend: {\r\n        show: false,\r\n      },\r\n      xaxis: {\r\n        categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999],\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: \"series-1\",\r\n        data: [0],\r\n      },\r\n      {\r\n        name: \"series-2\",\r\n        data: [0],\r\n      },\r\n    ],\r\n  });\r\n\r\n  const handleStakeTokenChange = (event) => {\r\n    setTokenStakeValue(event.target.value);\r\n  };\r\n\r\n  const calculateTotalMultiplier = () => {\r\n    let multiplier = 0;\r\n\r\n    if (selectedTime) {\r\n      if (selectedTime >= 0 && selectedTime < 90) {\r\n        multiplier += 0;\r\n      } else if (selectedTime >= 90 && selectedTime < 180) {\r\n        multiplier += 0.25;\r\n      } else if (selectedTime >= 180 && selectedTime < 270) {\r\n        multiplier += 0.5;\r\n      } else if (selectedTime >= 270 && selectedTime < 360) {\r\n        multiplier += 1;\r\n      } else if (selectedTime >= 360 && selectedTime < 450) {\r\n        multiplier += 1.5;\r\n      } else if (selectedTime >= 450) {\r\n        multiplier += 2;\r\n      }\r\n    }\r\n\r\n    multiplier +=\r\n      selectedUserNames.length === 0 ? 1 : 2.5 + 0.5 * selectedUserNames.length;\r\n    return multiplier;\r\n  };\r\n  const totalMultiplier = calculateTotalMultiplier();\r\n  useEffect(() => {\r\n    const initialize = async () => {\r\n      try {\r\n        const { address } = await initMetamask();\r\n        const lpRewardContract = await initLpRewardContract();\r\n        const tokenContract = await initlaziTokenContract();\r\n        const contractUserName = await initUserNameContract();\r\n        setLaziTokenContract(tokenContract);\r\n        setLpRewardContract(lpRewardContract);\r\n        setUserNameContract(contractUserName);\r\n        setAddress(address);\r\n      } catch (error) {\r\n        console.error(\"Contract initialization failed:\", error);\r\n      }\r\n    };\r\n\r\n    initialize();\r\n  }, []);\r\n\r\n  const monthOptions = [\r\n    { label: \"90 Days (1.25x)\", value: 90 },\r\n    { label: \"180 Days (1.5x)\", value: 180 },\r\n    { label: \"365 Days (2x)\", value: 365 },\r\n    { label: \"547 Days (1.75x)\", value: 547 },\r\n    { label: \"730 Days (3.5x)\", value: 730 },\r\n  ];\r\n  const userOptions = [\r\n    { label: \"User 1\", value: 1 },\r\n    { label: \"User 2\", value: 2 },\r\n  ];\r\n\r\n  const handleCheckboxChange = (event, userName, tokenId) => {\r\n    const selectedTokenId = event.target.value;\r\n    console.log(\"Selected Token ID:\", selectedTokenId);\r\n\r\n    if (event.target.checked) {\r\n      setSelectedUserNames((prevSelectedUserNames) => [\r\n        ...prevSelectedUserNames,\r\n        tokenId,\r\n      ]);\r\n    } else {\r\n      setSelectedUserNames((prevSelectedUserNames) =>\r\n        prevSelectedUserNames.filter((id) => id !== tokenId)\r\n      );\r\n    }\r\n    const progress = (selectedUserNames.length / mintedUserNames.length) * 100;\r\n    setUserNameChartState({\r\n      ...userNameChart,\r\n      series: [progress],\r\n    });\r\n  };\r\n\r\n  const handleSelectedOptionsChange = (event, newValue) => {\r\n    setSelectedOptions(newValue);\r\n  };\r\n\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  const valuetext = (value) => {\r\n    return `${value} LAZI`;\r\n  };\r\n\r\n  const handlePercentageBalance = (percentage) => {\r\n    // Calculate the selected percentage of your balance\r\n    const balance = userBalance; // Replace with your actual balance\r\n    const selectedValue = (balance * percentage) / 100;\r\n    setTokenStakeValue(selectedValue.toString());\r\n  };\r\n\r\n  const handleApproval = async () => {\r\n    if (window.ethereum) {\r\n      try {\r\n        setTransactionPending(true);\r\n        const gasEstimate = await laziTokenContract.methods\r\n          .approve(lpRewardAddress, userBalance)\r\n          .estimateGas({\r\n            from: userAddress,\r\n          });\r\n\r\n        // Call the approve function to set the allowance\r\n        await laziTokenContract.methods\r\n          .approve(lpRewardAddress, userBalance)\r\n          .send({\r\n            from: userAddress,\r\n            gas: gasEstimate,\r\n            maxPriorityFeePerGas: Web3.utils.toWei(\"32\", \"gwei\"),\r\n          });\r\n\r\n        // Allowance approved successfully\r\n        console.log(\r\n          `Allowance of ${userBalance} approved for ${lpRewardAddress}`\r\n        );\r\n        toast.success(\"Allowance approved successfully\");\r\n      } catch (error) {\r\n        console.error(error);\r\n        toast.error(\"An error occurred while approving allowance\");\r\n      } finally {\r\n        setTransactionPending(false);\r\n      }\r\n    } else {\r\n      console.error(\"Web3 is not available\");\r\n    }\r\n  };\r\n\r\n  const handleStake = async () => {\r\n    return new Promise(async (resolve, reject) => {\r\n      const erc20Amount = tokenStakeValue;\r\n      console.log(\"selected Amount:\", erc20Amount);\r\n\r\n      console.log(\"selected UserName:\", selectedUserNames);\r\n      console.log(\"selected TimePeriod:\", selectedTime);\r\n      console.log(\"user Duration:\", userStakedDuration);\r\n      console.log(\"user Tokens:\", userStakedTokens);\r\n      console.log(\"Total Duration:\", userStakedDuration);\r\n      console.log(\"Total StakedTokens:\", totalStaked);\r\n\r\n      if (lpRewardContract) {\r\n        try {\r\n          const gasEstimate = await lpRewardContract.methods\r\n            .stake(erc20Amount, selectedTime, selectedUserNames)\r\n            .estimateGas({ from: userAddress });\r\n\r\n          lpRewardContract.methods\r\n            .stake(erc20Amount, selectedTime, selectedUserNames)\r\n            .send({\r\n              from: userAddress,\r\n              gas: gasEstimate,\r\n              maxPriorityFeePerGas: Web3.utils.toWei(\"32\", \"gwei\"),\r\n            })\r\n            .on(\"transactionHash\", (hash) => {\r\n              console.log(hash);\r\n            })\r\n            .on(\"receipt\", (receipt) => {\r\n              console.log(receipt);\r\n              toast.success(\"Stake successful!\", {\r\n                position: toast.POSITION.TOP_RIGHT,\r\n              });\r\n              fetchInformation(); // Fetch information after the transaction is successfully mined\r\n              resolve(); // Resolve the promise when the transaction is successful\r\n            })\r\n            .on(\"error\", (error) => {\r\n              console.log(error);\r\n              if (error.code === 4001) {\r\n                toast.error(\"Transaction rejected by the user.\", {\r\n                  position: toast.POSITION.TOP_RIGHT,\r\n                });\r\n                reject(new Error(\"Transaction rejected by the user.\"));\r\n              } else {\r\n                const errorMessage = error.message.split(\"message: \")[2];\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.TOP_RIGHT,\r\n                });\r\n                reject(new Error(errorMessage));\r\n              }\r\n            });\r\n        } catch (error) {\r\n          console.log(error);\r\n          let errorMessage = \"An error occurred during the transaction.\";\r\n\r\n          if (error.message) {\r\n            const startIndex = error.message.indexOf(\" reverted: \") + 10;\r\n            const endIndex = error.message.indexOf(\",\", startIndex);\r\n            errorMessage = error.message.substring(startIndex, endIndex);\r\n          }\r\n\r\n          toast.error(errorMessage);\r\n          reject(new Error(errorMessage));\r\n        }\r\n      } else {\r\n        reject(new Error(\"EngagementContract is not available!\"));\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleUnstake = async () => {\r\n    return new Promise(async (resolve, reject) => {\r\n      if (lpRewardContract) {\r\n        try {\r\n          const gasEstimate = await lpRewardContract.methods\r\n            .unstake()\r\n            .estimateGas({ from: userAddress });\r\n\r\n          lpRewardContract.methods\r\n            .unstake()\r\n            .send({\r\n              from: userAddress,\r\n              gas: gasEstimate,\r\n              maxPriorityFeePerGas: Web3.utils.toWei(\"32\", \"gwei\"),\r\n            })\r\n            .on(\"transactionHash\", (hash) => {\r\n              console.log(hash);\r\n            })\r\n            .on(\"receipt\", (receipt) => {\r\n              console.log(receipt);\r\n              toast.success(\"Unstake successful!\", {\r\n                position: toast.POSITION.TOP_RIGHT,\r\n              });\r\n              fetchInformation(); // Fetch information after the transaction is successfully mined\r\n              resolve(); // Resolve the promise when the transaction is successful\r\n            })\r\n            .on(\"error\", (error) => {\r\n              console.log(error);\r\n              if (error.code === 4001) {\r\n                toast.error(\"Transaction rejected by the user.\", {\r\n                  position: toast.POSITION.TOP_RIGHT,\r\n                });\r\n                reject(new Error(\"Transaction rejected by the user.\"));\r\n              } else {\r\n                const errorMessage = error.message.split(\"message: \")[2];\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.TOP_RIGHT,\r\n                });\r\n                reject(new Error(errorMessage));\r\n              }\r\n            });\r\n        } catch (error) {\r\n          console.log(error);\r\n          let errorMessage = \"An error occurred during the transaction.\";\r\n\r\n          if (error.message) {\r\n            const startIndex = error.message.indexOf(\" reverted: \") + 10;\r\n            const endIndex = error.message.indexOf(\",\", startIndex);\r\n            errorMessage = error.message.substring(startIndex, endIndex);\r\n          }\r\n\r\n          toast.error(errorMessage);\r\n          reject(new Error(errorMessage));\r\n        }\r\n      } else {\r\n        reject(new Error(\"EngagementContract is not available!\"));\r\n      }\r\n    });\r\n  };\r\n\r\n  const fetchTotalStaked = useCallback(async () => {\r\n    try {\r\n      const totalStaked = await lpRewardContract.methods.totalStaked().call();\r\n      setTotalStaked(totalStaked);\r\n      console.log(\"toktal staked! \", totalStaked);\r\n    } catch (error) {\r\n      console.error(\"Error fetching total staked:\", error);\r\n    }\r\n  }, [lpRewardContract]);\r\n\r\n  const fetchUserRewards = useCallback(async () => {\r\n    try {\r\n      console.log(\"address: \", userAddress);\r\n      const userRewardsValue = await lpRewardContract.methods\r\n        .getUserRewards(userAddress)\r\n        .call();\r\n      const etherValue = (parseInt(userRewardsValue) / 10 ** 18).toFixed(3);\r\n      setUserRewards(etherValue);\r\n    } catch (error) {\r\n      console.error(\"Error fetching user rewards:\", error);\r\n    }\r\n  }, [userAddress, lpRewardContract]);\r\n  const fetchUserBalance = useCallback(async () => {\r\n    try {\r\n      console.log(\"address: \", userAddress);\r\n      const balance = await laziTokenContract.methods\r\n        .balanceOf(userAddress)\r\n        .call();\r\n      setUserBalance(balance);\r\n    } catch (error) {\r\n      console.error(\"Error fetching user Balance:\", error);\r\n    }\r\n  }, [userAddress, laziTokenContract]);\r\n\r\n  const fetchUserAPR = useCallback(async () => {\r\n    try {\r\n      console.log(\"address: \", userAddress);\r\n      const REWARD_PER_DAY = await lpRewardContract.methods\r\n        .REWARD_PER_SEC()\r\n        .call();\r\n      const totalStaked = await lpRewardContract.methods.totalStaked().call();\r\n      console.log(\"total staked! \", totalStaked);\r\n\r\n      if (totalStaked === \"0\") {\r\n        console.log(\"No tokens staked.\");\r\n      } else {\r\n        const APR =\r\n          (BigInt(REWARD_PER_DAY) * BigInt(86400) * BigInt(365) * BigInt(100)) /\r\n          BigInt(totalStaked);\r\n        console.log(\"APR = \" + APR.toString() + \"%\");\r\n        const etherValue = (parseInt(APR) / 10 ** 18).toFixed(3);\r\n        setUserAPR(etherValue);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching user APR:\", error);\r\n    }\r\n  }, [userAddress, lpRewardContract]);\r\n\r\n  const getOwnerMintedUserNames = useCallback(async () => {\r\n    try {\r\n      const mintedDomains = [];\r\n      // Get the token IDs owned by the connected account\r\n      const tokenIds = await userNameContract.methods\r\n        .tokensOfOwner(userAddress)\r\n        .call();\r\n      console.log(\"tokenIDs: \", tokenIds);\r\n      for (const tokenId of tokenIds) {\r\n        const mintedDomain = await userNameContract.methods\r\n          .domainNameOf(tokenId)\r\n          .call();\r\n        mintedDomains.push({ domainName: mintedDomain + \".lazi\", tokenId });\r\n      }\r\n\r\n      setMintedUserNames(mintedDomains);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, [userAddress, userNameContract]);\r\n\r\n  const fetchDistributionsData = useCallback(async () => {\r\n    try {\r\n      const daysToStake = [30, 91, 82, 365, 547, 730]; // Example data\r\n\r\n      const distributions = await lpRewardContract.methods\r\n        .getDistributions(daysToStake)\r\n        .call();\r\n      const lockPeriodDistributions = distributions[0];\r\n      const stakedTokenDistributions = distributions[1];\r\n      const rewardTokenDistributions = distributions[2];\r\n\r\n      console.log(lockPeriodDistributions); // array of lock period distributions\r\n      console.log(stakedTokenDistributions); // array of staked token distributions\r\n      console.log(rewardTokenDistributions); // array of reward token distributions\r\n      // Rest of the code\r\n      console.log(\"Graph data fetch success!!!\");\r\n      setLockPeriodState((prevState) => ({\r\n        ...prevState,\r\n        options: {\r\n          ...prevState.options,\r\n          xaxis: {\r\n            categories: daysToStake,\r\n          },\r\n        },\r\n        series: [\r\n          {\r\n            ...prevState.series[0],\r\n            data: lockPeriodDistributions,\r\n          },\r\n        ],\r\n      }));\r\n\r\n      setStakedTokenState((prevState) => ({\r\n        ...prevState,\r\n        options: {\r\n          ...prevState.options,\r\n          xaxis: {\r\n            categories: daysToStake,\r\n          },\r\n        },\r\n        series: [\r\n          {\r\n            ...prevState.series[0],\r\n            data: stakedTokenDistributions,\r\n          },\r\n        ],\r\n      }));\r\n\r\n      setRewardTokenState((prevState) => ({\r\n        ...prevState,\r\n        options: {\r\n          ...prevState.options,\r\n          xaxis: {\r\n            categories: daysToStake,\r\n          },\r\n        },\r\n        series: [\r\n          {\r\n            ...prevState.series[0],\r\n            data: rewardTokenDistributions,\r\n          },\r\n        ],\r\n      }));\r\n      console.log(\"Graph data Update success!!!\");\r\n    } catch (error) {\r\n      if (error instanceof Error) {\r\n        console.error(error.message);\r\n      } else {\r\n        console.error(error);\r\n      }\r\n    }\r\n  }, [lpRewardContract]);\r\n\r\n  const fetchInformation = useCallback(async () => {\r\n    try {\r\n      // Call the balanceOf() function to get the user's balance\r\n      const balance = await laziTokenContract.methods\r\n        .balanceOf(userAddress)\r\n        .call();\r\n      setUserBalance(balance);\r\n      // const totalStakers = await lpRewardContract.methods.totalUsers().call();\r\n      // setTotalStakers(totalStakers);\r\n\r\n      // const totalStakedDuration = await lpRewardContract.methods\r\n      //   .totalStakedDuration()\r\n      //   .call();\r\n      // setTotalStakedDuration(totalStakedDuration);\r\n\r\n      const userInfo = await lpRewardContract.methods\r\n        .stakes(userAddress)\r\n        .call();\r\n      setUserStakedDuration(userInfo.lockPeriod);\r\n      setUserStakedTokens(userInfo.stakingAmount);\r\n      console.log(\"user Staked!:  \", userInfo.stakingAmount);\r\n      console.log(\"user Staked Duration!:  \", userInfo.lockPeriod);\r\n\r\n      // const userDurationScore =\r\n      //   (userInfo.stakeDuration / totalStakedDuration) * 100;\r\n      // const userStakedScore = (userInfo.stakedLazi / totalStakedLazi) * 100;\r\n      // const averageStakedLazi = totalStakedLazi / totalStakers;\r\n      // const averageStakedDuration = totalStakedDuration / totalStakers;\r\n      // setAvgStakedDuration(averageStakedDuration);\r\n      // setAvgStakedLazi(averageStakedLazi);\r\n      // setUserStakedScore(userStakedScore);\r\n      // setUserDurationScore(userDurationScore);\r\n      // Update the userBalance state variable with the retrieved balance\r\n      console.log(\"UserBalance\", balance);\r\n    } catch (error) {\r\n      console.error(\"Error fetching balance:\", error);\r\n    }\r\n  }, [userAddress, laziTokenContract, lpRewardContract]);\r\n\r\n  useEffect(() => {\r\n    if (userAddress && lpRewardContract && userNameContract) {\r\n      fetchUserRewards();\r\n      fetchTotalStaked();\r\n      getOwnerMintedUserNames();\r\n      fetchDistributionsData();\r\n      fetchUserAPR();\r\n      fetchUserBalance();\r\n      fetchInformation();\r\n    }\r\n  }, [\r\n    userAddress,\r\n    userNameContract,\r\n    lpRewardContract,\r\n    fetchUserRewards,\r\n    fetchTotalStaked,\r\n    getOwnerMintedUserNames,\r\n    fetchDistributionsData,\r\n    fetchUserAPR,\r\n    fetchUserBalance,\r\n    fetchInformation,\r\n  ]);\r\n\r\n  const handleUserRewardsClick = async () => {\r\n    fetchUserRewards();\r\n  };\r\n  const handleTotalStakedClick = async () => {\r\n    fetchTotalStaked();\r\n  };\r\n  const handleCollectButtonClick = async () => {\r\n    try {\r\n      // ensure the staking contract instance has been initialized\r\n      if (!lpRewardContract) {\r\n        await initLpRewardContract();\r\n      }\r\n\r\n      // execute the getReward function in the smart contract\r\n      const tx = await lpRewardContract.methods.harvest().send({\r\n        from: userAddress,\r\n        maxPriorityFeePerGas: Web3.utils.toWei(\"32\", \"gwei\"),\r\n      });\r\n\r\n      // Wait for the transaction to be confirmed\r\n      const receipt = await tx.wait();\r\n\r\n      // Check for errors in the transaction receipt\r\n      if (receipt.status === false) {\r\n        throw new Error(\r\n          `Transaction failed with status code ${receipt.status}`\r\n        );\r\n      }\r\n\r\n      // Display a success message to the user\r\n      alert(\"Rewards collected successfully!\");\r\n    } catch (error) {\r\n      // Display an error message to the user\r\n      alert(`Error collecting rewards: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  //funtion to add token to metamsk\r\n  const addTokenToMetaMask = async () => {\r\n    const { ethereum } = window;\r\n\r\n    if (!(ethereum && ethereum.isMetaMask)) {\r\n      toast.message(\"Use Metamask!\");\r\n      return;\r\n    }\r\n    try {\r\n      // wasAdded is a boolean. Like any RPC method, an error may be thrown.\r\n      const wasAdded = await ethereum.request({\r\n        method: \"wallet_watchAsset\",\r\n        params: {\r\n          type: \"ERC20\", // Initially only supports ERC20, but eventually more!\r\n          options: {\r\n            address: laziTokenAddress, // The address that the token is at.\r\n            symbol: \"LAZI\", // A ticker symbol or shorthand, up to 5 chars.\r\n            decimals: 18, // The number of decimals in the token\r\n            image:\r\n              \"https://pbs.twimg.com/profile_images/1609799908101324800/6RP_7TpH_400x400.jpg\", // A string url of the token logo\r\n          },\r\n        },\r\n      });\r\n\r\n      if (wasAdded) {\r\n        console.log(\"Thanks for your interest!\");\r\n      } else {\r\n        console.log(\"Your loss!\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Access the selected option value whenever it changes\r\n    if (selectedTime) {\r\n      console.log(\"Selected Option:\", selectedTime);\r\n    }\r\n  }, [selectedTime]);\r\n\r\n  function AnimatedNumber({ targetNumber, suffix }) {\r\n    const [currentNumber, setCurrentNumber] = useState(0);\r\n\r\n    useEffect(() => {\r\n      const interval = setInterval(() => {\r\n        if (currentNumber < targetNumber) {\r\n          setCurrentNumber((prevNumber) => prevNumber + 1);\r\n        }\r\n      }, 5);\r\n\r\n      return () => clearInterval(interval);\r\n    }, [currentNumber, targetNumber]);\r\n\r\n    return (\r\n      <b>\r\n        {currentNumber}\r\n        {suffix}\r\n      </b>\r\n    );\r\n  }\r\n  function AnimatedNumber1({ targetNumber, suffix }) {\r\n    const [currentNumber, setCurrentNumber] = useState(0);\r\n\r\n    useEffect(() => {\r\n      const interval = setInterval(() => {\r\n        if (currentNumber < targetNumber) {\r\n          setCurrentNumber((prevNumber) => prevNumber + 1500);\r\n        }\r\n      }, 1);\r\n\r\n      return () => clearInterval(interval);\r\n    }, [currentNumber, targetNumber]);\r\n\r\n    return (\r\n      <b>\r\n        {currentNumber}\r\n        {suffix}\r\n      </b>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box className={classes.bannerBox}>\r\n        <div className={classes.warningContainer}>\r\n          <Paper className={classes.warningMessage}>\r\n            <p>Staking LAZI UserNames gives 3x - 5x Yield Boost</p>\r\n          </Paper>\r\n        </div>\r\n        <Grid container spacing={3}>\r\n          <Grid item md={isMobile ? 12 : 6} xs={isMobile ? 12 : 12}>\r\n            <Paper\r\n              className={classes.root}\r\n              elevation={2}\r\n              style={{\r\n                border: \"3px solid rgba(236, 22, 127, 0.5) \",\r\n                borderRadius: 10,\r\n              }}\r\n            >\r\n              <Box className={classes.root}>\r\n                {!(\r\n                  locked ||\r\n                  flexible ||\r\n                  // confirmStaking ||\r\n                  afterLocked ||\r\n                  AddLockedButton ||\r\n                  addFlexibleButton ||\r\n                  switchToLock\r\n                ) && (\r\n                  <Box>\r\n                    <Box className={classes.tooltipIconHeader}>\r\n                      <Typography variant=\"h2\">LP Reward</Typography>\r\n                      <Tooltip\r\n                        title=\"Stake LAZI-MATIC LP Here.\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        placement={\"top\"}\r\n                      >\r\n                        <InfoIcon fontSize={\"medium\"} />\r\n                      </Tooltip>\r\n                    </Box>\r\n                    <Box style={{display:'flex',flexDirection:'column' ,gap:5}}>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        style={{\r\n                          backgroundColor: \"#e31a89\",\r\n                          color: \"#fff\",\r\n                          height: 40,\r\n                          paddingInline: 30,\r\n                          fontSize: 16,\r\n                          marginTop: 5,\r\n                        }}\r\n                        onClick={handleStakeInfoButton}\r\n                      >\r\n                        Stake Info\r\n                      </Button>\r\n                      <Button\r\n  variant=\"contained\"\r\n  style={{\r\n    backgroundColor: \"#e31a89\",\r\n    color: \"#fff\",\r\n    height: 40,\r\n    paddingInline: 15,\r\n    fontSize: 12,\r\n    marginTop: 5,\r\n  }}\r\n  onClick={() =>\r\n    window.open(\r\n      \"https://quickswap.exchange/#/pools/v2?currency0=ETH&currency1=0xd7Dd450Bb046C886f4b680813A9e7E4b7f91ba07\",\r\n      \"_blank\"\r\n    )\r\n  }\r\n>\r\n  QuickSwap\r\n</Button>\r\n\r\n                    </Box>\r\n                  </Box>\r\n                )}\r\n\r\n                <br></br>\r\n                {/* <Box mt={2} mb={2}>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    className={classes.inputLabel}\r\n                    style={{ fontSize: \"12px\", marginBottom: 2 }}\r\n                  >\r\n                    Enter Token to Stake\r\n                  </Typography>\r\n                  <TextField\r\n                    className={classes.input}\r\n                    value={sliderValue}\r\n                    onChange={handleSliderChange}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Box> */}\r\n                {/* <Box mt={4}>\r\n                  <Autocomplete\r\n                    disablePortal\r\n                    id=\"tags-standard\"\r\n                    sx={{ width: 300 }}\r\n                    options={monthOptions}\r\n                    value={\r\n                      monthOptions.find(\r\n                        (option) => option.value === selectedTime\r\n                      ) || null\r\n                    }\r\n                    getOptionLabel={(option) => option.label}\r\n                    onChange={(event, newValue) =>\r\n                      setSelectedTime(newValue?.value || null)\r\n                    }\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        variant=\"outlined\"\r\n                        label=\"Month Stake\"\r\n                      />\r\n                    )}\r\n                  />\r\n                  <br></br>\r\n                </Box> */}\r\n                <br></br>\r\n                {/* <div style={{ display: \"flex\" }}>\r\n                  <div>\r\n                    <Box className={classes.heading}>\r\n                      <Typography variant=\"h2\">Users Stake</Typography>\r\n                    </Box>\r\n                    <br></br>\r\n                    <Box>\r\n                      {mintedUserNames.length === 0 ? (\r\n                        <Typography variant=\"h5\">\r\n                          No User Name minted yet.\r\n                        </Typography>\r\n                      ) : (\r\n                        mintedUserNames.map(({ domainName, tokenId }) => (\r\n                          <Box className={classes.checkbox} key={domainName}>\r\n                            <Checkbox\r\n                              checked={selectedUserNames.includes(tokenId)}\r\n                              onChange={(event) =>\r\n                                handleCheckboxChange(event, domainName, tokenId)\r\n                              }\r\n                              value={tokenId}\r\n                              size=\"small\"\r\n                              inputProps={{\r\n                                \"aria-label\": \"checkbox with small size\",\r\n                              }}\r\n                            />\r\n                            <Typography variant=\"h5\">{domainName}</Typography>\r\n                          </Box>\r\n                        ))\r\n                      )}\r\n                    </Box>\r\n                  </div>\r\n                  <div style={{ marginLeft: \"auto\" }}>\r\n                    <Chart\r\n                      options={userNameChart.options}\r\n                      series={[\r\n                        selectedUserNames.length,\r\n                        mintedUserNames.length + 1,\r\n                      ]}\r\n                      type=\"donut\"\r\n                      width=\"80%\"\r\n                    />{\" \"}\r\n                  </div>\r\n                </div>  */}\r\n                {/* <Box className={classes.Buttonbox} mt={2}>\r\n                  <Box mt={2}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      style={{ backgroundColor: \"#e31a89\", color: \"#fff\" }}\r\n                      onClick={handleStake}\r\n                    >\r\n                      Stake\r\n                    </Button>\r\n                  </Box>\r\n                </Box> */}\r\n                <br></br>\r\n                {/* <Box mt={2}>\r\n                  <h3>Text Area</h3>\r\n                  <div\r\n                    style={{\r\n                      border: \"1px solid\",\r\n                      padding: \"10px\",\r\n                      borderRadius: \"7px\",\r\n                    }}\r\n                  >\r\n                     <div class=\"info\">\r\n                      <div class=\"label\">Total Locked:</div>\r\n                      <div class=\"value\">\r\n                        <AnimatedNumber1 targetNumber={1888888} suffix=\"LAZI\" />\r\n                      </div>\r\n                    </div> \r\n                    <div class=\"info\">\r\n                      <div class=\"label\">Average lock duration:</div>\r\n                      <div\r\n                        class=\"value\"\r\n                        style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n                      >\r\n                        <AnimatedNumber targetNumber={42} suffix=\"weeks\" />\r\n                        <div class=\"image-container\">\r\n                          <img\r\n                            src=\"./images/clock.png\"\r\n                            alt=\"Your image description\"\r\n                            style={{ width: \"20px\" }}\r\n                          />\r\n                          <div class=\"info-text\">Time remaining</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"info\">\r\n                      <div class=\"label\">Performance fee:</div>\r\n                      <div class=\"value\">\r\n                        <AnimatedNumber targetNumber={0} suffix=\"\" />\r\n                        ~ <AnimatedNumber targetNumber={2} suffix=\"%\" />\r\n                      </div>\r\n                    </div> \r\n                    <a\r\n                      href=\"https://mumbai.polygonscan.com/address/0xf472134D28216581F47304c66Fb18922a146e514\"\r\n                      style={{\r\n                        fontSize: \"20px\",\r\n                        marginTop: \"15px\",\r\n                        color: \"#e31a89\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      See Token Info\r\n                      <img\r\n                        src=\"./images/link.png\"\r\n                        alt=\"External Link Icon\"\r\n                        style={{ verticalAlign: \"middle\", width: \"25px\" }}\r\n                      />\r\n                    </a>\r\n                    <br></br>\r\n                    <a\r\n                      href=\"https://lazi.gitbook.io/whitepaper/staking-rewards\"\r\n                      style={{\r\n                        fontSize: \"20px\",\r\n                        marginTop: \"15px\",\r\n                        color: \"#e31a89\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      View Tutorial\r\n                      <img\r\n                        src=\"./images/link.png\"\r\n                        alt=\"External Link Icon\"\r\n                        style={{ verticalAlign: \"middle\", width: \"25px\" }}\r\n                      />\r\n                    </a>\r\n                    <br></br>\r\n                    <a\r\n                      href=\"https://mumbai.polygonscan.com/address/0xba83dA230E4727013E7d38D8e87A6A811F1514d9\"\r\n                      style={{\r\n                        fontSize: \"20px\",\r\n                        marginTop: \"15px\",\r\n                        color: \"#e31a89\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      View Contract\r\n                      <img\r\n                        src=\"./images/etherscan.svg\"\r\n                        alt=\"External Link Icon\"\r\n                        style={{\r\n                          marginLeft: \"3px\",\r\n                          verticalAlign: \"middle\",\r\n                          width: \"25px\",\r\n                        }}\r\n                      />\r\n                    </a>\r\n                    <br></br>\r\n                    <button\r\n                      style={{\r\n                        fontSize: \"20px\",\r\n                        marginTop: \"10px\",\r\n                        color: \"#e31a89\",\r\n                        border: \"2px solid #e31a89\",\r\n                        borderRadius: \"5px\",\r\n                        padding: \"5px 10px\",\r\n                        boxShadow: \"0px 3px 3px rgba(0, 0, 0, 0.1)\",\r\n                        transition: \"all 0.3s ease\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      onClick={addTokenToMetaMask}\r\n                      onMouseOver={(e) => {\r\n                        e.target.style.backgroundColor = \"#e31a89\";\r\n                        e.target.style.color = \"#fff\";\r\n                      }}\r\n                      onMouseLeave={(e) => {\r\n                        e.target.style.backgroundColor = \"transparent\";\r\n                        e.target.style.color = \"#e31a89\";\r\n                      }}\r\n                    >\r\n                      Add to Wallet\r\n                      <img\r\n                        src=\"./images/metamask.png\"\r\n                        alt=\"Metamask logo\"\r\n                        style={{\r\n                          border: \"none\",\r\n                          marginLeft: \"5px\",\r\n                          verticalAlign: \"middle\",\r\n                          width: \"25px\",\r\n                          backgroundColor: \"transparent\",\r\n                        }}\r\n                      />\r\n                    </button>\r\n\r\n                    <br></br>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      style={{ color: \"#e31a89\", marginTop: \"15px\" }}\r\n                    >\r\n                      Auto/Locked\r\n                    </Button>\r\n                    <div class=\"image-container\">\r\n                      <img\r\n                        src=\"./images/info.png\"\r\n                        alt=\"Your image description\"\r\n                        style={{\r\n                          verticalAlign: \"middle\",\r\n                          width: \"20px\",\r\n                          marginTop: \"13px\",\r\n                          marginLeft: \"10px\",\r\n                        }}\r\n                      />\r\n                      <div class=\"info-text\">information</div>\r\n                    </div>\r\n                  </div>\r\n                </Box> */}\r\n\r\n                {/* <Box\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-around\",\r\n                        marginTop:-40\r\n                      }}\r\n                    >\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        style={{\r\n                          backgroundColor: \"#e31a89\",\r\n                          color: \"#fff\",\r\n                          height: 25,\r\n                          borderRadius: 20,\r\n                          fontSize: 12,\r\n                          fontWeight: \"bold\",\r\n                          marginTop: 17,\r\n                        }}\r\n                        // onClick={() => handleDayStakeButton(1)}\r\n                      >\r\n                        25%\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        style={{\r\n                          backgroundColor: \"#e31a89\",\r\n                          color: \"#fff\",\r\n                          height: 25,\r\n                          borderRadius: 20,\r\n                          fontSize: 12,\r\n                          fontWeight: \"bold\",\r\n                          marginTop: 17,\r\n                        }}\r\n                        // onClick={() => handleDayStakeButton(2)}\r\n                      >\r\n                        50%\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        style={{\r\n                          backgroundColor: \"#e31a89\",\r\n                          color: \"#fff\",\r\n                          height: 25,\r\n                          borderRadius: 20,\r\n                          fontSize: 12,\r\n                          fontWeight: \"bold\",\r\n                          marginTop: 17,\r\n                        }}\r\n                        // onClick={() => handleDayStakeButton(3)}\r\n                      >\r\n                        75%\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        style={{\r\n                          backgroundColor: \"#e31a89\",\r\n                          color: \"#fff\",\r\n                          height: 25,\r\n                          borderRadius: 20,\r\n                          fontSize: 12,\r\n                          fontWeight: \"bold\",\r\n                          marginTop: 17,\r\n                        }}\r\n                        // onClick={() => handleDayStakeButton(4)}\r\n                      >\r\n                        max\r\n                      </Button>\r\n                    </Box> */}\r\n\r\n                {!(\r\n                  locked ||\r\n                  flexible ||\r\n                  // confirmStaking ||\r\n                  afterLocked ||\r\n                  AddLockedButton ||\r\n                  addFlexibleButton ||\r\n                  switchToLock\r\n                ) && (\r\n                  <Box\r\n                    mt={2}\r\n                    mb={2}\r\n                    style={{\r\n                      border: \"2px solid #3C3C3C\",\r\n                      borderRadius: 8,\r\n                      padding: 5,\r\n                      paddingBlock: 10,\r\n                      transition: \"all 0.5s\",\r\n                      marginTop: -28,\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      variant=\"h2\"\r\n                      style={{\r\n                        fontSize: 14,\r\n                        whiteSpace: \"nowrap\",\r\n                        marginLeft: 10,\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                      LAZI Stake\r\n                    </Typography>\r\n                    <Box marginBottom={3}>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        className={classes.inputLabel}\r\n                        style={{ fontSize: \"13px\", marginBottom: 5 }}\r\n                      >\r\n                        Enter Token to Stake\r\n                      </Typography>\r\n                      <TextField\r\n                        className={classes.input}\r\n                        value={tokenStakeValue}\r\n                        onChange={handleStakeTokenChange}\r\n                        variant=\"outlined\"\r\n                        style={{ marginBottom: 5 }}\r\n                      />\r\n                    </Box>\r\n\r\n                    {/* Percentage buttons in Locked buttons */}\r\n                    <Box\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-around\",\r\n                        marginTop: -25,\r\n                        marginBottom: 22,\r\n                      }}\r\n                    >\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        style={{\r\n                          backgroundColor: \"#e31a89\",\r\n                          color: \"#fff\",\r\n                          height: 25,\r\n                          borderRadius: 20,\r\n                          fontSize: 12,\r\n                          fontWeight: \"bold\",\r\n                          marginTop: 17,\r\n                        }}\r\n                        onClick={() => handlePercentageBalance(25)}\r\n                      >\r\n                        25%\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        style={{\r\n                          backgroundColor: \"#e31a89\",\r\n                          color: \"#fff\",\r\n                          height: 25,\r\n                          borderRadius: 20,\r\n                          fontSize: 12,\r\n                          fontWeight: \"bold\",\r\n                          marginTop: 17,\r\n                        }}\r\n                        onClick={() => handlePercentageBalance(50)}\r\n                      >\r\n                        50%\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        style={{\r\n                          backgroundColor: \"#e31a89\",\r\n                          color: \"#fff\",\r\n                          height: 25,\r\n                          borderRadius: 20,\r\n                          fontSize: 12,\r\n                          fontWeight: \"bold\",\r\n                          marginTop: 17,\r\n                        }}\r\n                        onClick={() => handlePercentageBalance(75)}\r\n                      >\r\n                        75%\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        style={{\r\n                          backgroundColor: \"#e31a89\",\r\n                          color: \"#fff\",\r\n                          height: 25,\r\n                          borderRadius: 20,\r\n                          fontSize: 12,\r\n                          fontWeight: \"bold\",\r\n                          marginTop: 17,\r\n                        }}\r\n                        onClick={() => handlePercentageBalance(100)}\r\n                      >\r\n                        Max\r\n                      </Button>\r\n                    </Box>\r\n\r\n                    {/* Added minted usernames */}\r\n\r\n                    <Box style={{ marginTop: 22, marginBottom: 15 }}>\r\n                      <div style={{ display: \"flex\" }}>\r\n                        <div>\r\n                          <Box className={classes.heading}>\r\n                            <Typography variant=\"h2\" style={{ fontSize: 16 }}>\r\n                              Users Stake\r\n                            </Typography>\r\n                          </Box>\r\n                          <br></br>\r\n                          <Box>\r\n                            {mintedUserNames.length === 0 ? (\r\n                              <Typography variant=\"h5\" style={{ fontSize: 14 }}>\r\n                                No User Name minted yet.\r\n                              </Typography>\r\n                            ) : (\r\n                              mintedUserNames.map(({ domainName, tokenId }) => (\r\n                                <Box\r\n                                  className={classes.checkbox}\r\n                                  key={domainName}\r\n                                >\r\n                                  <Checkbox\r\n                                    checked={selectedUserNames.includes(\r\n                                      tokenId\r\n                                    )}\r\n                                    onChange={(event) =>\r\n                                      handleCheckboxChange(\r\n                                        event,\r\n                                        domainName,\r\n                                        tokenId\r\n                                      )\r\n                                    }\r\n                                    value={tokenId}\r\n                                    size=\"small\"\r\n                                    inputProps={{\r\n                                      \"aria-label\": \"checkbox with small size\",\r\n                                    }}\r\n                                  />\r\n                                  <Typography variant=\"h5\">\r\n                                    {domainName}\r\n                                  </Typography>\r\n                                </Box>\r\n                              ))\r\n                            )}\r\n                          </Box>\r\n                        </div>\r\n                        {/* <div style={{ marginLeft: \"auto\" }}>\r\n                          <Chart\r\n                            options={userNameChart.options}\r\n                            series={[\r\n                              selectedUserNames.length,\r\n                              mintedUserNames.length + 1,\r\n                            ]}\r\n                            type=\"donut\"\r\n                            width=\"80%\"\r\n                          />{\" \"}\r\n                        </div> */}\r\n                      </div>\r\n                    </Box>\r\n\r\n                    <Box display=\"flex\" justifyContent=\"space-around\" mt={2}>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        style={{\r\n                          backgroundColor: \"#e31a89\",\r\n                          color: \"#fff\",\r\n                          height: 30,\r\n                          fontSize: 14,\r\n                          marginLeft: 5,\r\n                          transition: \"opacity 0.5s ease-in-out\",\r\n                        }}\r\n                        onClick={handleFlexibleButton}\r\n                      >\r\n                        Flexible\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        style={{\r\n                          backgroundColor: \"#e31a89\",\r\n                          color: \"#fff\",\r\n                          height: 30,\r\n                          fontSize: 14,\r\n                          transition: \"all 0.5s\",\r\n                        }}\r\n                        onClick={handleLockedButton}\r\n                      >\r\n                        Locked\r\n                      </Button>\r\n                    </Box>\r\n                  </Box>\r\n                )}\r\n\r\n                {/* Content to be shown when Clicked on flexible button */}\r\n                {flexible && (\r\n                  <Box>\r\n                    <Box\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                      }}\r\n                    >\r\n                      <Box>\r\n                        <Typography\r\n                          variant=\"h2\"\r\n                          style={{ fontSize: 14, whiteSpace: \"none\" }}\r\n                        >\r\n                          My position\r\n                          <span\r\n                            style={{\r\n                              backgroundColor: \"#e31a89\",\r\n                              paddingInline: 4,\r\n                              fontSize: 16,\r\n                              borderRadius: 2,\r\n                              marginLeft: 2,\r\n                            }}\r\n                          >\r\n                            Flexible\r\n                          </span>\r\n                        </Typography>\r\n                      </Box>\r\n                      <Box>\r\n                        <ArrowBackIcon\r\n                          onClick={handleConfirmStakingButton}\r\n                          style={{ cursor: \"pointer\" }}\r\n                        />\r\n                      </Box>\r\n                    </Box>\r\n                    <Box\r\n                      bgcolor={\"black\"}\r\n                      paddingBlock={4}\r\n                      borderRadius={8}\r\n                      marginTop={4}\r\n                    >\r\n                      <Box paddingBottom={2} paddingTop={2}>\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            paddingInline: 15,\r\n                            paddingBlock: 6,\r\n                          }}\r\n                        >\r\n                          <div>Your Rewards </div>\r\n                          <div style={{ fontWeight: \"bold\" }}>\r\n                            {userRewards}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            paddingInline: 15,\r\n                            paddingBlock: 6,\r\n                          }}\r\n                        >\r\n                          <div>Your Stake</div>\r\n                          <div style={{ fontWeight: \"bold\" }}>\r\n                            {userStakedTokens}{\" \"}\r\n                            <span>\r\n                              <Button\r\n                                style={{\r\n                                  border: \"2px solid #e31a89\",\r\n                                  borderRadius: 8,\r\n                                  color: \"#e31a89\",\r\n                                  height: 25,\r\n                                }}\r\n                                onClick={handleAddFlexibleButton}\r\n                              >\r\n                                +\r\n                              </Button>\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            paddingInline: 15,\r\n                            paddingBlock: 6,\r\n                          }}\r\n                        >\r\n                          <div>APR</div>\r\n                          <div style={{ fontWeight: \"bold\" }}>{userAPR}</div>\r\n                        </div>\r\n\r\n                        {/* <Box\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-evenly\",\r\n                          }}\r\n                        >\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            style={{\r\n                              backgroundColor: \"#e31a89\",\r\n                              color: \"#fff\",\r\n                              height: 25,\r\n                              borderRadius: 20,\r\n                              fontSize: 12,\r\n                              fontWeight: \"bold\",\r\n                              marginTop: 17,\r\n                              width: 35,\r\n                            }}\r\n                            onClick={() => handleDayStakeButton(1)}\r\n                          >\r\n                            1W\r\n                          </Button>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            style={{\r\n                              backgroundColor: \"#e31a89\",\r\n                              color: \"#fff\",\r\n                              height: 25,\r\n                              borderRadius: 20,\r\n                              fontSize: 12,\r\n                              fontWeight: \"bold\",\r\n                              marginTop: 17,\r\n                              width: 35,\r\n                            }}\r\n                            onClick={() => handleDayStakeButton(2)}\r\n                          >\r\n                            2W\r\n                          </Button>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            style={{\r\n                              backgroundColor: \"#e31a89\",\r\n                              color: \"#fff\",\r\n                              height: 25,\r\n                              borderRadius: 20,\r\n                              fontSize: 12,\r\n                              fontWeight: \"bold\",\r\n                              marginTop: 17,\r\n                              width: 35,\r\n                            }}\r\n                            onClick={() => handleDayStakeButton(3)}\r\n                          >\r\n                            3W\r\n                          </Button>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            style={{\r\n                              backgroundColor: \"#e31a89\",\r\n                              color: \"#fff\",\r\n                              height: 25,\r\n                              borderRadius: 20,\r\n                              fontSize: 12,\r\n                              fontWeight: \"bold\",\r\n                              marginTop: 17,\r\n                              width: 35,\r\n                            }}\r\n                            onClick={() => handleDayStakeButton(4)}\r\n                          >\r\n                            4W\r\n                          </Button>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            style={{\r\n                              backgroundColor: \"#e31a89\",\r\n                              color: \"#fff\",\r\n                              height: 25,\r\n                              borderRadius: 20,\r\n                              fontSize: 12,\r\n                              fontWeight: \"bold\",\r\n                              marginTop: 17,\r\n                              width: 35,\r\n                            }}\r\n                            onClick={() => handleDayStakeButton(52)}\r\n                          >\r\n                            Max\r\n                          </Button>\r\n                        </Box> */}\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          style={{\r\n                            backgroundColor: \"#e31a89\",\r\n                            color: \"#fff\",\r\n                            height: 40,\r\n                            // paddingInline: 30,\r\n                            fontSize: 16,\r\n                            marginTop: 25,\r\n                            marginLeft: 50,\r\n                          }}\r\n                          onClick={handleSwitchToLock}\r\n                        >\r\n                          Switch to Lock\r\n                        </Button>\r\n\r\n                        {/* <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            paddingInline: 15,\r\n                            paddingBlock: 6,\r\n                          }}\r\n                        >\r\n                          <div>User Balance</div>\r\n                          <div style={{ fontWeight: \"bold\" }}>444</div>\r\n                        </div> */}\r\n\r\n                        {/* <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            paddingInline: 15,\r\n                            paddingBlock: 6,\r\n                          }}\r\n                        >\r\n                          <div>Yield Boost</div>\r\n                          <div style={{ fontWeight: \"bold\" }}>2x</div>\r\n                        </div> */}\r\n                      </Box>\r\n                    </Box>\r\n                  </Box>\r\n                )}\r\n                {switchToLock && (\r\n                  <Box>\r\n                    <Box\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                      }}\r\n                    >\r\n                      <Box>\r\n                        <Typography\r\n                          variant=\"h2\"\r\n                          style={{ fontSize: 14, whiteSpace: \"none\" }}\r\n                        >\r\n                          Switch to\r\n                          <span\r\n                            style={{\r\n                              backgroundColor: \"#e31a89\",\r\n                              paddingInline: 4,\r\n                              fontSize: 16,\r\n                              borderRadius: 2,\r\n                              marginLeft: 2,\r\n                            }}\r\n                          >\r\n                            Locked\r\n                          </span>\r\n                        </Typography>\r\n                      </Box>\r\n                      <Box>\r\n                        <ArrowBackIcon\r\n                          onClick={handleSwitchLockedGoBack}\r\n                          style={{ cursor: \"pointer\" }}\r\n                        />\r\n                      </Box>\r\n                    </Box>\r\n\r\n                    {/* <Box\r\n  style={{\r\n    border: \"1px solid #3C3C3C\",\r\n    borderRadius: 10,\r\n    marginTop: 40,\r\n    paddingBottom: 20,\r\n    paddingTop: 10,\r\n    paddingInline: 10,\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  }}\r\n>\r\n  <div>\r\n    <Typography\r\n      variant=\"h4\"\r\n      style={{ fontSize: 15, fontWeight: \"bold\" }}\r\n    >\r\n      Recent Lazi Profit\r\n    </Typography>\r\n    <Typography variant=\"body1\" component=\"div\">\r\n      0.00000\r\n    </Typography>\r\n  </div>\r\n\r\n  <div>\r\n    <Typography\r\n      variant=\"h4\"\r\n      style={{ fontSize: 15, fontWeight: \"bold\" }}\r\n    >\r\n      Yield Boost\r\n    </Typography>\r\n    <Typography variant=\"body1\" component=\"div\">\r\n      1.3x\r\n    </Typography>\r\n  </div>\r\n</Box> */}\r\n                    <Box\r\n                      bgcolor={\"black\"}\r\n                      paddingBlock={4}\r\n                      borderRadius={8}\r\n                      marginTop={4}\r\n                    >\r\n                      <Box paddingBottom={2} paddingTop={2}>\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            paddingInline: 15,\r\n                            paddingBlock: 6,\r\n                          }}\r\n                        >\r\n                          <div>Your Rewards </div>\r\n                          <div style={{ fontWeight: \"bold\" }}>\r\n                            {userRewards}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            paddingInline: 15,\r\n                            paddingBlock: 6,\r\n                          }}\r\n                        >\r\n                          <div>Your Stake</div>\r\n                          <div style={{ fontWeight: \"bold\" }}>\r\n                            {userStakedTokens}{\" \"}\r\n                            <span>\r\n                              <Button\r\n                                style={{\r\n                                  border: \"2px solid #e31a89\",\r\n                                  borderRadius: 8,\r\n                                  color: \"#e31a89\",\r\n                                  height: 25,\r\n                                }}\r\n                                onClick={handleAddLockedButton}\r\n                              >\r\n                                +\r\n                              </Button>\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            paddingInline: 15,\r\n                            paddingBlock: 6,\r\n                          }}\r\n                        >\r\n                          <div>APR</div>\r\n                          <div style={{ fontWeight: \"bold\" }}>{userAPR}</div>\r\n                        </div>\r\n\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            paddingInline: 15,\r\n                            paddingBlock: 6,\r\n                          }}\r\n                        >\r\n                          <div>Unlocks In </div>\r\n                          <div style={{ fontWeight: \"bold\" }}>\r\n                            7 Days 8 Hrs Left\r\n                          </div>\r\n                        </div>\r\n\r\n                        <Box\r\n                          style={{\r\n                            marginLeft: 5,\r\n                            marginBottom: 5,\r\n                            marginTop: 9,\r\n                          }}\r\n                        >\r\n                          {/* <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        style={{\r\n          backgroundColor: \"#e31a89\",\r\n          color: \"#fff\",\r\n        }}\r\n        // onClick={handleAddLockedButton}\r\n      >\r\n        Extend\r\n      </Button> */}\r\n                        </Box>\r\n\r\n                        <Box\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-evenly\",\r\n                          }}\r\n                        >\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            style={{\r\n                              backgroundColor: \"#e31a89\",\r\n                              color: \"#fff\",\r\n                              height: 25,\r\n                              borderRadius: 20,\r\n                              fontSize: 12,\r\n                              fontWeight: \"bold\",\r\n                              marginTop: 17,\r\n                              width: 35,\r\n                            }}\r\n                            onClick={() => handleDayStakeButton(1)}\r\n                          >\r\n                            1W\r\n                          </Button>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            style={{\r\n                              backgroundColor: \"#e31a89\",\r\n                              color: \"#fff\",\r\n                              height: 25,\r\n                              borderRadius: 20,\r\n                              fontSize: 12,\r\n                              fontWeight: \"bold\",\r\n                              marginTop: 17,\r\n                              width: 35,\r\n                            }}\r\n                            onClick={() => handleDayStakeButton(2)}\r\n                          >\r\n                            2W\r\n                          </Button>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            style={{\r\n                              backgroundColor: \"#e31a89\",\r\n                              color: \"#fff\",\r\n                              height: 25,\r\n                              borderRadius: 20,\r\n                              fontSize: 12,\r\n                              fontWeight: \"bold\",\r\n                              marginTop: 17,\r\n                              width: 35,\r\n                            }}\r\n                            onClick={() => handleDayStakeButton(3)}\r\n                          >\r\n                            3W\r\n                          </Button>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            style={{\r\n                              backgroundColor: \"#e31a89\",\r\n                              color: \"#fff\",\r\n                              height: 25,\r\n                              borderRadius: 20,\r\n                              fontSize: 12,\r\n                              fontWeight: \"bold\",\r\n                              marginTop: 17,\r\n                              width: 35,\r\n                            }}\r\n                            onClick={() => handleDayStakeButton(4)}\r\n                          >\r\n                            4W\r\n                          </Button>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            style={{\r\n                              backgroundColor: \"#e31a89\",\r\n                              color: \"#fff\",\r\n                              height: 25,\r\n                              borderRadius: 20,\r\n                              fontSize: 12,\r\n                              fontWeight: \"bold\",\r\n                              marginTop: 17,\r\n                              width: 35,\r\n                            }}\r\n                            onClick={() => handleDayStakeButton(52)}\r\n                          >\r\n                            Max\r\n                          </Button>\r\n                        </Box>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          style={{\r\n                            backgroundColor: \"#e31a89\",\r\n                            color: \"#fff\",\r\n                            height: 40,\r\n                            paddingInline: 30,\r\n                            fontSize: 16,\r\n                            marginTop: 25,\r\n                            marginLeft: 70,\r\n                          }}\r\n                          onClick={handleConfirmLockedButton}\r\n                        >\r\n                          Extend\r\n                        </Button>\r\n\r\n                        {/* <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          paddingInline: 15,\r\n          paddingBlock: 6,\r\n        }}\r\n      >\r\n        <div>User Balance</div>\r\n        <div style={{ fontWeight: \"bold\" }}>444</div>\r\n      </div> */}\r\n\r\n                        {/* <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          paddingInline: 15,\r\n          paddingBlock: 6,\r\n        }}\r\n      >\r\n        <div>BooBoost</div>\r\n        <div style={{ fontWeight: \"bold\" }}>2x</div>\r\n      </div> */}\r\n                      </Box>\r\n                    </Box>\r\n                  </Box>\r\n                )}\r\n\r\n                {addFlexibleButton && (\r\n                  <Box>\r\n                    <Box\r\n                      display={\"flex\"}\r\n                      justifyContent={\"space-between\"}\r\n                      style={{ marginBottom: 4 }}\r\n                    >\r\n                      <Box>\r\n                        <Typography\r\n                          variant=\"h2\"\r\n                          style={{ fontSize: 16, fontWeight: \"bold\" }}\r\n                        >\r\n                          Add $LAZI Flexible\r\n                        </Typography>\r\n                      </Box>\r\n                      <Box>\r\n                        <ArrowBackIcon\r\n                          onClick={handleGoBacktoFlexible}\r\n                          style={{ cursor: \"pointer\" }}\r\n                        />\r\n                      </Box>\r\n                    </Box>\r\n\r\n                    <Box\r\n                      marginBottom={3}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-around\",\r\n                        marginTop: 8,\r\n                      }}\r\n                    >\r\n                      <Box>\r\n                        <TextField\r\n                          className={classes.input}\r\n                          value={tokenStakeValue}\r\n                          onChange={handleStakeTokenChange}\r\n                          variant=\"outlined\"\r\n                          style={{ marginTop: 5 }}\r\n                        />\r\n                      </Box>\r\n\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        style={{\r\n                          backgroundColor: \"#e31a89\",\r\n                          color: \"#fff\",\r\n                          height: 25,\r\n                          borderRadius: 20,\r\n                          fontSize: 12,\r\n                          fontWeight: \"bold\",\r\n                          marginTop: 17,\r\n                        }}\r\n                        onClick={() => handlePercentageBalance(100)}\r\n                      >\r\n                        Max\r\n                      </Button>\r\n                    </Box>\r\n\r\n                    {/* <Box>\r\n      <Typography\r\n        variant=\"body2\"\r\n        className={classes.inputLabel}\r\n        style={{\r\n          fontSize: \"13px\",\r\n          marginBottom: 5,\r\n          paddingLeft: 2,\r\n        }}\r\n      >\r\n        Day Stake\r\n      </Typography>\r\n      <TextField\r\n        className={classes.input}\r\n        value={selectedTime}\r\n        onChange={handleDayStake}\r\n        variant=\"outlined\"\r\n      />\r\n    </Box>\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n      }}\r\n    >\r\n      <Button\r\n        variant=\"contained\"\r\n        style={{\r\n          backgroundColor: \"#e31a89\",\r\n          color: \"#fff\",\r\n          height: 25,\r\n          borderRadius: 20,\r\n          fontSize: 12,\r\n          fontWeight: \"bold\",\r\n          marginTop: 17,\r\n        }}\r\n        onClick={() => handleDayStakeButton(1)}\r\n      >\r\n        1W\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        style={{\r\n          backgroundColor: \"#e31a89\",\r\n          color: \"#fff\",\r\n          height: 25,\r\n          borderRadius: 20,\r\n          fontSize: 12,\r\n          fontWeight: \"bold\",\r\n          marginTop: 17,\r\n        }}\r\n        onClick={() => handleDayStakeButton(2)}\r\n      >\r\n        2W\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        style={{\r\n          backgroundColor: \"#e31a89\",\r\n          color: \"#fff\",\r\n          height: 25,\r\n          borderRadius: 20,\r\n          fontSize: 12,\r\n          fontWeight: \"bold\",\r\n          marginTop: 17,\r\n        }}\r\n        onClick={() => handleDayStakeButton(3)}\r\n      >\r\n        3W\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        style={{\r\n          backgroundColor: \"#e31a89\",\r\n          color: \"#fff\",\r\n          height: 25,\r\n          borderRadius: 20,\r\n          fontSize: 12,\r\n          fontWeight: \"bold\",\r\n          marginTop: 17,\r\n        }}\r\n        onClick={() => handleDayStakeButton(4)}\r\n      >\r\n        4W\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        style={{\r\n          backgroundColor: \"#e31a89\",\r\n          color: \"#fff\",\r\n          height: 25,\r\n          borderRadius: 20,\r\n          fontSize: 12,\r\n          fontWeight: \"bold\",\r\n          marginTop: 17,\r\n        }}\r\n        onClick={() => handleDayStakeButton(52)}\r\n      >\r\n        Max\r\n      </Button>\r\n    </Box> */}\r\n                    {/* Card Place */}\r\n\r\n                    {/* <Box\r\n                        bgcolor={\"black\"}\r\n                        paddingBlock={4}\r\n                        borderRadius={8}\r\n                        marginTop={4}\r\n                      >\r\n                        <Box paddingBottom={2} paddingTop={2}>\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"space-between\",\r\n                              paddingInline: 15,\r\n                              paddingBlock: 6,\r\n                            }}\r\n                          >\r\n                            <div>Lazi to be locked </div>\r\n                            <div style={{ fontWeight: \"bold\" }}>11111</div>\r\n                          </div>\r\n  \r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"space-between\",\r\n                              paddingInline: 15,\r\n                              paddingBlock: 6,\r\n                            }}\r\n                          >\r\n                            <div>Duration</div>\r\n                            <div style={{ fontWeight: \"bold\" }}>2222</div>\r\n                          </div>\r\n  \r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"space-between\",\r\n                              paddingInline: 15,\r\n                              paddingBlock: 6,\r\n                            }}\r\n                          >\r\n                            <div>APR</div>\r\n                            <div style={{ fontWeight: \"bold\" }}>3333</div>\r\n                          </div>\r\n  \r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"space-between\",\r\n                              paddingInline: 15,\r\n                              paddingBlock: 6,\r\n                            }}\r\n                          >\r\n                            <div>User Balance</div>\r\n                            <div style={{ fontWeight: \"bold\" }}>444</div>\r\n                          </div>\r\n  \r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"space-between\",\r\n                              paddingInline: 15,\r\n                              paddingBlock: 6,\r\n                            }}\r\n                          >\r\n                            <div>Yield Boost</div>\r\n                            <div style={{ fontWeight: \"bold\" }}>2x</div>\r\n                          </div>\r\n                        </Box>\r\n                      </Box> */}\r\n\r\n                    {/* Confirm Button */}\r\n\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      style={{\r\n                        backgroundColor: \"#e31a89\",\r\n                        color: \"#fff\",\r\n                        height: 40,\r\n                        paddingInline: 30,\r\n                        fontSize: 16,\r\n                        marginTop: 25,\r\n                        marginLeft: 70,\r\n                      }}\r\n                      onClick={handleConfirmFlexibleButton}\r\n                    >\r\n                      Confirm\r\n                    </Button>\r\n                  </Box>\r\n                )}\r\n\r\n                {/* For Lccked Button */}\r\n                {/* For Locked */}\r\n\r\n                <Box>\r\n                  {locked && (\r\n                    <Box\r\n                      style={{\r\n                        marginBottom: 4,\r\n                        border: \"2px solid #3C3C3C\",\r\n                        borderRadius: 8,\r\n                        padding: 10,\r\n                      }}\r\n                    >\r\n                      <Box display={\"flex\"} justifyContent={\"space-between\"}>\r\n                        <Box>\r\n                          <Typography\r\n                            variant=\"h2\"\r\n                            style={{\r\n                              fontSize: 14,\r\n                              whiteSpace: \"nowrap\",\r\n                              marginLeft: 10,\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            Select Duration\r\n                          </Typography>\r\n                        </Box>\r\n                        <Box>\r\n                          <ArrowBackIcon\r\n                            onClick={handleGoBack}\r\n                            style={{ cursor: \"pointer\" }}\r\n                          />\r\n                        </Box>\r\n                      </Box>\r\n\r\n                      {/* <Box marginBottom={3}>\r\n                        <Typography\r\n                          variant=\"body2\"\r\n                          className={classes.inputLabel}\r\n                          style={{ fontSize: \"13px\", marginBottom: 5 }}\r\n                        >\r\n                          Enter Token to Stake\r\n                        </Typography>\r\n                        <TextField\r\n                          className={classes.input}\r\n                          value={tokenStakeValue}\r\n                          // onChange={handleStakeTokenChange}\r\n                          variant=\"outlined\"\r\n                          style={{ marginBottom: 5 }}\r\n                        />\r\n                      </Box> */}\r\n\r\n                      {/* Percentage buttons in Locked buttons */}\r\n                      {/* <Box\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-around\",\r\n                          marginTop: -25,\r\n                          marginBottom: 22,\r\n                        }}\r\n                      >\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          style={{\r\n                            backgroundColor: \"#e31a89\",\r\n                            color: \"#fff\",\r\n                            height: 25,\r\n                            borderRadius: 20,\r\n                            fontSize: 12,\r\n                            fontWeight: \"bold\",\r\n                            marginTop: 17,\r\n                          }}\r\n                          onClick={() => handleDayStakeButton(1)}\r\n                        >\r\n                          25%\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          style={{\r\n                            backgroundColor: \"#e31a89\",\r\n                            color: \"#fff\",\r\n                            height: 25,\r\n                            borderRadius: 20,\r\n                            fontSize: 12,\r\n                            fontWeight: \"bold\",\r\n                            marginTop: 17,\r\n                          }}\r\n                          onClick={() => handleDayStakeButton(2)}\r\n                        >\r\n                          50%\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          style={{\r\n                            backgroundColor: \"#e31a89\",\r\n                            color: \"#fff\",\r\n                            height: 25,\r\n                            borderRadius: 20,\r\n                            fontSize: 12,\r\n                            fontWeight: \"bold\",\r\n                            marginTop: 17,\r\n                          }}\r\n                          onClick={() => handleDayStakeButton(3)}\r\n                        >\r\n                          75%\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          style={{\r\n                            backgroundColor: \"#e31a89\",\r\n                            color: \"#fff\",\r\n                            height: 25,\r\n                            borderRadius: 20,\r\n                            fontSize: 12,\r\n                            fontWeight: \"bold\",\r\n                            marginTop: 17,\r\n                          }}\r\n                          onClick={() => handleDayStakeButton(4)}\r\n                        >\r\n                          max\r\n                        </Button>\r\n                      </Box> */}\r\n\r\n                      {/* <Box>\r\n                        <Typography\r\n                          variant=\"body2\"\r\n                          className={classes.inputLabel}\r\n                          style={{\r\n                            fontSize: \"13px\",\r\n                            marginBottom: 5,\r\n                            paddingLeft: 2,\r\n                          }}\r\n                        >\r\n                          Day Stake\r\n                        </Typography>\r\n                        <TextField\r\n                          className={classes.input}\r\n                          value={selectedTime}\r\n                          onChange={handleDayStake}\r\n                          variant=\"outlined\"\r\n                        />\r\n                      </Box> */}\r\n                      <Box marginBottom={2}>\r\n                        <Typography\r\n                          variant=\"body2\"\r\n                          className={classes.inputLabel}\r\n                          style={{ fontSize: \"13px\", marginBottom: 5 }}\r\n                        >\r\n                          Enter Days to Stake\r\n                        </Typography>\r\n                        <TextField\r\n                          className={classes.input}\r\n                          value={selectedTime}\r\n                          onChange={handleDayStake}\r\n                          variant=\"outlined\"\r\n                          style={{ marginBottom: 2 }}\r\n                        />\r\n                      </Box>\r\n                      <Box\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-around\",\r\n                        }}\r\n                      >\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          style={{\r\n                            backgroundColor: \"#e31a89\",\r\n                            color: \"#fff\",\r\n                            height: 25,\r\n                            width: 45,\r\n                            borderRadius: 20,\r\n                            fontSize: 12,\r\n                            fontWeight: \"bold\",\r\n                            marginTop: 17,\r\n                          }}\r\n                          onClick={() => handleDayStakeButton(1)}\r\n                        >\r\n                          1W\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          style={{\r\n                            backgroundColor: \"#e31a89\",\r\n                            color: \"#fff\",\r\n                            height: 25,\r\n                            width: 45,\r\n                            borderRadius: 20,\r\n                            fontSize: 12,\r\n                            fontWeight: \"bold\",\r\n                            marginTop: 17,\r\n                          }}\r\n                          onClick={() => handleDayStakeButton(2)}\r\n                        >\r\n                          2W\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          style={{\r\n                            backgroundColor: \"#e31a89\",\r\n                            color: \"#fff\",\r\n                            height: 25,\r\n                            width: 45,\r\n                            borderRadius: 20,\r\n                            fontSize: 12,\r\n                            fontWeight: \"bold\",\r\n                            marginTop: 17,\r\n                          }}\r\n                          onClick={() => handleDayStakeButton(3)}\r\n                        >\r\n                          3W\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          style={{\r\n                            backgroundColor: \"#e31a89\",\r\n                            color: \"#fff\",\r\n                            height: 25,\r\n                            width: 45,\r\n                            borderRadius: 20,\r\n                            fontSize: 12,\r\n                            fontWeight: \"bold\",\r\n                            marginTop: 17,\r\n                          }}\r\n                          onClick={() => handleDayStakeButton(4)}\r\n                        >\r\n                          4W\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          style={{\r\n                            backgroundColor: \"#e31a89\",\r\n                            color: \"#fff\",\r\n                            height: 25,\r\n                            width: 45,\r\n                            borderRadius: 20,\r\n                            fontSize: 12,\r\n                            fontWeight: \"bold\",\r\n                            marginTop: 17,\r\n                          }}\r\n                          onClick={() => handleDayStakeButton(52)}\r\n                        >\r\n                          Max\r\n                        </Button>\r\n                      </Box>\r\n                      {/* Card Place */}\r\n\r\n                      <Box\r\n                        bgcolor={\"black\"}\r\n                        paddingBlock={4}\r\n                        borderRadius={8}\r\n                        marginTop={4}\r\n                      >\r\n                        {/* <Box paddingBottom={2} paddingTop={2}>\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"space-between\",\r\n                              paddingInline: 15,\r\n                              paddingBlock: 6,\r\n                            }}\r\n                          >\r\n                            <div>Lazi to be locked </div>\r\n                            <div style={{ fontWeight: \"bold\" }}>11111</div>\r\n                          </div>\r\n\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"space-between\",\r\n                              paddingInline: 15,\r\n                              paddingBlock: 6,\r\n                            }}\r\n                          >\r\n                            <div>Duration</div>\r\n                            <div style={{ fontWeight: \"bold\" }}>2222</div>\r\n                          </div>\r\n\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"space-between\",\r\n                              paddingInline: 15,\r\n                              paddingBlock: 6,\r\n                            }}\r\n                          >\r\n                            <div>APR</div>\r\n                            <div style={{ fontWeight: \"bold\" }}>3333</div>\r\n                          </div>\r\n\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"space-between\",\r\n                              paddingInline: 15,\r\n                              paddingBlock: 6,\r\n                            }}\r\n                          >\r\n                            <div>User Balance</div>\r\n                            <div style={{ fontWeight: \"bold\" }}>444</div>\r\n                          </div>\r\n\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"space-between\",\r\n                              paddingInline: 15,\r\n                              paddingBlock: 6,\r\n                            }}\r\n                          >\r\n                            <div>Yield Boost</div>\r\n                            <div style={{ fontWeight: \"bold\" }}>2x</div>\r\n                          </div>\r\n                        </Box> */}\r\n                      </Box>\r\n\r\n                      {/* Confirm Button */}\r\n\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        style={{\r\n                          backgroundColor: \"#e31a89\",\r\n                          color: \"#fff\",\r\n                          height: 40,\r\n                          paddingInline: 30,\r\n                          fontSize: 16,\r\n                          marginTop: 15,\r\n                          marginLeft: 52,\r\n                        }}\r\n                        onClick={handleConfirmLockedButton}\r\n                      >\r\n                        Confirm\r\n                      </Button>\r\n                    </Box>\r\n                  )}\r\n                </Box>\r\n\r\n                {/* After Locking is Confirm */}\r\n                {afterLocked && (\r\n                  <Box>\r\n                    <Box\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                      }}\r\n                    >\r\n                      <Box>\r\n                        <Typography\r\n                          variant=\"h2\"\r\n                          style={{ fontSize: 14, whiteSpace: \"none\" }}\r\n                        >\r\n                          My position\r\n                          <span\r\n                            style={{\r\n                              backgroundColor: \"#e31a89\",\r\n                              paddingInline: 4,\r\n                              fontSize: 16,\r\n                              borderRadius: 2,\r\n                              marginLeft: 2,\r\n                            }}\r\n                          >\r\n                            Locked\r\n                          </span>\r\n                        </Typography>\r\n                      </Box>\r\n                      {/* <Box>\r\n                        <ArrowBackIcon\r\n                          onClick={handleGoBackOfLocked}\r\n                          style={{ cursor: \"pointer\" }}\r\n                        />\r\n                      </Box> */}\r\n                    </Box>\r\n\r\n                    {/* <Box\r\n                      style={{\r\n                        border: \"1px solid #3C3C3C\",\r\n                        borderRadius: 10,\r\n                        marginTop: 40,\r\n                        paddingBottom: 20,\r\n                        paddingTop: 10,\r\n                        paddingInline: 10,\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <div>\r\n                        <Typography\r\n                          variant=\"h4\"\r\n                          style={{ fontSize: 15, fontWeight: \"bold\" }}\r\n                        >\r\n                          Recent Lazi Profit\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" component=\"div\">\r\n                          0.00000\r\n                        </Typography>\r\n                      </div>\r\n\r\n                      <div>\r\n                        <Typography\r\n                          variant=\"h4\"\r\n                          style={{ fontSize: 15, fontWeight: \"bold\" }}\r\n                        >\r\n                          Yield Boost\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" component=\"div\">\r\n                          1.3x\r\n                        </Typography>\r\n                      </div>\r\n                    </Box> */}\r\n                    <Box\r\n                      bgcolor={\"black\"}\r\n                      paddingBlock={4}\r\n                      borderRadius={8}\r\n                      marginTop={4}\r\n                    >\r\n                      <Box paddingBottom={2} paddingTop={2}>\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            paddingInline: 15,\r\n                            paddingBlock: 6,\r\n                          }}\r\n                        >\r\n                          <div>Your Rewards </div>\r\n                          <div style={{ fontWeight: \"bold\" }}>\r\n                            {userRewards}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            paddingInline: 15,\r\n                            paddingBlock: 6,\r\n                          }}\r\n                        >\r\n                          <div>Your Stake</div>\r\n                          <div style={{ fontWeight: \"bold\" }}>\r\n                            {userStakedTokens}{\" \"}\r\n                            <span>\r\n                              <Button\r\n                                style={{\r\n                                  border: \"2px solid #e31a89\",\r\n                                  borderRadius: 8,\r\n                                  color: \"#e31a89\",\r\n                                  height: 25,\r\n                                }}\r\n                                onClick={handleAddLockedButton}\r\n                              >\r\n                                +\r\n                              </Button>\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            paddingInline: 15,\r\n                            paddingBlock: 6,\r\n                          }}\r\n                        >\r\n                          <div>APR</div>\r\n                          <div style={{ fontWeight: \"bold\" }}>{userAPR}</div>\r\n                        </div>\r\n\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            paddingInline: 15,\r\n                            paddingBlock: 6,\r\n                          }}\r\n                        >\r\n                          <div>Unlocks In </div>\r\n                          <div style={{ fontWeight: \"bold\" }}>\r\n                            7 Days 8 Hrs Left\r\n                          </div>\r\n                        </div>\r\n\r\n                        <Box\r\n                          style={{\r\n                            marginLeft: 5,\r\n                            marginBottom: 5,\r\n                            marginTop: 9,\r\n                          }}\r\n                        >\r\n                          {/* <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            style={{\r\n                              backgroundColor: \"#e31a89\",\r\n                              color: \"#fff\",\r\n                            }}\r\n                            // onClick={handleAddLockedButton}\r\n                          >\r\n                            Extend\r\n                          </Button> */}\r\n                        </Box>\r\n\r\n                        {/* <Box marginBottom={2}>\r\n                          <Typography\r\n                            variant=\"body2\"\r\n                            className={classes.inputLabel}\r\n                            style={{ fontSize: \"13px\", marginBottom: 5 }}\r\n                          >\r\n                            Enter Days to Extend Lock Period\r\n                          </Typography>\r\n                          <TextField\r\n                            className={classes.input}\r\n                            value={selectedTime}\r\n                            onChange={handleDayStake}\r\n                            variant=\"outlined\"\r\n                            style={{ marginBottom: 2 }}\r\n                          />\r\n                        </Box>\r\n                        <Box\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-around\",\r\n                          }}\r\n                        >\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            style={{\r\n                              backgroundColor: \"#e31a89\",\r\n                              color: \"#fff\",\r\n                              height: 25,\r\n                              width:45,\r\n                              borderRadius: 20,\r\n                              fontSize: 12,\r\n                              fontWeight: \"bold\",\r\n                              marginTop: 17,\r\n                            }}\r\n                            onClick={() => handleDayStakeButton(1)}\r\n                          >\r\n                            1W\r\n                          </Button>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            style={{\r\n                              backgroundColor: \"#e31a89\",\r\n                              color: \"#fff\",\r\n                              height: 25,\r\n                              width:45,\r\n                              borderRadius: 20,\r\n                              fontSize: 12,\r\n                              fontWeight: \"bold\",\r\n                              marginTop: 17,\r\n                            }}\r\n                            onClick={() => handleDayStakeButton(2)}\r\n                          >\r\n                            2W\r\n                          </Button>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            style={{\r\n                              backgroundColor: \"#e31a89\",\r\n                              color: \"#fff\",\r\n                              height: 25,\r\n                              width:45,\r\n                              borderRadius: 20,\r\n                              fontSize: 12,\r\n                              fontWeight: \"bold\",\r\n                              marginTop: 17,\r\n                            }}\r\n                            onClick={() => handleDayStakeButton(3)}\r\n                          >\r\n                            3W\r\n                          </Button>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            style={{\r\n                              backgroundColor: \"#e31a89\",\r\n                              color: \"#fff\",\r\n                              height: 25,\r\n                              width:45,\r\n                              borderRadius: 20,\r\n                              fontSize: 12,\r\n                              fontWeight: \"bold\",\r\n                              marginTop: 17,\r\n                            }}\r\n                            onClick={() => handleDayStakeButton(4)}\r\n                          >\r\n                            4W\r\n                          </Button>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            style={{\r\n                              backgroundColor: \"#e31a89\",\r\n                              color: \"#fff\",\r\n                              height: 25,\r\n                              width:45,\r\n                              borderRadius: 20,\r\n                              fontSize: 12,\r\n                              fontWeight: \"bold\",\r\n                              marginTop: 17,\r\n                            }}\r\n                            onClick={() => handleDayStakeButton(52)}\r\n                          >\r\n                            Max\r\n                          </Button>\r\n                        </Box> */}\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-around\",\r\n                          }}\r\n                        >\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            style={{\r\n                              backgroundColor: \"#e31a89\",\r\n                              color: \"#fff\",\r\n                              height: 40,\r\n                              paddingInline: 15,\r\n                              fontSize: 14,\r\n                              marginTop: 25,\r\n                              // marginLeft: 15,\r\n                              whiteSpace: \"nowrap\",\r\n                            }}\r\n                            onClick={handleMainMenuButton}\r\n                          >\r\n                            Main Menu\r\n                          </Button>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            style={{\r\n                              backgroundColor: \"#e31a89\",\r\n                              color: \"#fff\",\r\n                              height: 40,\r\n                              paddingInline: 15,\r\n                              fontSize: 14,\r\n                              marginTop: 25,\r\n                              // marginLeft: 10,\r\n                            }}\r\n                            onClick={handleUnstake}\r\n                          >\r\n                            Unstake\r\n                          </Button>\r\n                        </div>\r\n                      </Box>\r\n                    </Box>\r\n                  </Box>\r\n                )}\r\n\r\n                {/* Extend Locked Screen */}\r\n                {AddLockedButton && (\r\n                  <Box>\r\n                    <Box\r\n                      display={\"flex\"}\r\n                      justifyContent={\"space-between\"}\r\n                      style={{ marginBottom: 4 }}\r\n                    >\r\n                      <Box>\r\n                        <Typography\r\n                          variant=\"h2\"\r\n                          style={{ fontSize: 16, fontWeight: \"bold\" }}\r\n                        >\r\n                          Add $LAZI To Locked\r\n                        </Typography>\r\n                      </Box>\r\n                      <Box>\r\n                        <ArrowBackIcon\r\n                          onClick={handleGoBacktoLocked}\r\n                          style={{ cursor: \"pointer\" }}\r\n                        />\r\n                      </Box>\r\n                    </Box>\r\n\r\n                    <Box\r\n                      marginBottom={3}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-around\",\r\n                        marginTop: 8,\r\n                      }}\r\n                    >\r\n                      <Box>\r\n                        <TextField\r\n                          className={classes.input}\r\n                          value={tokenStakeValue}\r\n                          onChange={handleStakeTokenChange}\r\n                          variant=\"outlined\"\r\n                          style={{ marginTop: 5 }}\r\n                        />\r\n                      </Box>\r\n\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        style={{\r\n                          backgroundColor: \"#e31a89\",\r\n                          color: \"#fff\",\r\n                          height: 25,\r\n                          borderRadius: 20,\r\n                          fontSize: 12,\r\n                          fontWeight: \"bold\",\r\n                          marginTop: 17,\r\n                        }}\r\n                        onClick={() => handlePercentageBalance(100)}\r\n                      >\r\n                        Max\r\n                      </Button>\r\n                    </Box>\r\n\r\n                    {/* <Box>\r\n    <Typography\r\n      variant=\"body2\"\r\n      className={classes.inputLabel}\r\n      style={{\r\n        fontSize: \"13px\",\r\n        marginBottom: 5,\r\n        paddingLeft: 2,\r\n      }}\r\n    >\r\n      Day Stake\r\n    </Typography>\r\n    <TextField\r\n      className={classes.input}\r\n      value={selectedTime}\r\n      onChange={handleDayStake}\r\n      variant=\"outlined\"\r\n    />\r\n  </Box>\r\n  <Box\r\n    style={{\r\n      display: \"flex\",\r\n      justifyContent: \"space-around\",\r\n    }}\r\n  >\r\n    <Button\r\n      variant=\"contained\"\r\n      style={{\r\n        backgroundColor: \"#e31a89\",\r\n        color: \"#fff\",\r\n        height: 25,\r\n        borderRadius: 20,\r\n        fontSize: 12,\r\n        fontWeight: \"bold\",\r\n        marginTop: 17,\r\n      }}\r\n      onClick={() => handleDayStakeButton(1)}\r\n    >\r\n      1W\r\n    </Button>\r\n    <Button\r\n      variant=\"contained\"\r\n      style={{\r\n        backgroundColor: \"#e31a89\",\r\n        color: \"#fff\",\r\n        height: 25,\r\n        borderRadius: 20,\r\n        fontSize: 12,\r\n        fontWeight: \"bold\",\r\n        marginTop: 17,\r\n      }}\r\n      onClick={() => handleDayStakeButton(2)}\r\n    >\r\n      2W\r\n    </Button>\r\n    <Button\r\n      variant=\"contained\"\r\n      style={{\r\n        backgroundColor: \"#e31a89\",\r\n        color: \"#fff\",\r\n        height: 25,\r\n        borderRadius: 20,\r\n        fontSize: 12,\r\n        fontWeight: \"bold\",\r\n        marginTop: 17,\r\n      }}\r\n      onClick={() => handleDayStakeButton(3)}\r\n    >\r\n      3W\r\n    </Button>\r\n    <Button\r\n      variant=\"contained\"\r\n      style={{\r\n        backgroundColor: \"#e31a89\",\r\n        color: \"#fff\",\r\n        height: 25,\r\n        borderRadius: 20,\r\n        fontSize: 12,\r\n        fontWeight: \"bold\",\r\n        marginTop: 17,\r\n      }}\r\n      onClick={() => handleDayStakeButton(4)}\r\n    >\r\n      4W\r\n    </Button>\r\n    <Button\r\n      variant=\"contained\"\r\n      style={{\r\n        backgroundColor: \"#e31a89\",\r\n        color: \"#fff\",\r\n        height: 25,\r\n        borderRadius: 20,\r\n        fontSize: 12,\r\n        fontWeight: \"bold\",\r\n        marginTop: 17,\r\n      }}\r\n      onClick={() => handleDayStakeButton(52)}\r\n    >\r\n      Max\r\n    </Button>\r\n  </Box> */}\r\n                    {/* Card Place */}\r\n\r\n                    {/* <Box\r\n                      bgcolor={\"black\"}\r\n                      paddingBlock={4}\r\n                      borderRadius={8}\r\n                      marginTop={4}\r\n                    >\r\n                      <Box paddingBottom={2} paddingTop={2}>\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            paddingInline: 15,\r\n                            paddingBlock: 6,\r\n                          }}\r\n                        >\r\n                          <div>Lazi to be locked </div>\r\n                          <div style={{ fontWeight: \"bold\" }}>11111</div>\r\n                        </div>\r\n\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            paddingInline: 15,\r\n                            paddingBlock: 6,\r\n                          }}\r\n                        >\r\n                          <div>Duration</div>\r\n                          <div style={{ fontWeight: \"bold\" }}>2222</div>\r\n                        </div>\r\n\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            paddingInline: 15,\r\n                            paddingBlock: 6,\r\n                          }}\r\n                        >\r\n                          <div>APR</div>\r\n                          <div style={{ fontWeight: \"bold\" }}>3333</div>\r\n                        </div>\r\n\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            paddingInline: 15,\r\n                            paddingBlock: 6,\r\n                          }}\r\n                        >\r\n                          <div>User Balance</div>\r\n                          <div style={{ fontWeight: \"bold\" }}>444</div>\r\n                        </div>\r\n\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            paddingInline: 15,\r\n                            paddingBlock: 6,\r\n                          }}\r\n                        >\r\n                          <div>Yield Boost</div>\r\n                          <div style={{ fontWeight: \"bold\" }}>2x</div>\r\n                        </div>\r\n                      </Box>\r\n                    </Box> */}\r\n\r\n                    {/* Confirm Button */}\r\n\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      style={{\r\n                        backgroundColor: \"#e31a89\",\r\n                        color: \"#fff\",\r\n                        height: 40,\r\n                        paddingInline: 30,\r\n                        fontSize: 16,\r\n                        marginTop: 25,\r\n                        marginLeft: 70,\r\n                      }}\r\n                      onClick={handleConfirmLockedButton}\r\n                    >\r\n                      Confirm\r\n                    </Button>\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n            </Paper>\r\n            <Paper\r\n              className={classes.root}\r\n              elevation={2}\r\n              style={{\r\n                border: \"3px solid rgba(236, 22, 127, 0.5) \",\r\n                borderRadius: 10,\r\n                marginTop: \"10px\",\r\n              }}\r\n            >\r\n              <div style={{ display: \"flex\" }}>\r\n                <div>\r\n                  <Box className={classes.heading} style={{ display: \"block\" }}>\r\n                    <Typography variant=\"h2\" style={{ fontSize: \"26px\" }}>\r\n                      Your Total Staking\r\n                    </Typography>\r\n                    {/* <Button onClick={handleTotalStakedClick}>Refresh</Button> */}\r\n                  </Box>\r\n                  <br></br>\r\n                  <p style={{ fontSize: \"17px\" }}>\r\n                    <b>{totalStaked ? `${totalStaked} LAZI` : \"\"}</b>\r\n                  </p>\r\n                  <p style={{ fontSize: \"17px\" }}>\r\n                    <b>\r\n                      <AnimatedNumber\r\n                        targetNumber={\r\n                          totalStaked ? (totalStaked * 100) / 200000000 : 0\r\n                        }\r\n                        suffix=\"%\"\r\n                      />\r\n                    </b>\r\n                  </p>\r\n                </div>\r\n                <br></br>\r\n                {/* <div style={{ marginLeft: \"auto\" }}>\r\n                  <Chart\r\n                    options={state.options}\r\n                    series={[\r\n                      totalStaked ? (totalStaked * 100) / 200000000 : 0,\r\n                      100 - (totalStaked ? (totalStaked * 100) / 200000000 : 0),\r\n                    ]}\r\n                    type=\"donut\"\r\n                    width=\"70%\"\r\n                  />\r\n                </div> */}\r\n              </div>\r\n            </Paper>\r\n          </Grid>{\" \"}\r\n          <Grid item md={isMobile ? 12 : 6} xs={isMobile ? 12 : 12}>\r\n            <Paper\r\n              className={classes.root}\r\n              elevation={2}\r\n              style={{\r\n                border: \"3px solid rgba(236, 22, 127, 0.5) \",\r\n                borderRadius: 10,\r\n              }}\r\n            >\r\n              <Box className={classes.root} height={400} overflow=\"auto\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{\r\n                    backgroundColor: \"#e31a89\",\r\n                    color: \"#fff\",\r\n                    height: 40,\r\n                    paddingInline: 20,\r\n                    paddingBlock: 20,\r\n                    fontSize: 16,\r\n                    marginTop: 4,\r\n                    marginLeft: 5,\r\n                    marginBottom: 10,\r\n                  }}\r\n                  onClick={handleApproval}\r\n                  disabled={isTransactionPending}\r\n                >\r\n                  {isTransactionPending ? \"Processing...\" : \"Approve Allowance\"}\r\n                </Button>\r\n                <div style={{ display: \"flex\" }}>\r\n                  <div>\r\n                    <Box\r\n                      className={classes.heading}\r\n                      style={{ display: \"block\" }}\r\n                    >\r\n                      <Typography variant=\"h2\" style={{ fontSize: \"26px\" }}>\r\n                        Locked APR\r\n                      </Typography>\r\n                      {/* <Button onClick={handleTotalStakedClick}>Refresh</Button> */}\r\n                    </Box>\r\n                    <br></br>\r\n                    <p style={{ fontSize: \"17px\" }}>\r\n                      <b>{userAPR ? `${userAPR} APR` : \"0 APR\"}</b>\r\n                    </p>\r\n                    {/* <p style={{ fontSize: \"17px\" }}>\r\n                      <b>\r\n                        <AnimatedNumber\r\n                          targetNumber={\r\n                            totalStaked ? (totalStaked * 100) / 200000000 : 0\r\n                          }\r\n                          suffix=\"%\"\r\n                        />\r\n                      </b>\r\n                    </p> */}\r\n                  </div>\r\n                  <br></br>\r\n                </div>\r\n                <br></br>\r\n\r\n                <div style={{ display: \"flex\" }}>\r\n                  <div>\r\n                    <Box className={classes.heading}>\r\n                      <Typography variant=\"h2\" style={{ fontSize: \"26px\" }}>\r\n                        <h>Your Rewards</h>\r\n                      </Typography>\r\n                    </Box>\r\n                    <br></br>\r\n                    <p style={{ fontSize: \"17px\" }}>\r\n                      <b>{`${userRewards} LAZI`}</b>\r\n                    </p>\r\n                    <br></br>\r\n                    {/* Added Yield Boost */}\r\n                    <Box borderRadius={10} mt={-1} mb={1}>\r\n                      <Typography\r\n                        variant=\"h4\"\r\n                        style={{\r\n                          color: \"white\",\r\n                          fontSize: 18,\r\n                          // fontWeight: \"600\",\r\n                          // border: \"2px solid  #575758 \",\r\n                          // paddingInline: 30,\r\n                          // paddingBlock: 8,\r\n                          borderRadius: 8,\r\n                          whiteSpace: \"nowrap\",\r\n                        }}\r\n                      >\r\n                        Yield Boost:{\" \"}\r\n                        <span\r\n                          style={{\r\n                            backgroundColor: \"#EC167F\",\r\n                            padding: 3,\r\n                            borderRadius: 3,\r\n                            paddingInline: 9,\r\n                            textAlign: \"end\",\r\n                          }}\r\n                        >\r\n                          {totalMultiplier}x{\" \"}\r\n                        </span>\r\n                      </Typography>\r\n                    </Box>\r\n\r\n                    <Box className={classes.Buttonbox} mt={2}>\r\n                      <Box mt={2}>\r\n                        {/* <Button\r\n                          variant=\"contained\"\r\n                          style={{ backgroundColor: \"#e31a89\", color: \"#fff\" }}\r\n                          onClick={handleCollectButtonClick}\r\n                        >\r\n                          Collect\r\n                        </Button> */}\r\n                      </Box>\r\n                    </Box>\r\n                  </div>\r\n                </div>\r\n              </Box>\r\n            </Paper>\r\n            {/* <Paper\r\n              className={classes.root}\r\n              elevation={2}\r\n              style={{ border:'3px solid rgba(236, 22, 127, 0.5) ',borderRadius:10,marginTop: \"10px\"}}\r\n            >\r\n              <Chart\r\n                options={lockPeriodState.options}\r\n                series={lockPeriodState.series}\r\n                type=\"bar\"\r\n                width=\"100%\"\r\n              />\r\n            </Paper> */}\r\n            {/* <Paper\r\n              className={classes.root}\r\n              elevation={2}\r\n              style={{ border:'3px solid rgba(236, 22, 127, 0.5) ',borderRadius:10,marginTop: \"10px\"}}\r\n            >\r\n              <Chart\r\n                options={stakedTokenState.options}\r\n                series={stakedTokenState.series}\r\n                type=\"area\"\r\n                width=\"100%\"\r\n              />\r\n            </Paper> */}\r\n            {/* <Paper\r\n              className={classes.root}\r\n              elevation={2}\r\n              style={{ marginTop: \"10px\" }}\r\n            >\r\n              <Chart\r\n                options={rewardTokenState.options}\r\n                series={rewardTokenState.series}\r\n                type=\"line\"\r\n                width=\"100%\"\r\n              />\r\n            </Paper> */}\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\nexport default StakeReward;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Box, Grid, Link, makeStyles, Paper } from \"@material-ui/core\";\r\nimport { useLocation } from \"react-router-dom\";\r\n// import StakeReward from \"../Rewards/StakeReward\";\r\nimport StakeReward from \"../Rewards/CommingSoon\";\r\nimport LpReward from \"../Rewards/LpReward\";\r\n// import Earn from \"./Earn\";\r\nimport Earn from \"./CommingSoon\";\r\n// import EngagementRewards from \"./EngagementRewards\";\r\nimport EngagementRewards from \"./CommingSoon\";\r\n// import Leaderboard from \"./Leaderboard\";\r\nimport Leaderboard from \"./CommingSoon\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"25px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      padding: \"15px\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      padding: \"10px\",\r\n    },\r\n    \"& .mainbox\": {\r\n      backgroundColor: \"#101010\",\r\n      BiBorderRadius: \"5px\",\r\n      \"& .leftbox\": {\r\n        padding: \"25px\",\r\n        height: \"100%\",\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n          padding: \"0px\",\r\n        },\r\n      },\r\n      \"& .rightbox\": {\r\n        padding: \"0px 25px\",\r\n        borderLeft: \"0.25px solid #242526\",\r\n        height: \"100%\",\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n          padding: \"10px\",\r\n        },\r\n      },\r\n      \"& .buttonBox\": {\r\n        borderBottom: \"1px solid #242526\",\r\n        padding: \" 0 15px\",\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n          padding: \"0 0px\",\r\n          margin: \"0 10px\",\r\n          display: \"inline-block\",\r\n        },\r\n        \"& a\": {\r\n          width: \"100%\",\r\n          cursor: \"pointer\",\r\n          fontWeight: \"600\",\r\n          display: \"block\",\r\n          fontSize: \"14px\",\r\n          color: \"#fff\",\r\n          padding: \"20px 0\",\r\n          [theme.breakpoints.down(\"xs\")]: {\r\n            fontSize: \"12px\",\r\n          },\r\n          \"&:hover\": {\r\n            textDecoration: \"none\",\r\n            color: \"#e31a89\",\r\n          },\r\n          \"&.active\": {\r\n            color: \"#e31a89\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n}));\r\nconst Rewards = () => {\r\n  const location = useLocation();\r\n  const classes = useStyles();\r\n  const [tabview, setTabView] = useState(\"LpReward\");\r\n\r\n  useEffect(() => {\r\n    const ids = location.hash.split(\"#\");\r\n\r\n    if (ids[1] && ids[1] === \"stakeReward\") {\r\n      setTabView(\"StakeReward\");\r\n    } else if (ids[1] && ids[1] === \"Leaderboard\") {\r\n      setTabView(\"Leaderboard\");\r\n    } else if (ids[1] && ids[1] === \"Earn\") {\r\n      setTabView(\"Earn\");\r\n    } else if (ids[1] && ids[1] === \"EngagementRewards\") {\r\n      setTabView(\"EngagementRewards\");\r\n    } else {\r\n      setTabView(\"LpReward\");\r\n    }\r\n  }, [location]);\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root} elevation={2}>\r\n        <Box className=\"mainbox\">\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={12} sm={3}>\r\n              <Box className=\"leftbox\">\r\n                <Box className=\"buttonBox\">\r\n                  <Link\r\n                    className={tabview === \"LpReward\" ? \"active\" : \" \"}\r\n                    onClick={() => setTabView(\"LpReward\")}\r\n                  >\r\n                    LP Rewards\r\n                  </Link>\r\n                </Box>\r\n\r\n                <Box className=\"buttonBox\">\r\n                  <Link\r\n                    className={tabview === \"StakeReward\" ? \"active\" : \" \"}\r\n                    onClick={() => setTabView(\"StakeReward\")}\r\n                  >\r\n                    Stake Rewards\r\n                  </Link>\r\n                </Box>\r\n\r\n                <Box className=\"buttonBox\">\r\n                  <Link\r\n                    className={tabview === \"Earn\" ? \"active\" : \" \"}\r\n                    onClick={() => setTabView(\"Earn\")}\r\n                  >\r\n                    Engagement Mining\r\n                  </Link>\r\n                </Box>\r\n\r\n                {/* <Box className=\"buttonBox\">\r\n                  <Link\r\n                    className={tabview === \"EngagementRewards\" ? \"active\" : \" \"}\r\n                    onClick={() => setTabView(\"EngagementRewards\")}\r\n                  >\r\n                    Engagement Pool Info\r\n                  </Link>\r\n                </Box> */}\r\n                <Box className=\"buttonBox\">\r\n                  <Link\r\n                    className={tabview === \"Leaderboard\" ? \"active\" : \" \"}\r\n                    onClick={() => setTabView(\"Leaderboard\")}\r\n                  >\r\n                    Leaderboard\r\n                  </Link>\r\n                </Box>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={9}>\r\n              <Box className=\"rightbox\">\r\n                <Box py={3}>\r\n                  {tabview === \"StakeReward\" ? <StakeReward /> : \"\"}\r\n                  {tabview === \"LpReward\" ? <LpReward /> : \"\"}\r\n                  {tabview === \"Earn\" ? <Earn /> : \"\"}\r\n                  {tabview === \"EngagementRewards\" ? <EngagementRewards /> : \"\"}\r\n                  {tabview === \"Leaderboard\" ? <Leaderboard /> : \"\"}\r\n                </Box>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default Rewards;\r\n"],"sourceRoot":""}