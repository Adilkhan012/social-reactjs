{"version":3,"sources":["views/pages/NFTDomain/Arialn.ttf","views/pages/NFTDomain/lazi.jpeg","views/pages/NFTDomain/Auction.js","views/pages/NFTDomain/contractABI.js","views/pages/NFTDomain/NFTDomain.js"],"names":["module","exports","makeStyles","theme","root","padding","breakpoints","down","marginBottom","contractABI","inputs","stateMutability","type","name","anonymous","indexed","internalType","outputs","components","useStyles","snackbarMessage","backgroundColor","color","fontWeight","borderRadius","boxShadow","shadows","fontSize","textAlign","marginRight","alertIcon","warningContainer","display","justifyContent","alignItems","top","left","zIndex","warningMessage","margin","maxWidth","generateNftImage","Web3","window","ethereum","domainName","loadImage","LaziImage","bgImage","canvas","createCanvas","width","height","ctx","getContext","drawImage","font","textWidth","measureText","x","y","fillStyle","fillText","dataUrl","toDataURL","NFTDomain","classes","useMediaQuery","useState","openSnackbar","setOpenSnackbar","setSnackbarMessage","setLaziNames","searchTerm","setSearchTerm","isLoading","setIsLoading","isLoadingMint","setIsLoadingMint","message","isMinted","setIsMinted","isDisabled","setIsDisabled","mintedDomainNames","setMintedDomainNames","images","setImages","domains","cimages","setImagesc","exist","len","handleInputChange","e","target","value","trim","length","initContract","accounts","contract","methods","call","console","error","web3","eth","getAccounts","Contract","handleBuyLaziName","preventDefault","log","getPrice","from","nftPrice","buyLaziNames","estimateGas","gasEstimate","send","gas","maxPriorityFeePerGas","utils","toWei","result","toast","success","errorMessage","startIndex","indexOf","endIndex","Message","substring","Error","axios","method","url","ApiConfig","createNftDomainName","headers","token","localStorage","getItem","data","ownerName","ownerAddress","status","getOwnerMintedLaziDomains","mintedDomains","tokensOfOwner","tokenIds","tokenId","domainNameOf","mintedDomain","push","convertToImages","imageUrl","useEffect","fetchMintedDomainNames","displaySnackbar","convertMintedDomainNamesToImages","convertToImagesCommunity","imagesc","img","Snackbar","open","autoHideDuration","onClose","event","reason","anchorOrigin","vertical","horizontal","Alert","variant","severity","className","Paper","TextField","placeholder","onChange","InputProps","startAdornment","InputAdornment","position","style","right","endAdornment","CircularProgress","size","onClick","disabled","backgroundcolor","map","index","key","src","alt","imageUrls","marginTop","marginLeft"],"mappings":"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","file":"static/js/46.accef23b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Arialn.481816eb.ttf\";","module.exports = __webpack_public_path__ + \"static/media/lazi.4c4169fb.jpeg\";","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Paper,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  FormControl,\r\n  TextField,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport Page from \"src/component/Page\";\r\nimport AuctionCard from \"src/component/AuctionCard\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport Apiconfigs from \"src/ApiConfig/ApiConfig\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport moment from \"moment\";\r\nimport ButtonCircularProgress from \"src/component/ButtonCircularProgress\";\r\nimport DataLoading from \"src/component/DataLoading\";\r\nimport NoDataFound from \"src/component/NoDataFound\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"25px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      padding: \"10px\",\r\n    },\r\n    \"& .heading\": {\r\n      marginBottom: \"20px\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Auction(props) {\r\n  const { myAuctionList, calBackFunc } = props;\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [auctionList, setAuctionList] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [noOfPages, setNoOfPages] = useState(1);\r\n  const allAuctionDeleteHandler = async () => {\r\n    try {\r\n      const res = await axios.get(Apiconfigs.expiredAuction, {});\r\n      if (res.data.responseCode === 200) {\r\n        // setAuctionList(res.data.result.docs);\r\n        // setNoOfPages(res.data.result.pages);\r\n      }\r\n    } catch (error) { }\r\n  };\r\n  const allAuctionListHandler = async () => {\r\n    try {\r\n      const res = await axios.get(Apiconfigs.listAuction, {\r\n        params: {\r\n          limit: 10,\r\n          page: page,\r\n        },\r\n        headers: {\r\n          token: localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      if (res.data.responseCode === 200) {\r\n        setAuctionList(res.data.result.docs);\r\n        setNoOfPages(res.data.result.pages);\r\n      }\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    allAuctionDeleteHandler();\r\n    allAuctionListHandler();\r\n  }, [page]);\r\n\r\n\r\n  const pageCheck = page === 1 ? 10 : 0;\r\n\r\n  return (\r\n    <>\r\n      <Page title='Auction'>\r\n        <Paper className={classes.root} elevation={2}>\r\n          <Box className='heading'>\r\n            {/* <Typography variant='h3'>Auctions</Typography> */}\r\n          </Box>\r\n          <Box className='heading'>\r\n            {/* <Button\r\n              variant='contained'\r\n              color='secondary'\r\n              size='large'\r\n              onClick={() => setOpen(true)}\r\n            >\r\n              Make a New Auction\r\n            </Button> */}\r\n          </Box>\r\n          {isLoading ? (\r\n            <DataLoading />\r\n          ) : (\r\n            <Grid container spacing={2}>\r\n              {myAuctionList && myAuctionList ? (\r\n                <>\r\n                  {myAuctionList && myAuctionList.length === 0 && (\r\n                    <NoDataFound />\r\n                  )}\r\n                  {myAuctionList &&\r\n                    myAuctionList.map((data, i) => {\r\n                      return (\r\n                        <Grid item lg={3} md={4} sm={6} xs={6}>\r\n                          <AuctionCard\r\n                            callbackFun={allAuctionListHandler}\r\n                            data={data}\r\n                            type='card'\r\n                            index={i}\r\n                            key={i}\r\n                          />\r\n                        </Grid>\r\n                      );\r\n                    })}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {auctionList && auctionList.length === 0 && <NoDataFound />}\r\n                  {auctionList &&\r\n                    auctionList.map((data, i) => {\r\n                      return (\r\n                        <Grid item lg={3} md={4} sm={6} xs={6}>\r\n                          <AuctionCard\r\n                            callbackFun={calBackFunc || allAuctionListHandler}\r\n                            data={data}\r\n                            type='card'\r\n                            key={i}\r\n                          />\r\n                        </Grid>\r\n                      );\r\n                    })}\r\n                </>\r\n              )}\r\n            </Grid>\r\n          )}\r\n        </Paper>\r\n        {auctionList && auctionList.length >= pageCheck && (\r\n          <Box mt={2} display='flex' justifyContent='center'>\r\n            <Pagination\r\n              count={noOfPages}\r\n              page={page}\r\n              onChange={(e, v) => setPage(v)}\r\n            />\r\n          </Box>\r\n        )}\r\n        {open && (\r\n          <MakeAuctionModal\r\n            callbackFun={allAuctionListHandler}\r\n            open={open}\r\n            setOpen={(status) => setOpen(status)}\r\n          />\r\n        )}\r\n      </Page>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Auction;\r\n\r\nexport function MakeAuctionModal({\r\n  open,\r\n  setOpen,\r\n  callbackFun,\r\n  isEdit,\r\n  auctionNFTDetails,\r\n}) {\r\n  const classes = useStyles();\r\n  const [title, setTitle] = useState(\"\");\r\n  console.log(\"title\", title, title.length);\r\n  const [uploadFile, setUploadFile] = useState(\"\");\r\n  const [uploadFileBlob, setUploadFileBlob] = useState(\"\");\r\n  const [uploadFileType, setUploadFileType] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [expiryDate, setExpiryDate] = useState();\r\n  console.log(\r\n    \"expiryDate\",\r\n    moment(expiryDate).local().format(\"DD:MM:YYYY hh:mm\")\r\n  );\r\n  const [startingBid, setStartingBid] = useState(\"\");\r\n  console.log(\"Number(startingBid\", Number(startingBid), startingBid);\r\n  const [isSubmit, setIsSubmit] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const submitHandler = async () => {\r\n    setIsSubmit(true);\r\n    if (\r\n      title != \"\" &&\r\n      uploadFile != \"\" &&\r\n      description != \"\" &&\r\n      description.length < 200 &&\r\n      title.length < 60 &&\r\n      startingBid > 0 &&\r\n      Number(startingBid) < 2000\r\n    ) {\r\n      setIsLoading(true);\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", uploadFile);\r\n        const res = await axios({\r\n          method: \"POST\",\r\n          url: Apiconfigs.updateAuction,\r\n          data: formData,\r\n        });\r\n        if (res.data.responseCode === 200) {\r\n          const uploadFileURL = res.data.result.secure_url;\r\n          const createRes = await axios.post(\r\n            Apiconfigs.createAuctionNft,\r\n            {\r\n              title: title,\r\n              mediaUrl: uploadFileURL,\r\n              details: description,\r\n              time: expiryDate,\r\n              price: startingBid,\r\n            },\r\n            {\r\n              headers: {\r\n                token: localStorage.getItem(\"token\"),\r\n              },\r\n            }\r\n          );\r\n          if (createRes.data.responseCode === 200) {\r\n            if (callbackFun) {\r\n              callbackFun();\r\n            }\r\n            toast.success(createRes.data.responseMessage);\r\n            setOpen(false);\r\n          } else {\r\n            toast.error(createRes.data.responseMessage);\r\n          }\r\n          setIsLoading(false);\r\n        } else {\r\n          toast.error(res.data.responseMessage);\r\n          setIsLoading(false);\r\n        }\r\n      } catch (error) {\r\n        if (error.response) {\r\n          toast.error(error.response.data.responseMessage);\r\n        } else {\r\n          toast.error(error.message);\r\n        }\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateAuctionNFTHandler = async () => {\r\n    setIsSubmit(true);\r\n    if (\r\n      title != \"\" &&\r\n      description != \"\" &&\r\n      startingBid != \"\" &&\r\n      Number(startingBid) > 0 &&\r\n      Number(startingBid) < 2000\r\n    ) {\r\n      setIsLoading(true);\r\n      try {\r\n        let res = \"\";\r\n        if (uploadFile) {\r\n          const formData = new FormData();\r\n          formData.append(\"file\", uploadFile);\r\n          res = await axios({\r\n            method: \"POST\",\r\n            url: Apiconfigs.uploadFile,\r\n            data: formData,\r\n          });\r\n        }\r\n        if (res?.data?.responseCode === 200 || !uploadFile) {\r\n          let body = {\r\n            auctionId: auctionNFTDetails?._id,\r\n            title: title,\r\n            details: description,\r\n            time: expiryDate,\r\n            amount: startingBid,\r\n          };\r\n          if (uploadFile && res?.data?.result?.secure_ur) {\r\n            const uploadFileURL = res.data.result.secure_url;\r\n            body.mediaUrl = uploadFileURL;\r\n          }\r\n          const createRes = await axios.put(Apiconfigs.updateAuction, body, {\r\n            headers: {\r\n              token: localStorage.getItem(\"token\"),\r\n            },\r\n          });\r\n          if (createRes.data.responseCode === 200) {\r\n            if (callbackFun) {\r\n              callbackFun();\r\n            }\r\n            toast.success(createRes.data.responseMessage);\r\n            setOpen(false);\r\n          } else {\r\n            toast.error(createRes.data.responseMessage);\r\n          }\r\n          setIsLoading(false);\r\n        } else {\r\n          toast.error(res.data.responseMessage);\r\n          setIsLoading(false);\r\n        }\r\n      } catch (error) {\r\n        if (error.response) {\r\n          toast.error(error.response.data.responseMessage);\r\n        } else {\r\n          toast.error(error.message);\r\n        }\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (auctionNFTDetails && isEdit) {\r\n      setTitle(auctionNFTDetails?.title);\r\n      setUploadFileBlob(auctionNFTDetails?.mediaUrl);\r\n      setDescription(auctionNFTDetails?.details);\r\n      setExpiryDate(auctionNFTDetails?.time);\r\n      setStartingBid(auctionNFTDetails?.amount);\r\n      const fileExtention = auctionNFTDetails.mediaUrl.split(\".\").pop();\r\n\r\n      const fileType =\r\n        fileExtention == \"mp4\" || fileExtention == \"webp\"\r\n          ? \"video\"\r\n          : fileExtention == \"mp3\"\r\n            ? \"audio\"\r\n            : \"image\";\r\n      setUploadFileType(fileType);\r\n      setUploadFileType(fileType);\r\n    }\r\n  }, [isEdit, auctionNFTDetails]);\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby='alert-dialog-title'\r\n      aria-describedby='alert-dialog-description'\r\n      maxWidth='sm'\r\n      fullWidth\r\n    >\r\n      <DialogTitle id='alert-dialog-title' align='center'>\r\n        {isEdit ? \"Edit Auction\" : \"Make a New Auction\"}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Box className={classes.mainmodalBox}>\r\n          <Grid container direction={\"column\"} spacing={3}>\r\n            <Grid item xs={6}>\r\n              <Box mt={2}>\r\n                <Typography\r\n                  variant='h6'\r\n                  color='primary.main'\r\n                  style={{ paddingBottom: \"8px\" }}\r\n                >\r\n                  Title\r\n                </Typography>\r\n                <TextField\r\n                  id='outlined-basic'\r\n                  variant='outlined'\r\n                  name='Text Field'\r\n                  placeholder='Write here...'\r\n                  type='text'\r\n                  fullWidth\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                  inputProps={{\r\n                    maxLength: 61,\r\n                    readOnly: isLoading,\r\n                  }}\r\n                  error={\r\n                    (isSubmit && title == \"\") ||\r\n                    (title !== \"\" && title.length > 60)\r\n                  }\r\n                  helperText={\r\n                    (isSubmit && title == \"\" && \"Please enter title\") ||\r\n                    (title !== \"\" &&\r\n                      title.length > 60 &&\r\n                      \" Title should be less than or equal to 60 characters\")\r\n                  }\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Box mt={2}>\r\n                {/* <Typography\r\n                  variant=\"h6\"\r\n                  color=\"primary.main\"\r\n                  style={{ paddingBottom: \"8px\" }}\r\n                >\r\n                  Upload a photo or Video\r\n                </Typography>\r\n                <input\r\n                  readOnly={isLoading}\r\n                  type=\"file\"\r\n                  accept=\"image/*,.mp4,.mp3\"\r\n                  onChange={(e) => {\r\n                    if (e.target.files[0]) {\r\n                      setUploadFile(e.target.files[0]);\r\n                      setUploadFileBlob(URL.createObjectURL(e.target.files[0]));\r\n                      const fileExtention = e.target.files[0].name\r\n                        .split(\".\")\r\n                        .pop();\r\n\r\n                      const fileType =\r\n                        fileExtention == \"mp4\" || fileExtention == \"webp\"\r\n                          ? \"video\"\r\n                          : fileExtention == \"mp3\"\r\n                          ? \"audio\"\r\n                          : \"image\";\r\n                      setUploadFileType(fileType);\r\n                    }\r\n                  }}\r\n                />\r\n                <Box>\r\n                  <Typography variant=\"h5\">Add photos/videos</Typography>\r\n                </Box> */}\r\n                {uploadFileBlob && uploadFileType && (\r\n                  <Box>\r\n                    {(uploadFileType == \"video\" ||\r\n                      uploadFileType == \"audio\") && (\r\n                        <video\r\n                          // width='100%'\r\n                          loop={false}\r\n                          autoPlay={false}\r\n                          muted={true}\r\n                          controls\r\n                          style={\r\n                            uploadFileType === \"audio\"\r\n                              ? { height: 75, width: \"100%\" }\r\n                              : { height: 250, width: \"100%\" }\r\n                          }\r\n                        >\r\n                          <source src={uploadFileBlob} type='video/mp4' />\r\n                        </video>\r\n                      )}\r\n                    {uploadFileType == \"image\" && (\r\n                      <img\r\n                        src={uploadFileBlob}\r\n                        style={{ height: 250 }}\r\n                        alt=''\r\n                      />\r\n                    )}\r\n                  </Box>\r\n                )}\r\n\r\n                {isSubmit && uploadFileBlob == \"\" && (\r\n                  <FormHelperText error>Please select file</FormHelperText>\r\n                )}\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Box mt={2}>\r\n                <Typography\r\n                  variant='h6'\r\n                  color='primary.main'\r\n                  style={{ paddingBottom: \"8px\" }}\r\n                >\r\n                  Description\r\n                </Typography>\r\n                <TextField\r\n                  id='outlined-basic'\r\n                  variant='outlined'\r\n                  name='Text Field'\r\n                  placeholder='Write here...'\r\n                  type='text'\r\n                  fullWidth\r\n                  multiline\r\n                  maxRows={5}\r\n                  // rows={5}\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                  inputProps={{\r\n                    maxLength: 201,\r\n                    readOnly: isLoading,\r\n                  }}\r\n                  error={\r\n                    (isSubmit && description == \"\") ||\r\n                    (description !== \"\" && description.length > 200)\r\n                  }\r\n                  helperText={\r\n                    (isSubmit &&\r\n                      description == \"\" &&\r\n                      \"Please enter description\") ||\r\n                    (description !== \"\" &&\r\n                      description.length > 200 &&\r\n                      \"Description should be less than or equal to 200 characters\")\r\n                  }\r\n                />\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6} lg={6} md={6}>\r\n              <Box mt={3}>\r\n                <FormControl fullWidth>\r\n                  <Typography\r\n                    variant='h6'\r\n                    color='primary.main'\r\n                    style={{ paddingBottom: \"8px\" }}\r\n                  >\r\n                    Expiry Date\r\n                  </Typography>\r\n                  <KeyboardDatePicker\r\n                    format='DD/MM/YYYY'\r\n                    inputVariant='outlined'\r\n                    disablePast\r\n                    margin='dense'\r\n                    minDate={moment().add(10, \"hours\")}\r\n                    onChange={(date) => setExpiryDate(date)}\r\n                    value={expiryDate}\r\n                  />\r\n                </FormControl>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={6} sm={6}>\r\n              <Box mt={3}>\r\n                <FormControl fullWidth>\r\n                  <Typography\r\n                    variant='h6'\r\n                    color='primary.main'\r\n                    style={{ paddingBottom: \"8px\" }}\r\n                  >\r\n                    Starting Bid\r\n                  </Typography>\r\n                  <TextField\r\n                    id='outlined-basic'\r\n                    variant='outlined'\r\n                    name='Text Field'\r\n                    type='number'\r\n                    fullWidth\r\n                    value={startingBid}\r\n                    onKeyPress={(event) => {\r\n                      if (event?.key === \"-\" || event?.key === \"+\") {\r\n                        event.preventDefault();\r\n                      }\r\n                    }}\r\n                    onChange={(e) => setStartingBid(e.target.value)}\r\n                    inputProps={{\r\n                      readOnly: isLoading,\r\n                    }}\r\n                    error={\r\n                      (isSubmit && startingBid === \"\") ||\r\n                      (startingBid !== \"\" && Number(startingBid) === 0) ||\r\n                      (startingBid !== \"\" && Number(startingBid) > 2000)\r\n                    }\r\n                    helperText={\r\n                      (isSubmit &&\r\n                        startingBid === \"\" &&\r\n                        \"Please enter starting bid price is required\") ||\r\n                      (startingBid !== \"\" &&\r\n                        Number(startingBid) === 0 &&\r\n                        \"Please enter valid starting bid price\") ||\r\n                      (startingBid !== \"\" &&\r\n                        Number(startingBid) > 2000 &&\r\n                        \"Starting bid price should be less than or equal to 2000\")\r\n                    }\r\n                  />\r\n                </FormControl>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n          <Box mt={4} mb={3} align='center'>\r\n            <Button\r\n              variant='contained'\r\n              size='large'\r\n              color='primary'\r\n              onClick={() => setOpen(false)}\r\n              className={classes.btn1}\r\n              disabled={isLoading}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant='contained'\r\n              size='large'\r\n              color='secondary'\r\n              onClick={() =>\r\n                isEdit ? updateAuctionNFTHandler() : submitHandler()\r\n              }\r\n              style={{ marginLeft: \"8px\" }}\r\n              disabled={isLoading}\r\n            >\r\n              {isEdit ? \"Update\" : \"Submit\"}{\" \"}\r\n              {isLoading && <ButtonCircularProgress />}\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","// const contractABI = JSON.parse(\r\n//   '[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"_signatureUsed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"_laziNames\",\"type\":\"string[]\"}],\"name\":\"airdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"_laziNames\",\"type\":\"string[]\"}],\"name\":\"airdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"autoApproveMarketplace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"_laziNames\",\"type\":\"string[]\"}],\"name\":\"buyLaziNames\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"_laziNames\",\"type\":\"string[]\"},{\"internalType\":\"bytes32\",\"name\":\"_signedMessageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"buyLaziNamesWhitelist\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"domainNameOf\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"}],\"internalType\":\"struct IERC721A.TokenOwnership\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"explicitOwnershipsOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"}],\"internalType\":\"struct IERC721A.TokenOwnership[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_messageHash\",\"type\":\"bytes32\"}],\"name\":\"getEthSignedMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_qty\",\"type\":\"uint256\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"priceNow\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"isMinted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"laziNamePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"}],\"name\":\"messageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleActiveTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_laziNameImages\",\"type\":\"string\"}],\"name\":\"set_laziNameImages\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_laziNamePrice\",\"type\":\"uint256\"}],\"name\":\"set_laziNamePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mintSigner\",\"type\":\"address\"}],\"name\":\"set_mintSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_feeNumerator\",\"type\":\"uint96\"}],\"name\":\"set_royalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_saleActiveTime\",\"type\":\"uint256\"}],\"name\":\"set_saleActiveTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_signedMessageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"verifySignature\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]'\r\n// );\r\n\r\nconst contractABI = [\r\n  { inputs: [], stateMutability: \"nonpayable\", type: \"constructor\" },\r\n  { inputs: [], name: \"ApprovalCallerNotOwnerNorApproved\", type: \"error\" },\r\n  { inputs: [], name: \"ApprovalQueryForNonexistentToken\", type: \"error\" },\r\n  { inputs: [], name: \"ApprovalToCurrentOwner\", type: \"error\" },\r\n  { inputs: [], name: \"ApproveToCaller\", type: \"error\" },\r\n  { inputs: [], name: \"BalanceQueryForZeroAddress\", type: \"error\" },\r\n  { inputs: [], name: \"InvalidQueryRange\", type: \"error\" },\r\n  { inputs: [], name: \"MintToZeroAddress\", type: \"error\" },\r\n  { inputs: [], name: \"MintZeroQuantity\", type: \"error\" },\r\n  { inputs: [], name: \"OwnerQueryForNonexistentToken\", type: \"error\" },\r\n  { inputs: [], name: \"TransferCallerNotOwnerNorApproved\", type: \"error\" },\r\n  { inputs: [], name: \"TransferFromIncorrectOwner\", type: \"error\" },\r\n  { inputs: [], name: \"TransferToNonERC721ReceiverImplementer\", type: \"error\" },\r\n  { inputs: [], name: \"TransferToZeroAddress\", type: \"error\" },\r\n  { inputs: [], name: \"URIQueryForNonexistentToken\", type: \"error\" },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"approved\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Approval\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n      { indexed: false, internalType: \"bool\", name: \"approved\", type: \"bool\" },\r\n    ],\r\n    name: \"ApprovalForAll\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"previousOwner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"newOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"OwnershipTransferred\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { indexed: true, internalType: \"address\", name: \"to\", type: \"address\" },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Transfer\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    name: \"WL\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"bytes\", name: \"\", type: \"bytes\" }],\r\n    name: \"_signatureUsed\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address[]\", name: \"addresses\", type: \"address[]\" },\r\n    ],\r\n    name: \"addToWL\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"_address\", type: \"address\" },\r\n      { internalType: \"string[]\", name: \"_laziNames\", type: \"string[]\" },\r\n    ],\r\n    name: \"airdrop\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address[]\", name: \"_addresses\", type: \"address[]\" },\r\n      { internalType: \"string[]\", name: \"_laziNames\", type: \"string[]\" },\r\n    ],\r\n    name: \"airdrop\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"approve\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"_spender\", type: \"address\" }],\r\n    name: \"autoApproveMarketplace\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"owner\", type: \"address\" }],\r\n    name: \"balanceOf\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"string[]\", name: \"_laziNames\", type: \"string[]\" },\r\n    ],\r\n    name: \"buyLaziNames\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    name: \"domainNameOf\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"explicitOwnershipOf\",\r\n    outputs: [\r\n      {\r\n        components: [\r\n          { internalType: \"address\", name: \"addr\", type: \"address\" },\r\n          { internalType: \"uint64\", name: \"startTimestamp\", type: \"uint64\" },\r\n          { internalType: \"bool\", name: \"burned\", type: \"bool\" },\r\n        ],\r\n        internalType: \"struct IERC721A.TokenOwnership\",\r\n        name: \"\",\r\n        type: \"tuple\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256[]\", name: \"tokenIds\", type: \"uint256[]\" },\r\n    ],\r\n    name: \"explicitOwnershipsOf\",\r\n    outputs: [\r\n      {\r\n        components: [\r\n          { internalType: \"address\", name: \"addr\", type: \"address\" },\r\n          { internalType: \"uint64\", name: \"startTimestamp\", type: \"uint64\" },\r\n          { internalType: \"bool\", name: \"burned\", type: \"bool\" },\r\n        ],\r\n        internalType: \"struct IERC721A.TokenOwnership[]\",\r\n        name: \"\",\r\n        type: \"tuple[]\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"getApproved\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"_qty\", type: \"uint256\" }],\r\n    name: \"getPrice\",\r\n    outputs: [{ internalType: \"uint256\", name: \"priceNow\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"_owner\", type: \"address\" },\r\n      { internalType: \"address\", name: \"_operator\", type: \"address\" },\r\n    ],\r\n    name: \"isApprovedForAll\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    name: \"isMinted\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"laziNamePrice\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"laziNamePriceWL\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"mintSigner\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"name\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"owner\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"ownerOf\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address[]\", name: \"addresses\", type: \"address[]\" },\r\n    ],\r\n    name: \"removeFromWL\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"renounceOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_tokenId\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"_salePrice\", type: \"uint256\" },\r\n    ],\r\n    name: \"royaltyInfo\",\r\n    outputs: [\r\n      { internalType: \"address\", name: \"\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"\", type: \"uint256\" },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n      { internalType: \"bytes\", name: \"_data\", type: \"bytes\" },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"saleActiveTime\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"operator\", type: \"address\" },\r\n      { internalType: \"bool\", name: \"approved\", type: \"bool\" },\r\n    ],\r\n    name: \"setApprovalForAll\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"string\", name: \"_laziNameImages\", type: \"string\" },\r\n    ],\r\n    name: \"set_laziNameImages\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_laziNamePrice\", type: \"uint256\" },\r\n    ],\r\n    name: \"set_laziNamePrice\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_laziNamePriceWL\", type: \"uint256\" },\r\n    ],\r\n    name: \"set_laziNamePriceWL\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"_mintSigner\", type: \"address\" }],\r\n    name: \"set_mintSigner\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"_receiver\", type: \"address\" },\r\n      { internalType: \"uint96\", name: \"_feeNumerator\", type: \"uint96\" },\r\n    ],\r\n    name: \"set_royalty\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_saleActiveTime\", type: \"uint256\" },\r\n    ],\r\n    name: \"set_saleActiveTime\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"bytes4\", name: \"interfaceId\", type: \"bytes4\" }],\r\n    name: \"supportsInterface\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"symbol\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"tokenURI\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"owner\", type: \"address\" }],\r\n    name: \"tokensOfOwner\",\r\n    outputs: [{ internalType: \"uint256[]\", name: \"\", type: \"uint256[]\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"start\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"stop\", type: \"uint256\" },\r\n    ],\r\n    name: \"tokensOfOwnerIn\",\r\n    outputs: [{ internalType: \"uint256[]\", name: \"\", type: \"uint256[]\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"totalSupply\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"transferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"newOwner\", type: \"address\" }],\r\n    name: \"transferOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"withdraw\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n];\r\n\r\nexport default contractABI;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Auction from \"./Auction\";\r\nimport Web3 from \"web3\";\r\nimport contractABI from \"./contractABI\";\r\nimport \"./styles.css\";\r\nimport ArialFont from \"./Arialn.ttf\";\r\nimport LaziImage from \"./lazi.jpeg\";\r\n\r\nimport { AuthContext } from \"src/context/Auth\";\r\nimport { MdPhoto, MdAddToPhotos } from \"react-icons/md\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport ApiConfig from \"src/ApiConfig/ApiConfig\";\r\nimport { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n// import { createCanvas, registerFont } from \"canvas\";\r\nimport { createCanvas, loadImage, registerFont } from \"canvas\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { Paper, InputAdornment } from \"@material-ui/core\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  snackbarMessage: {\r\n    backgroundColor: \"#e70c9b\",\r\n    color: \"#dfff4e\",\r\n    fontWeight: \"bold\",\r\n    borderRadius: \"20px\",\r\n    padding: \"10px 20px\",\r\n    boxShadow: theme.shadows[5],\r\n    fontSize: \"1.5rem\",\r\n    \"& .MuiSnackbarContent-message\": {\r\n      fontSize: \"4rem\",\r\n      textAlign: \"center\",\r\n    },\r\n    \"& .MuiSnackbarContent-action\": {\r\n      marginRight: 0,\r\n    },\r\n    \"& svg\": {\r\n      color: \"#dfff4e\",\r\n      fontSize: \"2.5rem\",\r\n      marginRight: \"10px\",\r\n    },\r\n  },\r\n\r\n  alertIcon: {\r\n    marginRight: \"8px\",\r\n  },\r\n  warningContainer: {\r\n    backgroundColor: \"E70C9B\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    top: 0,\r\n    left: 0,\r\n    zIndex: 9999,\r\n  },\r\n  warningMessage: {\r\n    backgroundColor: \"E70C9B\",\r\n    padding: 0,\r\n    margin: 0,\r\n    color: \"#E70C9B\",\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: 400,\r\n    textAlign: \"center\",\r\n    maxWidth: \"90%\",\r\n  },\r\n}));\r\n\r\nconst data = [\r\n  \"apple\",\r\n  \"banana\",\r\n  \"cherry\",\r\n  \"date\",\r\n  \"elderberry\",\r\n  \"Auction\",\r\n  \"Bidding\",\r\n];\r\nconst fruits = [\r\n  { name: \"Apple\", url: \"https://via.placeholder.com/100x100\" },\r\n  { name: \"Banana\", url: \"https://via.placeholder.com/100x100\" },\r\n  { name: \"Cherry\", url: \"https://via.placeholder.com/100x100\" },\r\n  { name: \"Date\", url: \"https://via.placeholder.com/100x100\" },\r\n  { name: \"Elderberry\", url: \"https://via.placeholder.com/100x100\" },\r\n];\r\n\r\n// Create a new Web3 instance\r\nconst web3 = new Web3(window.ethereum);\r\n\r\n// Get the account address of the current user\r\n// web3.eth.getAccounts()\r\n//   .then(accounts => {\r\n//     const account = accounts[0];\r\n//     console.log(`Current user account: ${account}`);\r\n//   });\r\n\r\n// Instantiate the contract object with your ABI and contract address\r\n// mainnet\r\nconst contractAddress = \"0x427C689E1d2eB7df41a14e0199609DA49e610A75\"; // Replace with your contract address\r\n//testnet\r\n// const contractAddress = \"0x775ceD56009D79460e092581Ec2DD1c75631025a\"; // Replace with your contract address\r\n// const contractAddress = \"0xB4EF36f15F225A0c4244CA5Abd5C5c2c03321092\"; // Replace with your contract address\r\n// const contract = new web3.eth.Contract(contractABI, contractAddress);\r\n\r\nconst generateNftImage = async (domainName) => {\r\n  // Load the background image\r\n  const bgImage = await loadImage(LaziImage);\r\n\r\n  // Create a canvas\r\n  const canvas = createCanvas(bgImage.width, bgImage.height);\r\n  const ctx = canvas.getContext(\"2d\");\r\n\r\n  // Draw the background image on the canvas\r\n  ctx.drawImage(bgImage, 0, 0);\r\n\r\n  // Register the font that you want to use\r\n  // registerFont(ArialFont, { family: \"Arial\" });\r\n  ctx.font = \"60px Arial\";\r\n\r\n  const textWidth = ctx.measureText(domainName).width;\r\n  const x = (canvas.width - textWidth) / 2;\r\n  const y = canvas.height - 80;\r\n  ctx.fillStyle = \"#ffffff\";\r\n  ctx.fillText(domainName, x, y);\r\n\r\n  // Convert the canvas to a data URL\r\n  const dataUrl = canvas.toDataURL();\r\n\r\n  return dataUrl;\r\n};\r\n\r\nconst NFTDomain = () => {\r\n  const classes = useStyles();\r\n  const isMobile = useMediaQuery((theme) => theme.breakpoints.down(\"xs\"));\r\n  const [openSnackbar, setOpenSnackbar] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\r\n  const [laziNames, setLaziNames] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [checkboxColor, setCheckboxColor] = useState(\"red\");\r\n  const [mintedDomain, setMintedDomain] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isLoadingMint, setIsLoadingMint] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isAvailable, setIsAvailable] = useState(null);\r\n  const [isMinted, setIsMinted] = useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  // Define a state variable to store the list of minted domain names\r\n  const [mintedDomainNames, setMintedDomainNames] = useState([]);\r\n  // When the component mounts, convert the minted domain names to images and store them in state\r\n  const [images, setImages] = useState([]);\r\n  const [domains, setDomains] = useState([\r\n    \"steve.lazi\",\r\n    \"jhons.lazi\",\r\n    \"thomsan.lazi\",\r\n    \"adam.lazi\",\r\n    \"smith.lazi\",\r\n  ]);\r\n  const [imageUrls, setImageUrls] = useState([]);\r\n  const [cimages, setImagesc] = useState([]);\r\n\r\n  const [exist, setExist] = useState(false);\r\n\r\n  const [len, setLen] = useState(false);\r\n\r\n  const [url, setUrl] = useState(\"https://images.app.goo.gl/RwQ4YFT2CCENspHp8\");\r\n\r\n  const handleSearch = async (e) => {\r\n    setSearchTerm(e.target.value);\r\n    setLoading(true);\r\n    if (data.includes(e.target.value)) {\r\n      setCheckboxColor(\"green\");\r\n      setExist(true);\r\n      setLen(e.target.value.length);\r\n    } else {\r\n      setCheckboxColor(\"red\");\r\n      setExist(false);\r\n    }\r\n\r\n    try {\r\n      const domain = await getMintedLaziDomain(searchTerm);\r\n      if (domain) {\r\n        setMintedDomain(domain);\r\n        setSuccess(true);\r\n        setMessage(\"Domain found!\");\r\n      } else {\r\n        setMintedDomain(null);\r\n        setSuccess(false);\r\n        setMessage(\"Domain not found.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setMessage(\"An error occurred.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = async (e) => {\r\n    const domainName = e.target.value;\r\n    if (domainName.trim().length === 0) {\r\n      // The input field is empty, disable the \"mint\" button\r\n      setIsDisabled(true);\r\n      setIsMinted(false);\r\n      setSearchTerm(\"\"); // Reset the search term to empty string\r\n      return;\r\n    }\r\n    setSearchTerm(domainName);\r\n\r\n    try {\r\n      const { accounts, contract } = await initContract();\r\n      setIsLoading(true);\r\n      const isMinted = await contract.methods.isMinted(domainName).call();\r\n\r\n      if (isMinted) {\r\n        setIsMinted(true);\r\n        setIsDisabled(true);\r\n        setIsLoading(false);\r\n      } else {\r\n        setIsMinted(false);\r\n        setIsDisabled(false);\r\n        setIsLoading(false);\r\n      }\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  let accounts = [];\r\n\r\n  const initContract = async () => {\r\n    try {\r\n      // await window.ethereum.enable(); // prompt user to connect their wallet\r\n      const web3 = new Web3(window.ethereum);\r\n      const accounts = await web3.eth.getAccounts();\r\n      const contract = new web3.eth.Contract(contractABI, contractAddress);\r\n\r\n      return { web3, accounts, contract };\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // call the function before interacting with the smart contract\r\n  const handleBuyLaziName = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      setIsLoadingMint(true);\r\n      const { web3, accounts, contract } = await initContract();\r\n      const isMinted = await contract.methods.isMinted(searchTerm).call();\r\n      if (isMinted) {\r\n        setIsMinted(true);\r\n        setIsDisabled(true);\r\n        setIsLoadingMint(false);\r\n        return;\r\n      }\r\n\r\n      console.log({ accounts });\r\n      console.log({ contract });\r\n\r\n      try {\r\n        try {\r\n          const _qty = 1; // Replace with your desired quantity\r\n\r\n          const nftPrice = await contract.methods\r\n            .getPrice(_qty)\r\n            .call({ from: accounts[0] });\r\n          // const nftPrice = 1;\r\n          console.log(\"Token Price : \", nftPrice);\r\n\r\n          const gasEstimate = await contract.methods\r\n            .buyLaziNames([searchTerm])\r\n            .estimateGas({\r\n              from: accounts[0],\r\n              value: nftPrice,\r\n            });\r\n\r\n          const result = await contract.methods\r\n            .buyLaziNames([searchTerm])\r\n            .send({\r\n              from: accounts[0],\r\n              gas: gasEstimate,\r\n              maxPriorityFeePerGas: web3.utils.toWei(\"32\",\"gwei\"),\r\n              value: nftPrice,\r\n            });\r\n\r\n          // Handle the result of the transaction\r\n          console.log(\"Transaction successful:\", result);\r\n          toast.success(\"UserName Minted Success. Now Saving!\");\r\n        } catch (error) {\r\n          setIsMinted(false);\r\n          setIsLoadingMint(false);\r\n          setSearchTerm(\"\");\r\n          console.log(error);\r\n          let errorMessage = \"An error occurred during the transaction.\";\r\n\r\n          if (error.message) {\r\n            const startIndex = error.message.indexOf(\" reverted: \") + 10;\r\n            const endIndex = error.message.indexOf('\",', startIndex);\r\n            const Message = error.message.substring(startIndex, endIndex);\r\n            toast.error(Message); // Display toast error message\r\n            return; // Break the flow after displaying the specific error message\r\n          }\r\n\r\n          toast.error(errorMessage); // Display toast error message\r\n          throw new Error(errorMessage); // Rethrow the error with custom message\r\n        }\r\n        const response = await axios({\r\n          method: \"POST\",\r\n          url: ApiConfig.createNftDomainName,\r\n          headers: {\r\n            token: localStorage.getItem(\"token\"),\r\n          },\r\n          data: {\r\n            domainName: searchTerm,\r\n            ownerName: \"Lazi\",\r\n            ownerAddress: accounts[0],\r\n            // image: image,\r\n          },\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          setIsMinted(true);\r\n          setIsDisabled(true);\r\n          setIsLoadingMint(false);\r\n          setSearchTerm(\"\");\r\n          console.log(\"NFT domain created successfully\");\r\n          toast.success(` UserName Minted Success!`);\r\n          getOwnerMintedLaziDomains();\r\n        } else {\r\n          console.log(\"Failed to create NFT domain\");\r\n          setIsLoadingMint(false);\r\n          setSearchTerm(\"\");\r\n          toast.error(` Failed to mint UserName!`);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n        setIsMinted(false);\r\n        setIsLoadingMint(false);\r\n        setSearchTerm(\"\");\r\n        toast.error(` Failed to mint UserName!`);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setIsLoadingMint(false);\r\n      setSearchTerm(\"\");\r\n      toast.error(` Failed to mint UserName!`);\r\n    }\r\n  };\r\n\r\n  // function to fetch all minted lazi domains on owner wallet address\r\n  const getOwnerMintedLaziDomains = async () => {\r\n    try {\r\n      const { accounts, contract } = await initContract();\r\n      const mintedDomains = [];\r\n      // Get the token IDs owned by the connected account\r\n      const tokenIds = await contract.methods.tokensOfOwner(accounts[0]).call();\r\n      console.log(\"tokenIDs: \", tokenIds);\r\n      for (const tokenId of tokenIds) {\r\n        const mintedDomain = await contract.methods\r\n          .domainNameOf(tokenId)\r\n          .call();\r\n        mintedDomains.push(mintedDomain + \".lazi\");\r\n      }\r\n\r\n      setLaziNames(mintedDomains);\r\n      setMintedDomainNames(mintedDomains);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // function to search a specific minted lazi domainname:\r\n  const getMintedLaziDomain = async (domainName) => {\r\n    try {\r\n      const { accounts, contract } = await initContract();\r\n      const totalMinted = await contract.methods.totalSupply().call();\r\n\r\n      for (let i = 0; i <= totalMinted; i++) {\r\n        const mintedDomain = await contract.methods.domainNameOf(i).call();\r\n\r\n        if (mintedDomain === domainName) {\r\n          return mintedDomain;\r\n        }\r\n      }\r\n\r\n      // Domain name not found\r\n      return null;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // Define a function to convert the domain names to images\r\n  const convertToImages = async () => {\r\n    const images = [];\r\n\r\n    for (const domainName of mintedDomainNames) {\r\n      const imageUrl = await generateNftImage(domainName);\r\n      images.push(imageUrl);\r\n    }\r\n\r\n    return images;\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchMintedDomainNames() {\r\n      await getOwnerMintedLaziDomains();\r\n    }\r\n    fetchMintedDomainNames();\r\n    if (mintedDomainNames.length === 0) {\r\n      displaySnackbar(\"Mint Your Web3 UserName!.\");\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    async function convertMintedDomainNamesToImages() {\r\n      const images = await convertToImages();\r\n      setImages(images);\r\n    }\r\n\r\n    convertMintedDomainNamesToImages();\r\n  }, [mintedDomainNames]);\r\n\r\n  const convertToImagesCommunity = async () => {\r\n    const imagesc = [];\r\n\r\n    for (const img of domains) {\r\n      const imageUrl = await generateNftImage(img);\r\n      imagesc.push(imageUrl);\r\n    }\r\n\r\n    return imagesc;\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function convertMintedDomainNamesToImages() {\r\n      const cimages = await convertToImagesCommunity();\r\n      setImagesc(cimages);\r\n    }\r\n\r\n    convertMintedDomainNamesToImages();\r\n  }, [domains]);\r\n\r\n  //warning message function settings\r\n  const displaySnackbar = (message) => {\r\n    setSnackbarMessage(message);\r\n    setOpenSnackbar(true);\r\n  };\r\n\r\n  const handleCloseSnackbar = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Snackbar\r\n        open={openSnackbar}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseSnackbar}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n      >\r\n        <Alert\r\n          variant=\"filled\"\r\n          severity=\"warning\"\r\n          className={classes.snackbarMessage}\r\n        >\r\n          <span className={classes.alertIcon}>\r\n            <i className=\"fas fa-exclamation-triangle\"></i>\r\n          </span>\r\n          {snackbarMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n      <div className=\"domain-body\">\r\n        <div className=\"MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-6 MuiGrid-grid-md-6 MuiGrid-grid-lg-6\">\r\n          <h3 className=\"MuiTypography-root MuiTypography-h3\">\r\n            NFT Collection / User\r\n          </h3>\r\n        </div>\r\n        <div className={classes.warningContainer}>\r\n          <Paper className={classes.warningMessage}>\r\n            <p>UserName Price = 20 MATIC</p>\r\n            <p>200 $LAZI Airdropped within 24 hrs After Minting</p>\r\n          </Paper>\r\n        </div>\r\n        {/*  */}\r\n        <div className=\"input-bg\">\r\n          {/* input + button flex - section */}\r\n          <div className=\"input-flex\">\r\n            {isMinted ? (\r\n              <div className={isDisabled ? \"unavailable\" : \"available\"}>\r\n                {message}\r\n              </div>\r\n            ) : null}\r\n            <TextField\r\n              type=\"text\"\r\n              className=\"input\"\r\n              placeholder=\"Enter a UserName\"\r\n              value={searchTerm}\r\n              onChange={(e) => {\r\n                handleInputChange(e);\r\n                setIsMinted(false);\r\n                setIsDisabled(false);\r\n              }}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <div style={{ display: \"inline-block\" }}>\r\n                      {searchTerm.length > 0 && (\r\n                        <span\r\n                          style={{\r\n                            position: \"relative\",\r\n                            top: 0,\r\n                            left: searchTerm.length * 8 + 40,\r\n                            right: \"1.75rem\",\r\n                            color: \"#aaa\",\r\n                          }}\r\n                        >\r\n                          .lazi\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </InputAdornment>\r\n                ),\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    {searchTerm.length > 0 && (\r\n                      <>\r\n                        {isLoading ? (\r\n                          <CircularProgress size={24} />\r\n                        ) : isMinted ? (\r\n                          <ErrorIcon style={{ color: \"red\" }} />\r\n                        ) : (\r\n                          <CheckCircleIcon style={{ color: \"green\" }} />\r\n                        )}\r\n                      </>\r\n                    )}\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n            <button\r\n              className=\"button btx\"\r\n              onClick={handleBuyLaziName}\r\n              disabled={isDisabled || searchTerm.length === 0}\r\n              style={{ backgroundcolor: \"#E31A89\" }}\r\n            >\r\n              {isLoadingMint ? <CircularProgress size={24} /> : \"Mint\"}\r\n            </button>\r\n          </div>\r\n          {/* input + button flex - section end */}\r\n\r\n          {/* domains button url section */}\r\n          {/* <div className=\"btn-domain-section\">\r\n            <button\r\n              style={{ backgroundcolor: \"#E31A89\" }}\r\n              className=\"button btn-1 btn-12 btn-y\"\r\n              onClick={getMintedLaziDomains}\r\n            >\r\n              Get Lazi Domains\r\n            </button>\r\n            {laziNames.length > 0 && (\r\n              <ul className=\"domain-list\">\r\n                {laziNames.map((domain) => (\r\n                  <li key={domain} className=\"domain-item\">\r\n                    <span className=\"domain-item-name\">{domain}</span>\r\n                    <span className=\"domain-item-owner\">\r\n                      Owner: {accounts[0]}\r\n                    </span>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </div> */}\r\n          {/* domains button url section end  */}\r\n\r\n          {/* input b-g div end here  */}\r\n        </div>\r\n\r\n        {/* user detail section including name | domain | url */}\r\n        <div className=\"user_domains\">\r\n          <h1>User Minted UserNames</h1>\r\n        </div>\r\n        <div>\r\n          {mintedDomainNames.length > 0 ? (\r\n            <div className=\"image-grid\">\r\n              {images.map((imageUrl, index) => (\r\n                <div key={index} className=\"book\">\r\n                  <div className=\"cover\">\r\n                    <img\r\n                      src={imageUrl}\r\n                      alt={`Minted domain name ${index}`}\r\n                      className=\"image\"\r\n                    />\r\n                  </div>\r\n                  {mintedDomainNames.map((index) => (\r\n                    <p key={index}></p>\r\n                  ))}\r\n\r\n                  <p>{mintedDomainNames[index]}</p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div className={classes.warningContainer}>\r\n              <Paper className={classes.warningMessage}>\r\n                <p>\r\n                  You don't have any minted UserNames. Please buy some UserNames\r\n                  to display.\r\n                </p>\r\n              </Paper>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"user_domains\">\r\n          <h1>Community UserNames</h1>\r\n        </div>\r\n        <div className=\"image-grid\">\r\n          {cimages.map((imageUrls, index) => (\r\n            <div key={index} className=\"book\">\r\n              <div className=\"cover\">\r\n                <img\r\n                  src={imageUrls}\r\n                  alt={`Minted domain name ${index}`}\r\n                  className=\"image\"\r\n                />\r\n              </div>\r\n              {domains.map((index) => (\r\n                <p key={index}></p>\r\n              ))}\r\n\r\n              <p>{domains[index]}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"card-body\">\r\n          <div className=\"card-img\"></div>\r\n\r\n          <div className=\"card-text\"></div>\r\n        </div>\r\n\r\n        {/* user detail section including name | domain | url   ends here*/}\r\n\r\n        {/* <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter a Domain\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n        <button onClick={handleSearch}>\r\n          {loading ? \"Loading...\" : \"Search\"}\r\n        </button>\r\n        {success && <p className=\"success-message\">{message}</p>}\r\n        {!success && message && <p className=\"error-message\">{message}</p>}\r\n        {mintedDomain && (\r\n          <p className=\"minted-message\">{`The domain name ${mintedDomain} is already minted.`}</p>\r\n        )}\r\n      </div>  */}\r\n\r\n        {exist && (\r\n          <div style={{ marginTop: 10 }}>\r\n            <p style={{ fontSize: 15, color: \"white\" }}>Domain......Name</p>\r\n            <div style={{ marginTop: 20, display: \"flex\" }}>\r\n              <img\r\n                src=\"https://www.shutterstock.com/image-illustration/domain-names-internet-web-telecommunication-260nw-1708219261.jpg\"\r\n                style={{ height: 200, width: 200 }}\r\n                alt=\"img\"\r\n              />\r\n              <img\r\n                src=\"https://www.shutterstock.com/image-illustration/domain-names-internet-web-telecommunication-260nw-1708219261.jpg\"\r\n                style={{ height: 200, width: 200, marginLeft: 30 }}\r\n                alt=\"img\"\r\n              />\r\n              <img\r\n                src=\"https://www.shutterstock.com/image-illustration/domain-names-internet-web-telecommunication-260nw-1708219261.jpg\"\r\n                style={{ height: 200, width: 200, marginLeft: 30 }}\r\n                alt=\"img\"\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {!exist && len > 3 && (\r\n          <div style={{ marginTop: 10 }}>\r\n            <p style={{ fontSize: 15, color: \"red\" }}>\r\n              Domain Name Found Found\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NFTDomain;\r\n"],"sourceRoot":""}