{"version":3,"sources":["views/pages/Bundles/BundlesDetail/Detail.js"],"names":["useStyles","makeStyles","theme","commentfullBox","position","top","left","fontSize","emojiBox","bottom","rightBox","display","alignItems","justifyContent","height","breakpoints","down","paddingTop","width","maxWidth","commentBox","borderTop","borderBottom","marginTop","padding","marginRight","searchaddress","margin","borderRadius","overflow","backgroundColor","maxHeight","mainBox","Accordion","withStyles","root","boxShadow","expanded","MuiAccordion","AccordionDetails","spacing","MuiAccordionDetails","AccordionSummary","marginBottom","minHeight","content","MuiAccordionSummary","props","data","auth","useContext","AuthContext","history","useHistory","classes","location","useLocation","useState","idd","setIdd","dataList","setDataList","isLoading","setIsLoading","message","setMessage","isLoadingData","setIsLoadingData","viewExclusivepostHandler","axios","method","url","Apiconfigs","viewExclusivepost","headers","token","window","localStorage","getItem","res","responseCode","result","isLikeEmoji","userData","_id","likeUser","likesUsers","filter","length","commentPostHandler","commentOnpost","postId","toast","success","responseMessage","error","likePostHandler","postLikeDislike","useEffect","search","substring","id","isvideo","mediaUrl","includes","setInputStr","title","className","aria-label","onClick","goBack","container","item","sm","md","lg","postType","isSubscribed","userType","style","cursor","innerHeight","controls","src","type","mt","mb","square","xs","align","iconbutton","event","emojiObject","emoji","color","aria-controls","size","comment","map","dataChild","i","listPublicExclusiveHandler","dataParent","alt","variant","name","placeholder","value","onChange","e","target","fullWidth","disabled"],"mappings":"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","file":"static/js/69.e5d41d82.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Paper,\r\n  Container,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Page from \"src/component/Page\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport CommentBox from \"src/component/CommentBox\";\r\nimport UserProfile from \"src/component/UserProfile\";\r\nimport { BiCommentDots } from \"react-icons/bi\";\r\nimport { MdCancel } from \"react-icons/md\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { AuthContext } from \"src/context/Auth\";\r\nimport Apiconfigs from \"src/ApiConfig/ApiConfig\";\r\nimport { FaHeart } from \"react-icons/fa\";\r\nimport MuiAccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport MuiAccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport MuiAccordion from \"@material-ui/core/Accordion\";\r\nimport DataLoading from \"src/component/DataLoading\";\r\nimport { BsEmojiLaughing } from \"react-icons/bs\";\r\nimport Picker from \"emoji-picker-react\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  commentfullBox: {\r\n    position: \"relative\",\r\n    \"& .canelIcon\": {\r\n      position: \"fixed\",\r\n      top: \"20px\",\r\n      left: \"20px\",\r\n      fontSize: \"30px\",\r\n    },\r\n  },\r\n  emojiBox: {\r\n    position: \"absolute\",\r\n    // width: \"100%\",\r\n    bottom: \"47px\",\r\n  },\r\n  rightBox: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    height: \"97vh\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      height: \"auto\",\r\n      paddingTop: \"50px\",\r\n    },\r\n    \"& img\": {\r\n      width: \"auto\",\r\n      maxWidth: \"100%\",\r\n    },\r\n  },\r\n  commentBox: {\r\n    borderTop: \"0.5px solid #737373\",\r\n    borderBottom: \"0.5px solid #737373\",\r\n    marginTop: \"16px\",\r\n    padding: \"5px 0\",\r\n    \"& button\": {\r\n      \"& svg\": {\r\n        fontSize: \"20px\",\r\n        marginRight: \"5px\",\r\n      },\r\n    },\r\n  },\r\n  searchaddress: {\r\n    paddingTop: \"16px\",\r\n    position: \"sticky\",\r\n    \"& .figure\": {\r\n      margin: \"0\",\r\n      marginRight: \"15px\",\r\n      position: \"relative\",\r\n      \"& .profileimage\": {\r\n        height: \"50px\",\r\n        width: \"50px\",\r\n        borderRadius: \"50%\",\r\n        overflow: \"hidden\",\r\n        backgroundColor: \"#101010\",\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n          height: \"40px\",\r\n          width: \"40px\",\r\n        },\r\n        \"& img\": {\r\n          width: \"auto\",\r\n          maxWidth: \"100%\",\r\n          maxHeight: \"50px\",\r\n        },\r\n      },\r\n    },\r\n    \"& button\": {\r\n      backgroundColor: \"#373636\",\r\n      height: \"48px\",\r\n      borderRadius: \"5px\",\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        height: \"40px\",\r\n      },\r\n    },\r\n  },\r\n  mainBox: {\r\n    padding: \"20px\",\r\n  },\r\n}));\r\nconst Accordion = withStyles({\r\n  root: {\r\n    boxShadow: \"none\",\r\n    \"&:not(:last-child)\": {\r\n      borderBottom: 0,\r\n    },\r\n    \"&:before\": {\r\n      display: \"none\",\r\n    },\r\n    \"&$expanded\": {\r\n      margin: \"0\",\r\n    },\r\n  },\r\n  expanded: {},\r\n})(MuiAccordion);\r\nconst AccordionDetails = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      padding: \"10px 0 !important\",\r\n    },\r\n  },\r\n}))(MuiAccordionDetails);\r\nconst AccordionSummary = withStyles({\r\n  root: {\r\n    marginBottom: -1,\r\n    minHeight: \"auto\",\r\n    \"&$expanded\": {\r\n      minHeight: \"auto\",\r\n    },\r\n  },\r\n  content: {\r\n    margin: \"0px 0 \",\r\n    justifyContent: \"center\",\r\n    \"&$expanded\": {\r\n      margin: \"0px 0 \",\r\n    },\r\n  },\r\n  expanded: {},\r\n})(MuiAccordionSummary);\r\nexport default function (props) {\r\n  const { data } = props;\r\n  const auth = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const [idd, setIdd] = useState();\r\n  const [dataList, setDataList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isLoadingData, setIsLoadingData] = useState(true);\r\n\r\n  const viewExclusivepostHandler = async () => {\r\n    try {\r\n      const res = await axios({\r\n        method: \"GET\",\r\n        url: Apiconfigs.viewExclusivepost + idd,\r\n        headers: {\r\n          token: window.localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      if (res.data.responseCode === 200) {\r\n        setDataList(res.data.result);\r\n      }\r\n      setIsLoadingData(false);\r\n    } catch (error) {\r\n      setIsLoadingData(false);\r\n    }\r\n  };\r\n\r\n  let isLike = false;\r\n  let isLikeEmoji = false;\r\n\r\n  if (auth.userData?._id && dataList) {\r\n    const likeUser = dataList?.likesUsers?.filter(\r\n      (data) => data === auth.userData?._id\r\n    );\r\n    isLike = likeUser?.length > 0;\r\n  }\r\n\r\n  if (auth.userData?._id && dataList) {\r\n    const likeUser = dataList?.likesUsers?.filter(\r\n      (data) => data === auth.userData?._id\r\n    );\r\n    isLikeEmoji = likeUser?.length > 0;\r\n  }\r\n  // console.log(\"dataList from details.js \", data);\r\n  const commentPostHandler = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      // if (data.isSubscribed) {\r\n      // Allow the user to comment on the post\r\n      const res = await axios({\r\n        method: \"POST\",\r\n        url: Apiconfigs.commentOnpost,\r\n        headers: {\r\n          token: window.localStorage.getItem(\"token\"),\r\n        },\r\n        data: {\r\n          postId: idd,\r\n          message: message,\r\n        },\r\n      });\r\n      if (res.data.responseCode === 200) {\r\n        // if (dataList.isSubscribed) {\r\n        // Allow the user to comment on the post\r\n        viewExclusivepostHandler();\r\n        toast.success(res.data.responseMessage);\r\n        setMessage(\"\");\r\n      }\r\n      setIsLoading(false);\r\n      // } else {\r\n      //   // If the user is not subscribed, show a message or disable the comment functionality\r\n      //   toast.error(\"You must be a subscriber to comment on this post.\");\r\n      //   console.log(\"User is not subscribed!!!!!!!\");\r\n      // }\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const likePostHandler = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      // if (data.isSubscribed) {\r\n      // Allow the user to comment on the post\r\n      const res = await axios({\r\n        method: \"GET\",\r\n        url: Apiconfigs.postLikeDislike + idd,\r\n        headers: {\r\n          token: window.localStorage.getItem(\"token\"),\r\n        },\r\n        data: {\r\n          postId: idd,\r\n        },\r\n      });\r\n      if (res.data.responseCode === 200) {\r\n        // Allow the user to like the post\r\n        viewExclusivepostHandler();\r\n        toast.success(res.data.responseMessage);\r\n        // console.log(\"User is subscribed!!!!!!!\");\r\n        setIsLoading(false);\r\n      }\r\n      setIsLoading(false);\r\n      // } else {\r\n      //   // If the user is not subscribed, show a message or disable the comment functionality\r\n      //   toast.error(\"You must be a subscriber to like on this post.\");\r\n      //   console.log(\"User is not subscribed!!!!!!!\");\r\n      // }\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (location.search.substring(1, location.search.length)) {\r\n      const id = location.search.substring(1, location.search.length);\r\n      setIdd(id);\r\n    }\r\n    if (idd) {\r\n      viewExclusivepostHandler();\r\n    }\r\n  }, [location.search, idd]);\r\n\r\n  const isvideo = dataList?.mediaUrl?.includes(\".mp4\");\r\n  const [showPicker, setShowPicker] = useState(false);\r\n  const [inputStr, setInputStr] = useState(\"\");\r\n\r\n  const onEmojiClick = (event, emojiObject) => {\r\n    setInputStr((data) => data + emojiObject.emoji);\r\n    // setShowPicker(false);\r\n    likePostHandler();\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Dashboard\">\r\n      <Container maxWidth=\"fixed\">\r\n        <Box className={classes.commentfullBox}>\r\n          <IconButton aria-label=\"cancle\" className=\"canelIcon\">\r\n            <MdCancel onClick={() => history.goBack()} />\r\n          </IconButton>\r\n          {isLoadingData ? (\r\n            <DataLoading />\r\n          ) : (\r\n            <Grid container spacing={2}>\r\n              <Grid item sm={12} md={12} lg={8}>\r\n                {dataList?.postType === \"PUBLIC\" ||\r\n                dataList?.isSubscribed ||\r\n                auth?.userData?.userType === \"Admin\" ||\r\n                auth?.userData?.userType === \"Subadmin\" ? (\r\n                  <Box className={classes.rightBox}>\r\n                    {isvideo ? (\r\n                      <video\r\n                        width=\"100%\"\r\n                        style={{\r\n                          cursor: \"pointer\",\r\n                          height: window.innerHeight,\r\n                        }}\r\n                        controls\r\n                      >\r\n                        <source src={dataList.mediaUrl} type=\"video/mp4\" />\r\n                      </video>\r\n                    ) : (\r\n                      <img\r\n                        style={{ maxHeight: \"20vh\" }}\r\n                        src={dataList?.mediaUrl}\r\n                      />\r\n                    )}\r\n                  </Box>\r\n                ) : (\r\n                  <Box\r\n                    className={classes.rightBox}\r\n                    style={{ filter: \"blur(15px)\" }}\r\n                  >\r\n                    {isvideo ? (\r\n                      <video\r\n                        width=\"100%\"\r\n                        style={{\r\n                          cursor: \"pointer\",\r\n                          height: window.innerHeight,\r\n                        }}\r\n                        controls\r\n                      >\r\n                        <source src={dataList.mediaUrl} type=\"video/mp4\" />\r\n                      </video>\r\n                    ) : (\r\n                      <img\r\n                        style={{ maxHeight: \"20vh\" }}\r\n                        src={dataList?.mediaUrl}\r\n                      />\r\n                    )}\r\n                  </Box>\r\n                )}\r\n              </Grid>\r\n              <Grid item sm={12} md={12} lg={4}>\r\n                <Box mt={3}>\r\n                  <Paper>\r\n                    <Box className={classes.mainBox}>\r\n                      <Box mb={3}>\r\n                        <UserProfile dataList={dataList} />\r\n                      </Box>\r\n                      <Accordion square>\r\n                        <Box className={classes.commentBox} mb={3}>\r\n                        <Grid item xs={4} align=\"right\">\r\n                              <IconButton\r\n                                className={classes.iconbutton}\r\n                                onClick={onEmojiClick}\r\n                              >\r\n                                {isLikeEmoji ? (\r\n                                  <>\r\n                                    <FavoriteIcon style={{ color: \"red\" }} />\r\n                                  </>\r\n                                ) : (\r\n                                  <>\r\n                                    <FavoriteBorderIcon\r\n                                      style={{ color: \"#BFBFBF\" }}\r\n                                    />\r\n                                  </>\r\n                                )}\r\n                                \r\n                              </IconButton>\r\n                            </Grid>\r\n                          <Grid container>\r\n                            {/* <Grid item xs={6} align=\"center\">\r\n                              <Box>\r\n                                {inputStr && inputStr ? (\r\n                                  <Button\r\n                                    style={{\r\n                                      fontSize: \"20px\",\r\n                                      cursor: \"pointer\",\r\n                                    }}\r\n                                    // onClick={() => setShowPicker((val) => !val)}\r\n                                    className={classes.socialbox}\r\n                                  >\r\n                                    {inputStr}\r\n                                  </Button>\r\n                                ) : (\r\n                                  <Button\r\n                                    style={{\r\n                                      fontSize: \"20px\",\r\n                                      cursor: \"pointer\",\r\n                                    }}\r\n                                  >\r\n                                    <BsEmojiLaughing\r\n                                      className={classes.socialbox}\r\n                                      position=\"end\"\r\n                                      onClick={() =>\r\n                                        setShowPicker((val) => !val)\r\n                                      }\r\n                                    />\r\n                                  </Button>\r\n                                )}\r\n                              </Box>\r\n                            </Grid> */}\r\n                            <Grid item xs={6} align=\"center\">\r\n                              <AccordionSummary\r\n                                aria-controls=\"panel1d-content\"\r\n                                id=\"panel1d-header\"\r\n                              >\r\n                                <Button color=\"primary\" size=\"large\">\r\n                                  {\" \"}\r\n                                  <BiCommentDots />\r\n                                  Comments\r\n                                </Button>\r\n                              </AccordionSummary>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Box>\r\n                        <Box className=\"CommentscrollDiv\">\r\n                          {dataList &&\r\n                            dataList?.comment?.map((dataChild, i) => {\r\n                              return (\r\n                                <AccordionDetails>\r\n                                  <CommentBox\r\n                                    dataList={dataList}\r\n                                    listPublicExclusiveHandler={\r\n                                      viewExclusivepostHandler\r\n                                    }\r\n                                    data={dataChild}\r\n                                    dataParent={data}\r\n                                  />\r\n                                </AccordionDetails>\r\n                              );\r\n                            })}\r\n                        </Box>\r\n                      </Accordion>\r\n                      <Box className={classes.searchaddress}>\r\n                        <Grid container spacing={1} alignItems=\"center\">\r\n                          <Grid item xs={2} sm={2}>\r\n                            <Box className=\"figure\">\r\n                              <Box className=\"profileimage\">\r\n                                <img src=\"images/user.png\" alt=\"user data\" />\r\n                              </Box>\r\n                            </Box>\r\n                          </Grid>\r\n                          <Grid item xs={7} sm={8}>\r\n                            <TextField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              name=\"Text Field\"\r\n                              placeholder=\"Write here...\"\r\n                              value={message}\r\n                              onChange={(e) => setMessage(e.target.value)}\r\n                              type=\"text\"\r\n                              fullWidth\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xs={3} sm={2} align=\"center\">\r\n                            <Button\r\n                              size=\"large\"\r\n                              color=\"primary\"\r\n                              fullWidth\r\n                              onClick={commentPostHandler}\r\n                              disabled={isLoading}\r\n                            >\r\n                              <SendIcon style={{ color: \"#E31A89\" }} />\r\n                            </Button>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Box>\r\n                    </Box>\r\n                  </Paper>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"sourceRoot":""}