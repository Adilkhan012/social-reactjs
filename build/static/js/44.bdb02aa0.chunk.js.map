{"version":3,"sources":["views/pages/Auction/AuctionTable.js","views/pages/Auction/AboutAuction.js","component/Page.js","component/SocialShareBox.js","component/AuctionCard.js","views/pages/Auction/Auction.js"],"names":["useStyles","makeStyles","theme","LoginBox","fontWeight","marginBottom","table","width","minWidth","border","padding","Paper","boxShadow","borderRadius","backgroundColor","paddingBottom","MainRectangle","display","justifyContent","paddingTop","Rectangle","height","textAlign","color","margin","float","Pageno","alignItems","iconimg","background","marginTop","fontSize","tbody","cell","AuctionTable","props","classes","auctionNFTDetails","Box","className","TableContainer","component","mt","mb","ml","Typography","variant","bidId","length","Table","aria-label","TableHead","TableRow","TableCell","align","map","data","i","TableBody","key","scope","style","amountBid","moment","createdAt","format","bidStatus","NoDataFound","Transition","React","forwardRef","ref","Slide","direction","mainbox","root","marginLeft","overflow","position","transition","cursor","zIndex","transform","maxWidth","maxHeight","whiteSpace","textOverflow","aboutAuction","backgroundSize","backgroundRepeat","backgroundPosition","top","left","minHeight","backdropFilter","objectFit","iconbutton","breakpoints","down","icons","likes","figurebox","profileDetails","subscribeButton","startingPrice","AboutAuction","history","useHistory","location","useLocation","useState","open","setOpen","auctionId","setAuctionId","setAuctionNFTDetails","fileType","setFileType","isLoading","setIsLoading","calculateTimeLeftAuction","timeLeft","setTimeLeft","setIsSubscribed","isUpdateOpen","setIsUpdateOpen","bidPrice","setBidPrice","isFollowing","setisFollowing","auth","useContext","AuthContext","isSubmit","setIsSubmit","callbackFun","index","isHidePost","setIsHidePost","isHidePost1","setIsHidePost1","bidLoader","setBidLoader","open1","setOpen1","amount","price","setPrice","fieldValue","setFieldValueDateOfBirth","isBuyPost","setIsBuyPost","isOpenInterest","setIsopenInterest","handleClose","viewAuctionNFTHandler","axios","get","Apiconfigs","viewAuction","headers","token","localStorage","getItem","params","res","responseCode","result","fileExtention","mediaUrl","split","pop","followersList","userId","followers","filter","userData","_id","buyNftPost","isCheck","method","url","buyAuction","window","then","push","toast","success","responseMessage","catch","err","error","response","cancelAuctionNowHandler","deleteAuction","useEffect","ids","search","bidNowHandler","Number","createBid","info","acceptBidNowHandler","acceptBid","rejectBidNowHandler","rejectBid","timer","setTimeout","time","Date","clearTimeout","filterFun","subscribers","likesHandler","Axios","likeDislikeAuction","message","isLike","likeUser","likesUsers","handleClose1","addAuctionPost","addAuction","postId","title","postTitle","details","followUnfollowHandler","id","followUnfollowUser","status","isEdit","DataLoading","Page","elevation","src","ali","loop","autoPlay","muted","controls","type","Grid","container","spacing","item","xs","profilePic","wordBreak","userName","name","IconButton","onClick","pl","likesCount","isBuy","isSold","unix","days","hours","minutes","seconds","Button","size","buyerId","Dialog","fullWidth","onClose","aria-labelledby","aria-describedby","DialogContent","DialogContentText","DialogActions","autoFocus","TransitionComponent","keepMounted","p","DialogTitle","TextField","placeholder","value","onChange","e","target","onKeyPress","event","preventDefault","helperText","marginRight","disabled","ButtonCircularProgress","Boolean","FormHelperText","FormControl","date","minDate","add","inputVariant","disablePast","coverPic","sortAddress","bnbAccount","address","text","pathname","children","sharemodal","SocialShareBox","description","hashtag","mainimg","textstyle","cancelBtn","right","StyledMenuItem","withStyles","palette","primary","main","common","white","MenuItem","StyledMenu","paper","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","AuctionCard","anchorEl","setAnchorEl","openShare","setOpenShare","reportMessage","setReportMessage","openReport","setOpenReport","handleCloseShare","handleCloseReport","updateDimensions","newoofsetWidth","document","getElementById","offsetWidth","addEventListener","removeEventListener","createAuctionReportHandler","createAuctionReport","fontWeght","local","fromNow","currentTarget","aria-controls","aria-haspopup","menuShare","tokenName","websiteName","multiline","maxRows","inputProps","readOnly","MakeAuctionModal","setTitle","console","log","uploadFile","uploadFileBlob","setUploadFileBlob","uploadFileType","setUploadFileType","setDescription","expiryDate","setExpiryDate","startingBid","setStartingBid","submitHandler","formData","FormData","append","updateAuction","uploadFileURL","secure_url","post","createAuctionNft","createRes","updateAuctionNFTHandler","body","secure_ur","put","mainmodalBox","maxLength","alt","sm","lg","md","btn1","Auction","myAuctionList","calBackFunc","auctionList","setAuctionList","page","setPage","noOfPages","setNoOfPages","allAuctionDeleteHandler","expiredAuction","allAuctionListHandler","listAuction","limit","docs","pages","pageCheck","count","v"],"mappings":"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","file":"static/js/44.bdb02aa0.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Box, Typography, makeStyles } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport NoDataFound from \"src/component/NoDataFound\";\r\nimport moment from \"moment\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  LoginBox: {\r\n    \"& h6\": {\r\n      fontWeight: \"bold\",\r\n      marginBottom: \"10px\",\r\n    },\r\n  },\r\n  table: {\r\n    width: \"100%\",\r\n    minWidth: \"900px\",\r\n    //  border: \"1px solid white\",\r\n    \"& th\": {\r\n      border: \"1px solid #474646\",\r\n      padding: \"10px !important\",\r\n    },\r\n    \"& td\": {\r\n      border: \"1px solid #474646\",\r\n      padding: \"10px !important\",\r\n    },\r\n  },\r\n  Paper: {\r\n    boxShadow: \"none\",\r\n    borderRadius: \"2rem\",\r\n    backgroundColor: \"#373636\",\r\n    paddingBottom: \"2rem\",\r\n  },\r\n  MainRectangle: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    paddingTop: \"10px\",\r\n  },\r\n  Rectangle: {\r\n    width: \"27.5px\",\r\n    height: \"27.5px\",\r\n    border: \"solid 0.5px #d15b5b\",\r\n    backgroundColor: \"#373636\",\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\",\r\n    color: \"white\",\r\n    padding: \"5px\",\r\n    margin: \"10px\",\r\n    float: \"right\",\r\n  },\r\n  Pageno: {\r\n    display: \"flex\",\r\n    margin: \"10px\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  iconimg: {\r\n    padding: \"7px\",\r\n    background: \"#1E6D74\",\r\n    borderRadius: \"50%\",\r\n    width: \"25px\",\r\n    height: \"25px\",\r\n    marginTop: \"9px\",\r\n    \"& svg\": {\r\n      fontSize: \"17px\",\r\n      color: \"#0DD0FF\",\r\n    },\r\n    \"&:hover\": {\r\n      background: \"#014046\",\r\n    },\r\n  },\r\n  tbody: {\r\n    color: \"white\",\r\n    alignItems: \"center\",\r\n    fontSize: \"16px\",\r\n  },\r\n  cell: {\r\n    fontSize: \"1.2rem\",\r\n    fontSize: \"20px\",\r\n  },\r\n}));\r\n\r\nexport default function AuctionTable(props) {\r\n  const classes = useStyles();\r\n  const { auctionNFTDetails } = props;\r\n  return (\r\n    <Box className={classes.LoginBox}>\r\n      <Box>\r\n        <TableContainer className={classes.Paper} component={Paper}>\r\n          <Box mt={1.5} mb={1.5} ml={5}>\r\n            <Typography variant=\"h5\">History</Typography>\r\n          </Box>\r\n          {auctionNFTDetails?.bidId?.length > 0 ? (\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"Center\" className={classes.cell}>\r\n                    Bid Amount\r\n                  </TableCell>\r\n                  <TableCell align=\"Center\" className={classes.cell}>\r\n                    Date\r\n                  </TableCell>\r\n                  <TableCell align=\"Center\" className={classes.cell}>\r\n                    Status\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n\r\n              <>\r\n                {auctionNFTDetails &&\r\n                  auctionNFTDetails?.bidId?.map((data, i) => {\r\n                    return (\r\n                      <>\r\n                        <TableBody key={i}>\r\n                          <TableRow className={classes.tbody}>\r\n                            <TableCell\r\n                              align=\"Center\"\r\n                              component=\"th\"\r\n                              scope=\"row\"\r\n                              style={{ fontSize: \"14px\" }}\r\n                            >\r\n                              {\" \"}\r\n                              {data?.amountBid}\r\n                            </TableCell>\r\n                            <TableCell\r\n                              align=\"Center\"\r\n                              style={{ fontSize: \"14px\" }}\r\n                            >\r\n                              {\" \"}\r\n                              {moment(data?.createdAt).format(\"MM/DD/YYYY\")}\r\n                              {/* {data?.createdAt} */}\r\n                            </TableCell>\r\n                            <TableCell\r\n                              align=\"Center\"\r\n                              style={{ fontSize: \"14px\" }}\r\n                            >\r\n                              {\" \"}\r\n                              {data?.bidStatus}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        </TableBody>\r\n                      </>\r\n                    );\r\n                  })}\r\n              </>\r\n            </Table>\r\n          ) : (\r\n            <NoDataFound />\r\n          )}\r\n        </TableContainer>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Paper,\r\n  Grid,\r\n  Button,\r\n  Container,\r\n  makeStyles,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  TextField,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport CopyToClipboard from \"react-copy-to-clipboard\";\r\nimport { FaCopy } from \"react-icons/fa\";\r\nimport Page from \"src/component/Page\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { MdFavorite } from \"react-icons/md\";\r\nimport AuctionTable from \"./AuctionTable\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport axios from \"axios\";\r\nimport Apiconfigs from \"src/ApiConfig/ApiConfig\";\r\nimport DataLoading from \"src/component/DataLoading\";\r\nimport FavoriteOutlinedIcon from \"@material-ui/icons/FavoriteOutlined\";\r\nimport ButtonCircularProgress from \"src/component/ButtonCircularProgress\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport NoDataFound from \"src/component/NoDataFound\";\r\nimport { calculateTimeLeftAuction, sortAddress } from \"src/utils\";\r\nimport moment from \"moment\";\r\nimport Axios from \"axios\";\r\nimport { AuthContext } from \"src/context/Auth\";\r\nimport { MakeAuctionModal } from \"./Auction\";\r\nimport { toast } from \"react-toastify\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\n\r\n// import DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainbox: {\r\n    padding: \"20px\",\r\n  },\r\n  root: {\r\n    \"& .heading\": {\r\n      padding: \"20px\",\r\n    },\r\n    \"& .base\": {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"start\",\r\n      \"& .allignment\": {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        \"& .Userbox\": {\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          \"& figure\": {\r\n            margin: \"0\",\r\n            marginLeft: \"-10px\",\r\n            height: \"30px\",\r\n            width: \"30px\",\r\n            borderRadius: \"50%\",\r\n            overflow: \"hidden\",\r\n            backgroundColor: \"#101010\",\r\n            position: \"relative\",\r\n            transition: \"0.3s\",\r\n            cursor: \"pointer\",\r\n            \"&:first-child\": {\r\n              marginLeft: \"0px\",\r\n            },\r\n            \"&:hover\": {\r\n              zIndex: \"2\",\r\n              transform: \"scale(1.2)\",\r\n            },\r\n            \"& img\": {\r\n              width: \"auto\",\r\n              maxWidth: \"100%\",\r\n              maxHeight: \"41px\",\r\n            },\r\n          },\r\n        },\r\n        \"& h4\": {},\r\n      },\r\n    },\r\n    \"& .text\": {\r\n      padding: \"25px\",\r\n      \"& h5\": {\r\n        whiteSpace: \"pre\",\r\n        textOverflow: \"ellipsis\",\r\n        overflow: \"hidden\",\r\n        width: \"calc(100% - 5px)\",\r\n      },\r\n      \"& h6\": {\r\n        whiteSpace: \"pre\",\r\n        textOverflow: \"ellipsis\",\r\n        overflow: \"hidden\",\r\n        width: \"calc(100% - 5px)\",\r\n      },\r\n    },\r\n  },\r\n  aboutAuction: {\r\n    paddingBottom: \"50px\",\r\n    \"& .heading\": {\r\n      paddingTop: \"16px\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"start\",\r\n    },\r\n    \"& .username\": {\r\n      marginTop: \"26px\",\r\n      marginLeft: \"182px\",\r\n      \"@media(max-width:767px)\": {},\r\n      \"& p\": {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        marginTop: \"10px\",\r\n      },\r\n    },\r\n    \"& .postImg\": {\r\n      height: \"260px\",\r\n      margin: \"0 auto\",\r\n      overflow: \"hidden\",\r\n      position: \"relative\",\r\n      background: \"rgba(0,0,0,0.7)\",\r\n      backgroundSize: \"100% !important\",\r\n      backgroundRepeat: \"no-repeat !important\",\r\n      backgroundPosition: \"center !important\",\r\n      \"& img\": {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        width: \"auto\",\r\n        height: \"auto\",\r\n        position: \"absolute\",\r\n        minWidth: \"100%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        minHeight: \"100%\",\r\n      },\r\n    },\r\n    \"& .userProfile\": {\r\n      display: \"flex\",\r\n      padding: \"0 20px\",\r\n      marginTop: \"-20px\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"start\",\r\n      \"& figure\": {\r\n        width: \"175px\",\r\n        border: \"3px solid #161616\",\r\n        height: \"130px\",\r\n        margin: \"0 auto\",\r\n        position: \"relative\",\r\n        maxWidth: \"130px\",\r\n        background:\r\n          \"linear-gradient(152.97deg, rgba(255, 255, 255, 0.2) 0%, rgba(255, 255, 255, 0) 100%)\",\r\n        marginTop: \"20px\",\r\n        borderRadius: \"50%\",\r\n        backdropFilter: \"blur(42px)\",\r\n      },\r\n      \"& .user\": {\r\n        position: \"absolute\",\r\n        \"& img\": {\r\n          width: \"100%\",\r\n          borderRadius: \"50%\",\r\n          height: \"100%\",\r\n          objectFit: \"cover\",\r\n        },\r\n      },\r\n    },\r\n    \"& .textbox\": {\r\n      padding: \"30px\",\r\n      textAlign: \"center\",\r\n    },\r\n    \"& .btnbox\": {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      padding: \"10px 0px\",\r\n      \"& Button\": {\r\n        margin: \"5px\",\r\n      },\r\n    },\r\n  },\r\n  iconbutton: {\r\n    // backgroundColor: \"#FFF\",\r\n    width: \"20px\",\r\n    // color:\"rgb(191, 191, 191)\",\r\n    height: \"20px\",\r\n    marginLeft: \"20px\",\r\n    \"& svg\": {\r\n      fontSize: \"23px\",\r\n      // color:\"rgb(55, 54, 54)\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"15px\",\r\n      height: \"15px\",\r\n      padding: \"3px\",\r\n    },\r\n  },\r\n  icons: {\r\n    color: \"#e24444\",\r\n    \"@media(max-width:600px)\": {\r\n      fontSize: \"10px\",\r\n    },\r\n  },\r\n  likes: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"end\",\r\n  },\r\n  figurebox: {\r\n    height: \"460px\",\r\n    margin: \"0 auto\",\r\n    overflow: \"hidden\",\r\n    position: \"relative\",\r\n    background: \"rgba(0,0,0,0.7)\",\r\n    backgroundSize: \"100% !important\",\r\n    backgroundRepeat: \"no-repeat !important\",\r\n    backgroundPosition: \"center !important\",\r\n\r\n    \"& img\": {\r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      width: \"auto\",\r\n      height: \"auto\",\r\n      position: \"absolute\",\r\n      minWidth: \"100%\",\r\n      transform: \"translate(-50%, -50%)\",\r\n      minHeight: \"100%\",\r\n    },\r\n  },\r\n  profileDetails: {\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"start\",\r\n    marginTop: \"-20px\",\r\n  },\r\n  subscribeButton: {\r\n    \"@media(max-width:767px)\": {\r\n      maxWidth: \"70px\",\r\n      fontSize: \"10px\",\r\n    },\r\n  },\r\n  startingPrice: {\r\n    display: \"flex\", alignItems: \"center\",\r\n  }\r\n}));\r\n\r\nfunction AboutAuction(props) {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const [open, setOpen] = useState(false);\r\n  const [auctionId, setAuctionId] = useState();\r\n  const [auctionNFTDetails, setAuctionNFTDetails] = useState();\r\n  const [fileType, setFileType] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeftAuction());\r\n  const [isSubscribed, setIsSubscribed] = useState(false);\r\n  const [isUpdateOpen, setIsUpdateOpen] = useState(false);\r\n  const [bidPrice, setBidPrice] = useState(\"\");\r\n  const [isFollowing, setisFollowing] = useState(false);\r\n  const auth = useContext(AuthContext);\r\n  const [isSubmit, setIsSubmit] = useState(false);\r\n  const { data, callbackFun, index } = props;\r\n  const [isHidePost, setIsHidePost] = React.useState(false);\r\n  const [isHidePost1, setIsHidePost1] = React.useState(false);\r\n  const [bidLoader, setBidLoader] = useState(false);\r\n  const [open1, setOpen1] = React.useState(false);\r\n  const [price, setPrice] = useState(data?.amount);\r\n  const [fieldValue, setFieldValueDateOfBirth] = useState();\r\n  const [isBuyPost, setIsBuyPost] = useState(false);\r\n  const [isOpenInterest, setIsopenInterest] = useState(false);\r\n\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const viewAuctionNFTHandler = async () => {\r\n    try {\r\n      // setAuctionNFTDetails();\r\n\r\n      const res = await axios.get(Apiconfigs.viewAuction, {\r\n        headers: {\r\n          token: localStorage.getItem(\"token\"),\r\n        },\r\n        params: {\r\n          auctionId: auctionId,\r\n        },\r\n      });\r\n      if (res.data.responseCode === 200) {\r\n        setAuctionNFTDetails(res.data.result);\r\n        const fileExtention = res.data.result.mediaUrl.split(\".\").pop();\r\n        setIsLoading(false);\r\n\r\n        const fileType =\r\n          fileExtention == \"mp4\" || fileExtention == \"webp\"\r\n            ? \"video\"\r\n            : fileExtention == \"mp3\"\r\n              ? \"audio\"\r\n              : \"image\";\r\n        setFileType(fileType);\r\n        let followersList = res?.data?.result?.userId?.followers;\r\n        if (followersList) {\r\n          const filterFun = followersList.filter((data) => {\r\n            return data === auth?.userData?._id;\r\n          });\r\n          if (filterFun[0]) {\r\n            setisFollowing(true);\r\n          } else {\r\n            setisFollowing(false);\r\n          }\r\n        }\r\n      } else {\r\n      }\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setAuctionNFTDetails();\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  const buyNftPost = async (isCheck) => {\r\n    await axios({\r\n      method: \"POST\",\r\n      url: Apiconfigs.buyAuction,\r\n      headers: {\r\n        token: window.localStorage.getItem(\"token\"),\r\n      },\r\n      data: {\r\n        auctionId: auctionId,\r\n      },\r\n    })\r\n      .then(async (res) => {\r\n        // setIsloading(false);\r\n        if (res.data.responseCode === 200) {\r\n          history.push(\"/auction\");\r\n          setIsBuyPost(false);\r\n          toast.success(res.data.responseMessage);\r\n          viewAuctionNFTHandler();\r\n        } else {\r\n          viewAuctionNFTHandler();\r\n          // toast.error(\"Something went wrong\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        viewAuctionNFTHandler();\r\n        toast.error(err?.response?.data?.responseMessage);\r\n      });\r\n  };\r\n\r\n  const cancelAuctionNowHandler = async (isCheck) => {\r\n    await axios({\r\n      method: \"DELETE\",\r\n      url: Apiconfigs.deleteAuction,\r\n      headers: {\r\n        token: window.localStorage.getItem(\"token\"),\r\n      },\r\n      params: {\r\n        auctionId: auctionId,\r\n      },\r\n    })\r\n      .then(async (res) => {\r\n        // setIsloading(false);\r\n        if (res.data.responseCode === 200) {\r\n          viewAuctionNFTHandler();\r\n          setIsopenInterest(false);\r\n          history.push(\"/auction\");\r\n          // setOpen(false);\r\n          toast.success(\" successfully deleted\");\r\n        } else {\r\n          // toast.error(\"Something went wrong\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err?.response?.data?.responseMessage);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (auctionId) {\r\n      viewAuctionNFTHandler();\r\n    }\r\n  }, [auctionId]);\r\n\r\n  useEffect(() => {\r\n    const ids = location.search.split(\"?\");\r\n    if (ids[1]) {\r\n      setAuctionId(ids[1]);\r\n    } else {\r\n      setIsLoading(false);\r\n    }\r\n  }, [location]);\r\n\r\n  const bidNowHandler = async (isCheck) => {\r\n    setIsSubmit(true);\r\n    setBidLoader(true);\r\n    if (Number(bidPrice) > 0 && bidPrice !== \"\" && Number(bidPrice) < 2000) {\r\n      if (auctionNFTDetails?.bidId.length > 0) {\r\n        if (bidPrice > auctionNFTDetails?.bidId[0]?.amountBid) {\r\n          await axios({\r\n            method: \"POST\",\r\n            url: Apiconfigs.createBid,\r\n            headers: {\r\n              token: window.localStorage.getItem(\"token\"),\r\n            },\r\n            data: {\r\n              auctionId: auctionId,\r\n              amountBid: bidPrice,\r\n            },\r\n          })\r\n            .then(async (res) => {\r\n              // setIsloading(false);\r\n              if (res.data.responseCode === 200) {\r\n                setBidLoader(false);\r\n                setBidPrice(\"\")\r\n                setIsSubmit(false);\r\n                viewAuctionNFTHandler();\r\n                setOpen(false);\r\n                toast.success(res.data.responseMessage);\r\n              } else {\r\n                setIsSubmit(false);\r\n                setBidLoader(false)\r\n                // toast.error(\"Something went wrong\");\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              setIsSubmit(false);\r\n              setBidLoader(false);\r\n\r\n              setIsSubmit(false);\r\n              toast.error(err?.response?.data?.responseMessage);\r\n            });\r\n        } else {\r\n          setBidLoader(false);\r\n\r\n          toast.info(\"Bid price should be greater than from last bid\");\r\n        }\r\n      } else {\r\n        if (Number(bidPrice) > auctionNFTDetails?.amount) {\r\n          await axios({\r\n            method: \"POST\",\r\n            url: Apiconfigs.createBid,\r\n            headers: {\r\n              token: window.localStorage.getItem(\"token\"),\r\n            },\r\n            data: {\r\n              auctionId: auctionId,\r\n              amountBid: bidPrice,\r\n            },\r\n          })\r\n            .then(async (res) => {\r\n              // setIsloading(false);\r\n              if (res.data.responseCode === 200) {\r\n                viewAuctionNFTHandler();\r\n                setOpen(false);\r\n                toast.success(res.data.responseMessage);\r\n              } else {\r\n                // toast.error(\"Something went wrong\");\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              setIsSubmit(false);\r\n              toast.error(err?.response?.data?.responseMessage);\r\n            });\r\n        } else {\r\n          setBidLoader(false);\r\n          toast.info(\"Bid price should be greater than amount\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  const acceptBidNowHandler = async (isCheck) => {\r\n    await axios({\r\n      method: \"POST\",\r\n      url: Apiconfigs.acceptBid,\r\n      headers: {\r\n        token: window.localStorage.getItem(\"token\"),\r\n      },\r\n      params: {\r\n        _id: auctionNFTDetails?.bidId[0]?._id,\r\n      },\r\n    })\r\n      .then(async (res) => {\r\n        // setIsloading(false);\r\n        if (res.data.responseCode === 200) {\r\n          setIsHidePost1(false);\r\n          viewAuctionNFTHandler();\r\n          history.push(\"/auction\");\r\n          // setOpen(false);\r\n          toast.success(res.data.responseMessage);\r\n        } else {\r\n          setIsHidePost1(false);\r\n          // toast.error(\"Something went wrong\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setIsHidePost1(false);\r\n        toast.error(err?.response?.data?.responseMessage);\r\n      });\r\n  };\r\n  const rejectBidNowHandler = async (isCheck) => {\r\n    await axios({\r\n      method: \"PUT\",\r\n      url: Apiconfigs.rejectBid,\r\n      headers: {\r\n        token: window.localStorage.getItem(\"token\"),\r\n      },\r\n      params: {\r\n        _id: auctionNFTDetails?.bidId[0]?._id,\r\n      },\r\n    })\r\n      .then(async (res) => {\r\n        // setIsloading(false);\r\n        if (res.data.responseCode === 200) {\r\n          viewAuctionNFTHandler();\r\n          setIsHidePost(false);\r\n          toast.success(res.data.responseMessage);\r\n\r\n          // setOpen(false);\r\n          // toast.success(\"You have subscribed successfully\");\r\n        } else {\r\n          setIsHidePost(false);\r\n          // toast.error(\"Something went wrong\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setIsHidePost(false);\r\n        toast.error(err?.response?.data?.responseMessage);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      if (auctionNFTDetails?.time) {\r\n        setTimeLeft(calculateTimeLeftAuction(new Date(auctionNFTDetails.time)));\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearTimeout(timer);\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (auctionNFTDetails && auth?.userData) {\r\n      const filterFun = auctionNFTDetails.userId?.subscribers?.filter(\r\n        (data) => {\r\n          return data === auth?.userData?._id;\r\n        }\r\n      );\r\n      if (filterFun?.length > 0) {\r\n        setIsSubscribed(true);\r\n      } else {\r\n        setIsSubscribed(false);\r\n      }\r\n    }\r\n  }, [auctionNFTDetails, auth?.userData]);\r\n\r\n  const likesHandler = async () => {\r\n    try {\r\n      const res = await Axios({\r\n        method: \"GET\",\r\n        url: Apiconfigs.likeDislikeAuction + auctionId,\r\n        headers: {\r\n          token: window.localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      if (res.data.responseCode === 200) {\r\n        if (viewAuctionNFTHandler) {\r\n          viewAuctionNFTHandler();\r\n        }\r\n        toast.success(res.data.responseMessage);\r\n      } else {\r\n        toast.error(res.data.responseMessage);\r\n      }\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n  let isLike = false;\r\n  if (auth.userData?._id && auctionNFTDetails) {\r\n    const likeUser = auctionNFTDetails?.likesUsers?.filter(\r\n      (data) => data === auth.userData?._id\r\n    );\r\n    isLike = likeUser?.length > 0;\r\n  }\r\n\r\n\r\n\r\n  const handleClickOpen1 = () => {\r\n    setOpen1(true);\r\n  };\r\n  const handleClose1 = () => {\r\n    setOpen1(false);\r\n  };\r\n  const abc = () => {\r\n    addAuctionPost();\r\n    // setOpen1(false);\r\n  };\r\n  const addAuctionPost = async () => {\r\n    setIsSubmit(true);\r\n\r\n    if (Number(price) > 0 && fieldValue) {\r\n      setIsLoading(true);\r\n      try {\r\n        const res = await Axios({\r\n          method: \"POST\",\r\n          url: Apiconfigs.addAuction,\r\n          headers: {\r\n            token: window.localStorage.getItem(\"token\"),\r\n          },\r\n          data: {\r\n            postId: data._id,\r\n            title: data?.postTitle,\r\n            mediaUrl: data?.mediaUrl,\r\n            details: data?.details,\r\n            amount: price,\r\n            time: fieldValue,\r\n          },\r\n        });\r\n        if (res.data.responseCode === 200) {\r\n          if (viewAuctionNFTHandler) {\r\n            viewAuctionNFTHandler();\r\n          }\r\n          toast.success(res.data.responseMessage);\r\n          setIsLoading(false);\r\n          setOpen1(false);\r\n        }\r\n      } catch (error) {\r\n        if (error?.response?.data?.responseCode === 200) {\r\n          if (viewAuctionNFTHandler) {\r\n            viewAuctionNFTHandler();\r\n          }\r\n          toast.success(error?.response?.data?.responseMessage);\r\n          setIsLoading(false);\r\n          setOpen1(false);\r\n        } else {\r\n          toast.error(error?.response?.data?.responseMessage);\r\n          setIsLoading(false);\r\n          if (viewAuctionNFTHandler) {\r\n            viewAuctionNFTHandler();\r\n          }\r\n          setOpen1(false);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const followUnfollowHandler = async (id) => {\r\n    // setIsLoading(true);\r\n    try {\r\n      const res = await axios({\r\n        method: \"GET\",\r\n        url: Apiconfigs.followUnfollowUser + id,\r\n        headers: {\r\n          token: window.localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      if (res.data.responseCode === 200) {\r\n        setIsLoading(false);\r\n        viewAuctionNFTHandler();\r\n\r\n        toast.success(res.data.responseMessage);\r\n        // viewOtherProfileHandler();\r\n      } else {\r\n        setIsLoading(false);\r\n\r\n        toast.error(res.data.responseMessage);\r\n      }\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      toast.error(error.response.data.responseMessage);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {isUpdateOpen && (\r\n        <MakeAuctionModal\r\n          callbackFun={viewAuctionNFTHandler}\r\n          open={isUpdateOpen}\r\n          setOpen={(status) => setIsUpdateOpen(status)}\r\n          isEdit={true}\r\n          auctionNFTDetails={auctionNFTDetails}\r\n        />\r\n      )}\r\n      {isLoading ? (\r\n        <DataLoading />\r\n      ) : (\r\n        <Page title=\"About Creators\">\r\n          {auctionNFTDetails ? (\r\n            <Paper className={classes.root} elevation={2}>\r\n              <Box className=\"heading\">\r\n                <Typography variant=\"h3\" style={{ textAlign: \"left\" }}>\r\n                  Auctions\r\n                </Typography>\r\n              </Box>\r\n              <Box className=\"imagebox\">\r\n                <figure className={classes.figurebox}>\r\n                  {fileType == \"image\" && (\r\n                    <img\r\n                      src={\r\n                        auctionNFTDetails?.mediaUrl\r\n                          ? auctionNFTDetails?.mediaUrl\r\n                          : \"images/Auction/Auction.png\"\r\n                      }\r\n                      ali=\"Creators Image\"\r\n                      style={{ width: \"100%\" }}\r\n                    />\r\n                  )}\r\n\r\n                  {(fileType == \"video\" || fileType == \"audio\") && (\r\n                    <video\r\n                      // width='100%'\r\n                      style={\r\n                        fileType === \"audio\"\r\n                          ? { height: 75, width: \"100%\" }\r\n                          : { height: 460, width: \"100%\" }\r\n                      }\r\n                      loop={false}\r\n                      autoPlay={false}\r\n                      muted={true}\r\n                      controls\r\n                    >\r\n                      <source\r\n                        src={auctionNFTDetails.mediaUrl}\r\n                        type=\"video/mp4\"\r\n                      />\r\n                    </video>\r\n                  )}\r\n                </figure>\r\n              </Box>\r\n              <Box className={classes.mainbox}>\r\n                <Box className=\"base\">\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={6}>\r\n                      <Box className=\"allignment\">\r\n                        <Box className=\"Userbox\">\r\n                          <figure>\r\n                            <img\r\n                              src={\r\n                                auctionNFTDetails?.userId?.profilePic\r\n                                  ? auctionNFTDetails?.userId?.profilePic\r\n                                  : \"images/user.png\"\r\n                              }\r\n                            />\r\n                          </figure>\r\n                          {/* <figure>\r\n                    <img src='images/Ellipse1.png' />\r\n                  </figure> */}\r\n                        </Box>\r\n                        <Box>\r\n                          {\" \"}\r\n                          <Typography\r\n                            // \r\n                            variant=\"h4\"\r\n                            style={{ marginLeft: \"7px\", wordBreak: \"break-all\" }}\r\n                          >\r\n                            {auctionNFTDetails?.userId?.userName\r\n                              ? auctionNFTDetails?.userId?.userName\r\n                              : auctionNFTDetails?.userId?.name}\r\n                          </Typography>\r\n                        </Box>\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Box className={classes.likes}>\r\n                        <IconButton onClick={likesHandler}>\r\n                          {isLike ? (\r\n                            <>\r\n                              <FavoriteIcon style={{ color: \"red\" }} />\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              <FavoriteBorderIcon style={{ color: \"#BFBFBF\" }} />\r\n                            </>\r\n                          )}\r\n                          {/* <FavoriteBorderIcon\r\n                className={classes.socialbox}\r\n                style={isLike ? { color: \"red\" } : { color: \"#BFBFBF\" }}\r\n              />{\" \"} */}\r\n                        </IconButton>\r\n                        <Box pl={1}>\r\n                          {\" \"}\r\n                          <Typography variant=\"body2\">\r\n                            {auctionNFTDetails?.likesCount}\r\n                          </Typography>\r\n                        </Box>\r\n                      </Box>{\" \"}\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n                <Box className={classes.startingPrice}>\r\n                  {auctionNFTDetails?.amount && (\r\n                    <Typography variant=\"body2\">\r\n                      Starting Price\r\n                    </Typography>\r\n                  )}\r\n                  &nbsp;\r\n                  {auctionNFTDetails?.amount && (\r\n                    <Typography\r\n                      variant=\"h4\"\r\n                      style={{ marginLeft: \"8px\" }}\r\n                    >\r\n                      {/* {auctionNFTDetails?.amount} */}\r\n                      {auctionNFTDetails?.bidId[0]?.amountBid\r\n                        ? auctionNFTDetails?.bidId[0]?.amountBid\r\n                        : auctionNFTDetails?.amount}&nbsp; share\r\n                    </Typography>\r\n                  )}\r\n                </Box>\r\n                <Box mt={1}>\r\n                  {auctionNFTDetails?.isBuy || auctionNFTDetails?.isSold ? (\r\n                    <Box textAlign={\"center\"}>\r\n                      <Typography  variant=\"h2\">\r\n                        SOLD\r\n                      </Typography>\r\n                    </Box>\r\n                  ) : (\r\n                    <Box style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                      <Typography  variant=\"h6\">\r\n                        AUCTIONS ENDING IN: {\"\"}\r\n                      </Typography>\r\n                      {moment().unix() >\r\n                        moment(auctionNFTDetails.time).unix() ? (\r\n                        <Typography\r\n                          // \r\n                          variant=\"h6\"\r\n                          style={{ marginTop: \"-8px\" }}\r\n                        >\r\n                          Expired\r\n                        </Typography>\r\n                      ) : (\r\n                        <Typography\r\n                          // \r\n                          variant=\"h4\"\r\n                          style={{ marginLeft: \"8px\" }}\r\n                        >\r\n                          {`${timeLeft.days ? timeLeft.days : 0}d : ${timeLeft.hours ? timeLeft.hours : 0\r\n                            }h : ${timeLeft.minutes ? timeLeft.minutes : 0}m : ${timeLeft.seconds ? timeLeft.seconds : 0\r\n                            }s`}\r\n                        </Typography>\r\n                      )}\r\n                    </Box>\r\n                  )}\r\n                  <Box mt={1}>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      style={{ wordBreak: \"break-all\" }}\r\n                    >\r\n                      {auctionNFTDetails?.title}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box mt={1}>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      style={{ wordBreak: \"break-all\" }} \r\n                    >\r\n                      {auctionNFTDetails?.details}\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  <Box mt={2}>\r\n                    <Box align=\"center\">\r\n                      {!(\r\n                        moment().unix() > moment(auctionNFTDetails.time).unix()\r\n                      ) &&\r\n                        auctionNFTDetails?.userId?._id !== auth.userData?._id &&\r\n                        !auctionNFTDetails?.isSold && (\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            onClick={() => setIsBuyPost(true)}\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                          >\r\n                            Buy\r\n                          </Button>\r\n                        )}\r\n                      &nbsp;&nbsp;\r\n                      {moment().unix() >\r\n                        moment(auctionNFTDetails.time).unix() ||\r\n                        (auctionNFTDetails?.buyerId === auth.userData?._id &&\r\n                          auctionNFTDetails?.isSold && (\r\n                            <Button\r\n                              variant=\"contained\"\r\n                              // onClick={buyNftPost}\r\n                              color=\"secondary\"\r\n                              size=\"large\"\r\n                              onClick={handleClickOpen1}\r\n                            >\r\n                              Resell\r\n                            </Button>\r\n                          ))}\r\n                      &nbsp;&nbsp;\r\n                      {\r\n                        !(\r\n                          moment().unix() >\r\n                          moment(auctionNFTDetails.time).unix()\r\n                        ) &&\r\n                        // auctionNFTDetails?.bidId[0]?.userId !==\r\n                        //   auth?.userData?._id &&\r\n                        auctionNFTDetails?.userId?._id !==\r\n                        auth.userData?._id &&\r\n                        !auctionNFTDetails?.isSold && (\r\n                          // auctionNFTDetails?.bidId[0]?.userId ===\r\n                          // auth?.userData?._id &&\r\n                          // auctionNFTDetails?.bidId[0]?.bidStatus ===\r\n                          //   \"REJECTED\" && (\r\n                          // auctionNFTDetails?.bidId?.length &&\r\n                          // auctionNFTDetails?.bidId[0]?.bidStatus ===\r\n                          // (\"REJECTED\"\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            size=\"large\"\r\n                            onClick={handleClickOpen}\r\n                          >\r\n                            Bid Now\r\n                          </Button>\r\n                        )\r\n                        // )\r\n                      }\r\n                      &nbsp;&nbsp;\r\n                      {!(\r\n                        moment().unix() > moment(auctionNFTDetails.time).unix()\r\n                      ) &&\r\n                        auctionNFTDetails?.userId?._id === auth.userData?._id &&\r\n                        !auctionNFTDetails?.isSold && (\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            size=\"large\"\r\n                            onClick={() => setIsUpdateOpen(true)}\r\n                          >\r\n                            Update\r\n                          </Button>\r\n                        )}\r\n                      &nbsp;&nbsp;\r\n                      {!(\r\n                        moment().unix() > moment(auctionNFTDetails.time).unix()\r\n                      ) &&\r\n                        auctionNFTDetails?.userId?._id === auth.userData?._id &&\r\n                        auctionNFTDetails?.bidId?.length > 0 &&\r\n                        auctionNFTDetails?.bidId[0]?.bidStatus !==\r\n                        \"REJECTED\" && auctionNFTDetails?.isBuy !== true && auctionNFTDetails?.isSold !== true && (\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            size=\"large\"\r\n                            onClick={() => setIsHidePost1(true)}\r\n                          >\r\n                            Accept Bid\r\n                          </Button>\r\n                        )}\r\n                      &nbsp;&nbsp;\r\n                      {!(\r\n                        moment().unix() > moment(auctionNFTDetails.time).unix()\r\n                      ) &&\r\n                        auctionNFTDetails?.userId?._id === auth.userData?._id &&\r\n                        auctionNFTDetails?.bidId?.length > 0 &&\r\n                        !auctionNFTDetails?.isSold &&\r\n                        auctionNFTDetails?.bidId[0]?.bidStatus !==\r\n                        \"REJECTED\" && (\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            size=\"large\"\r\n                            onClick={() => setIsHidePost(true)}\r\n                          // onClick={rejectBidNowHandler}\r\n                          >\r\n                            Reject Bid\r\n                          </Button>\r\n                        )}\r\n                      &nbsp;&nbsp;\r\n                      {!(\r\n                        moment().unix() > moment(auctionNFTDetails.time).unix()\r\n                      ) &&\r\n                        auctionNFTDetails?.userId?._id === auth.userData?._id &&\r\n                        !auctionNFTDetails?.isSold && (\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            size=\"large\"\r\n                            onClick={() => setIsopenInterest(true)}\r\n                          >\r\n                            Cancel Auction\r\n                          </Button>\r\n                        )}\r\n                      <Dialog\r\n                        open={isHidePost1}\r\n                        fullWidth\r\n                        maxWidth=\"xs\"\r\n                        onClose={() => setIsHidePost1(false)}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                      >\r\n                        <DialogContent>\r\n                          <DialogContentText id=\"alert-dialog-description\">\r\n                            {/* {row.status} */}\r\n                            {`Are you sure want to accept this bid?`}\r\n                          </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                          <Button\r\n                            color=\"secondary\"\r\n                            variant=\"contained\"\r\n                            // disabled={loader2}\r\n                            onClick={acceptBidNowHandler}\r\n                          >\r\n                            Yes\r\n                            {/* {loader2 && <ButtonCircularProgress />} */}\r\n                          </Button>\r\n                          <Button\r\n                            onClick={() => setIsHidePost1(false)}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </Dialog>\r\n                      <Dialog\r\n                        open={isHidePost}\r\n                        onClose={() => setIsHidePost(false)}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                      >\r\n                        <DialogContent>\r\n                          <DialogContentText id=\"alert-dialog-description\">\r\n                            {/* {row.status} */}\r\n                            {`Are you sure want to reject this bid?`}\r\n                          </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                          <Button\r\n                            color=\"secondary\"\r\n                            variant=\"contained\"\r\n                            // disabled={loader2}\r\n                            onClick={rejectBidNowHandler}\r\n                          >\r\n                            Yes\r\n                            {/* {loader2 && <ButtonCircularProgress />} */}\r\n                          </Button>\r\n                          <Button\r\n                            onClick={() => setIsHidePost(false)}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </Dialog>\r\n                      <Dialog\r\n                        open={isOpenInterest}\r\n                        onClose={() => {\r\n                          setIsopenInterest(false);\r\n                        }}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                        maxWidth=\"xs\"\r\n                        fullWidth\r\n                      >\r\n                        <DialogContent>\r\n                          <DialogContentText\r\n                            id=\"alert-dialog-description\"\r\n                            align=\"center\"\r\n                          >\r\n                            Are you sure you want to cancel this auction\r\n                          </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                          <Button\r\n                            onClick={cancelAuctionNowHandler}\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                          >\r\n                            Yes\r\n                          </Button>\r\n                          <Button\r\n                            onClick={() => {\r\n                              setIsopenInterest(false);\r\n                            }}\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </Dialog>\r\n                      <Dialog\r\n                        open={open}\r\n                        TransitionComponent={Transition}\r\n                        keepMounted\r\n                        onClose={handleClose}\r\n                        aria-labelledby=\"alert-dialog-slide-title\"\r\n                        aria-describedby=\"alert-dialog-slide-description\"\r\n                        maxWidth=\"xs\"\r\n                        fullWidth\r\n                      >\r\n                        <Box p={2}>\r\n                          <DialogTitle id=\"alert-dialog-slide-title\"></DialogTitle>\r\n                          <DialogContent>\r\n                            <TextField\r\n                              type=\"number\"\r\n                              placeholder=\"Enter bid amount\"\r\n                              fullWidth\r\n                              variant=\"outlined\"\r\n                              value={bidPrice}\r\n                              onChange={(e) => setBidPrice(e.target.value)}\r\n                              onKeyPress={(event) => {\r\n                                if (event?.key === \"-\" || event?.key === \"+\") {\r\n                                  event.preventDefault();\r\n                                }\r\n                              }}\r\n                              error={\r\n                                (isSubmit && bidPrice == \"\") ||\r\n                                (bidPrice !== \"\" && Number(bidPrice) === 0) ||\r\n                                (bidPrice !== \"\" && Number(bidPrice) > 2000)\r\n                              }\r\n                              helperText={\r\n                                (isSubmit &&\r\n                                  bidPrice == \"\" &&\r\n                                  \"Please enter valid bid price\") ||\r\n                                (bidPrice !== \"\" &&\r\n                                  Number(bidPrice) === 0 &&\r\n                                  \"Please enter valid bid price\") ||\r\n                                (bidPrice !== \"\" &&\r\n                                  Number(bidPrice) > 2000 &&\r\n                                  \"Bid price should be less than or equal to 2000\")\r\n                              }\r\n                            />\r\n                          </DialogContent>\r\n                          <DialogActions>\r\n                            <Box mt={1} align=\"center\">\r\n                              <Button\r\n                                onClick={handleClose}\r\n                                size=\"large\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                style={{ marginRight: \"8px\" }}\r\n                              // onClick={bidNowHandler}\r\n                              >\r\n                                Cancel\r\n                              </Button>\r\n                              <Button\r\n                                onClick={bidNowHandler}\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                disabled={bidLoader}\r\n                                size=\"large\"\r\n                                style={{ marginLeft: \"8px\" }}\r\n                              >\r\n                                Confirm{\" \"}\r\n                                {bidLoader && <ButtonCircularProgress />}\r\n                              </Button>\r\n                            </Box>\r\n                          </DialogActions>\r\n                        </Box>\r\n                      </Dialog>\r\n                      <Dialog\r\n                        open={isBuyPost}\r\n                        onClose={() => setIsBuyPost(false)}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                      >\r\n                        <DialogContent>\r\n                          <DialogContentText id=\"alert-dialog-description\">\r\n                            {/* {row.status} */}\r\n                            {`Are you sure want to  buy this post?`}\r\n                          </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                          <Button\r\n                            color=\"secondary\"\r\n                            variant=\"contained\"\r\n                            // disabled={loader2}\r\n                            onClick={buyNftPost}\r\n                          >\r\n                            Yes\r\n                            {/* {loader2 && <ButtonCircularProgress />} */}\r\n                          </Button>\r\n                          <Button\r\n                            onClick={() => setIsBuyPost(false)}\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            autoFocus\r\n                          >\r\n                            No\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </Dialog>\r\n                      <Dialog\r\n                        onClose={handleClose1}\r\n                        aria-labelledby=\"customized-dialog-title\"\r\n                        open={open1}\r\n                      >\r\n                        <Box>\r\n                          <Typography variant=\"h6\">Price</Typography>\r\n                          <TextField\r\n                            type=\"number\"\r\n                            variant=\"outlined\"\r\n                            value={price}\r\n                            onChange={(e) => setPrice(e.target.value)}\r\n                            style={{ width: \"20rem\" }}\r\n                            error={Boolean(\r\n                              isSubmit && (price === \"\" || Number(price) <= 0)\r\n                            )}\r\n                            onKeyPress={(event) => {\r\n                              if (event?.key === \"-\" || event?.key === \"+\") {\r\n                                event.preventDefault();\r\n                              }\r\n                            }}\r\n                          />\r\n                          <FormHelperText error>\r\n                            {isSubmit &&\r\n                              (price === \"\" || Number(price) <= 0) && (\r\n                                <Box ml={1}>Enter valid price</Box>\r\n                              )}\r\n                          </FormHelperText>\r\n                        </Box>\r\n                        <Box mt={2}>\r\n                          {\" \"}\r\n                          <Typography variant=\"h6\">Expiry Time</Typography>\r\n                          <FormControl fullWidth>\r\n                            <KeyboardDatePicker\r\n                              value={fieldValue}\r\n                              // placeholder=\"DD/MM/YYYY\"\r\n                              onChange={(date) => {\r\n                                setFieldValueDateOfBirth(new Date(date));\r\n                              }}\r\n                              // maxDate={(date) =>\r\n                              //   moment().diff(\r\n                              //     moment(new Date(date)),\r\n                              //     \"years\"\r\n                              //   ) >= 18\r\n                              // }\r\n                              // minDate={moment().subtract(6, \"months\")}\r\n                              minDate={moment().add(15, \"minutes\")}\r\n                              format=\"DD/MM/YYYY\"\r\n                              inputVariant=\"outlined\"\r\n                              disablePast\r\n                              margin=\"dense\"\r\n                              helperText=\"\"\r\n                              name=\"dob\"\r\n                              // onChange={_onInputChange}\r\n                              error={Boolean(isSubmit && !fieldValue)}\r\n                            // helperText={touched.dob && errors.dob}\r\n                            />\r\n                            <FormHelperText error>\r\n                              {isSubmit && !fieldValue && (\r\n                                <Box ml={1}>Expiry time is required</Box>\r\n                              )}\r\n                            </FormHelperText>\r\n                          </FormControl>\r\n                        </Box>\r\n                        <DialogActions align=\"center\">\r\n                          <Button\r\n                            onClick={handleClose1}\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            size=\"large\"\r\n                          >\r\n                            Cancel\r\n                          </Button>\r\n                          <Button\r\n                            // onClick={() => setOpen(false)}\r\n                            color=\"secondary\"\r\n                            variant=\"contained\"\r\n                            size=\"large\"\r\n                            onClick={abc}\r\n                          // onClickCapture={() => {\r\n                          //   history.push(\"/\");\r\n                          // }}\r\n                          >\r\n                            Create Auction\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </Dialog>\r\n                    </Box>\r\n                    {/* <Box align=\"left\" mb={3} mt={2}>\r\n                      <Typography variant=\"h5\">\r\n                        {\" \"}\r\n                        ETH Fees and MASS Fees apply\r\n                      </Typography>\r\n                    </Box> */}\r\n                    &nbsp;&nbsp;\r\n                    <Box mb={2}>\r\n                      <AuctionTable auctionNFTDetails={auctionNFTDetails} />\r\n                    </Box>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n              <Box className={classes.aboutAuction} mt={2}>\r\n                <Box className=\"heading\">\r\n                  <Typography variant=\"h3\">About the Creator</Typography>\r\n                </Box>\r\n                <Box className=\"imagebox\">\r\n                  <figure className=\"postImg\">\r\n                    <img\r\n                      src={\r\n                        auctionNFTDetails?.userId?.coverPic\r\n                          ? auctionNFTDetails?.userId?.coverPic\r\n                          : \"images/userback.png\"\r\n                      }\r\n                      ali=\"Creators Image\"\r\n                    />\r\n                  </figure>\r\n                </Box>\r\n                <Box className={classes.profileDetails}>\r\n                  <Box className=\"userProfile\">\r\n                    <figure className=\"user\">\r\n                      <img\r\n                        src={\r\n                          auctionNFTDetails?.userId?.profilePic\r\n                            ? auctionNFTDetails?.userId?.profilePic\r\n                            : \"images/user.png\"\r\n                        }\r\n                      />\r\n                    </figure>\r\n                  </Box>\r\n                </Box>\r\n                <Box className=\"username\">\r\n                  <Typography  variant=\"h3\">\r\n                    {auctionNFTDetails?.userId?.userName\r\n                      ? auctionNFTDetails?.userId?.userName\r\n                      : auctionNFTDetails?.userId?.name}\r\n                  </Typography>\r\n                  <Typography variant=\"body1\">\r\n                    {sortAddress(\r\n                      auctionNFTDetails?.userId?.bnbAccount?.address\r\n                    )}{\" \"}\r\n                    &nbsp;\r\n                    <CopyToClipboard\r\n                      text={auctionNFTDetails?.userId?.bnbAccount?.address}\r\n                    >\r\n                      <FaCopy\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => toast.success(\"Copied successfully\")}\r\n                      />\r\n                    </CopyToClipboard>\r\n                    {/* &nbsp; <img src=\"images/Creators/chaincopy.png\" /> */}\r\n                  </Typography>\r\n                  {auctionNFTDetails?.userId?._id !== auth.userData?._id && (\r\n                    <Box mt={1}>\r\n                      {/* <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      size=\"large\"\r\n                      style={{ marginRight: \"8px\" }}\r\n                      className={classes.subscribeButton}\r\n                    >\r\n                      {isSubscribed ? \"Unsubscribe\" : \"Subscribe\"}\r\n                    </Button> */}\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        style={{ marginRight: \"8px\" }}\r\n                        onClick={() =>\r\n                          followUnfollowHandler(auctionNFTDetails?.userId?._id)\r\n                        }\r\n                      >\r\n                        {isFollowing ? \"Unfollow\" : \"Follow\"}\r\n                        {isLoading && <ButtonCircularProgress />}\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        onClick={() =>\r\n                          history.push({\r\n                            pathname: \"/chat-history\",\r\n                            search: auctionNFTDetails?.userId?._id,\r\n                          })\r\n                        }\r\n                        className={classes.subscribeButton}\r\n                        style={{ marginRight: \"8px\" }}\r\n                      >\r\n                        Chat\r\n                      </Button>\r\n                    </Box>\r\n                  )}\r\n                </Box>\r\n              </Box>\r\n            </Paper>\r\n          ) : (\r\n            <NoDataFound />\r\n          )}\r\n        </Page>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AboutAuction;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nexport default function Page(props) {\r\n  const { title, children } = props;\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      <div>{children}</div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  FacebookShareButton,\r\n  TelegramShareButton,\r\n  TwitterShareButton,\r\n  InstapaperShareButton,\r\n} from \"react-share\";\r\n\r\nimport { Box, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nimport { BsFacebook } from \"react-icons/bs\";\r\nimport { AiFillInstagram } from \"react-icons/ai\";\r\nimport { RiSendPlaneFill } from \"react-icons/ri\";\r\nimport { AiFillTwitterCircle } from \"react-icons/ai\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  sharemodal: {\r\n    \"& button\": {\r\n      textAlign: \"center\",\r\n      \"& svg\": {\r\n        fontSize: \"25px\",\r\n      },\r\n    },\r\n  },\r\n}));\r\nexport default function SocialShareBox({ url }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.sharemodal} align='center' mt={3} mb={2}>\r\n      <FacebookShareButton url={url} target='_blank'>\r\n        <Button>\r\n          <Box>\r\n            <BsFacebook /> <br />\r\n            Facebook\r\n          </Box>\r\n        </Button>\r\n      </FacebookShareButton>\r\n      <InstapaperShareButton url={url} title={`frontend`} description=''>\r\n        <Button>\r\n          <Box>\r\n            <AiFillInstagram /> <br />\r\n            Instagram\r\n          </Box>\r\n        </Button>\r\n      </InstapaperShareButton>\r\n      <TelegramShareButton\r\n        url={url}\r\n        title={\"CampersTribe - World is yours to explore\"}\r\n      >\r\n        <Button>\r\n          <Box>\r\n            <RiSendPlaneFill /> <br />\r\n            Telegram\r\n          </Box>\r\n        </Button>\r\n      </TelegramShareButton>\r\n\r\n      <TwitterShareButton url={url} title={`frontend`} hashtag='#camperstribe'>\r\n        <Button>\r\n          <Box>\r\n            <AiFillTwitterCircle /> <br />\r\n            Twitter\r\n          </Box>\r\n        </Button>\r\n      </TwitterShareButton>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Paper,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  IconButton,\r\n  withStyles,\r\n  MenuItem,\r\n  Menu,\r\n  ListItemText,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  TextField,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport FavoriteOutlinedIcon from \"@material-ui/icons/FavoriteOutlined\";\r\nimport { MdCancel } from \"react-icons/md\";\r\nimport {\r\n  calculateTimeLeft,\r\n  calculateTimeLeftAuction,\r\n  tokenName,\r\n} from \"src/utils\";\r\nimport moment from \"moment\";\r\nimport { sortAddress } from \"src/utils\";\r\nimport SocialShareBox from \"./SocialShareBox\";\r\nimport Apiconfigs, { websiteName } from \"src/ApiConfig/ApiConfig\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport Axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { AuthContext } from \"src/context/Auth\";\r\nimport ButtonCircularProgress from \"./ButtonCircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"15px\",\r\n    backgroundColor: \"#373636\",\r\n    transition: \"0.5s\",\r\n    \"&:hover\": {\r\n      transform: \"translateY(-10px)\",\r\n    },\r\n    \"@media(max-width:600px)\": {\r\n      padding: \"10px\",\r\n    },\r\n    \"& .top\": {\r\n      paddingBottom: \"10px\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"space-between\",\r\n      \"& .Userbox\": {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        \"& figure\": {\r\n          margin: \"0\",\r\n          marginLeft: \"-10px\",\r\n          height: \"30px\",\r\n          width: \"30px\",\r\n          borderRadius: \"50%\",\r\n          overflow: \"hidden\",\r\n          backgroundColor: \"#101010\",\r\n          position: \"relative\",\r\n          transition: \"0.3s\",\r\n          cursor: \"pointer\",\r\n          \"&:first-child\": {\r\n            marginLeft: \"0px\",\r\n          },\r\n          \"&:hover\": {\r\n            zIndex: \"2\",\r\n            transform: \"scale(1.2)\",\r\n          },\r\n          \"& img\": {\r\n            width: \"auto\",\r\n            height: \"100%\",\r\n            objectFit: \"cover\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n  mainimg: {\r\n    width: \"100%\",\r\n    height: \"200px !important\",\r\n    overflow: \"hidden\",\r\n    backgroundPosition: \"center !important\",\r\n    backgroundSize: \"cover !important\",\r\n    backgroundRepeat: \" no-repeat !important\",\r\n    borderRadius: \"10px\",\r\n    backgroundColor: \"#ccc !important\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      borderRadius: \"10px\",\r\n      height: \"130px !important\",\r\n    },\r\n  },\r\n  likes: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"end\",\r\n  },\r\n  textstyle: {\r\n    whiteSpace: \"pre\",\r\n    textOverflow: \"ellipsis\",\r\n    overflow: \"hidden\",\r\n    width: \"calc(100% - 5px)\",\r\n  },\r\n  // ,menuShare: {\r\n  //   position: \"absolute\",\r\n  //   right: \"16px\",\r\n  //   top: \"16px\",\r\n  // },\r\n\r\n  sharemodal: {\r\n    \"& button\": {\r\n      textAlign: \"center\",\r\n      \"& svg\": {\r\n        fontSize: \"25px\",\r\n      },\r\n    },\r\n  },\r\n  cancelBtn: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    right: 0,\r\n  },\r\n  // iconbutton: {\r\n  //   backgroundColor: \"#FFF\",\r\n  //   width: \"20px\",\r\n  //   height: \"20px\",\r\n  //   marginRight: \"3px\",\r\n  //   \"& svg\": {\r\n  //     fontSize: \"14px\",\r\n  //   },\r\n  //   [theme.breakpoints.down(\"xs\")]: {\r\n  //     width: \"15px\",\r\n  //     height: \"15px\",\r\n  //     padding: \"3px\",\r\n  //   },\r\n  // },\r\n  icons: {\r\n    color: \"#e24444\",\r\n    \"@media(max-width:600px)\": {\r\n      fontSize: \"10px\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n  root: {\r\n    \"&:focus\": {\r\n      backgroundColor: theme.palette.primary.main,\r\n      \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n  },\r\n}))(MenuItem);\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    border: \"1px solid #484849 !important\",\r\n    backgroundColor: \"#101010 !important\",\r\n    minWidth: \"120px !important\",\r\n  },\r\n})((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: \"bottom\",\r\n      horizontal: \"center\",\r\n    }}\r\n    transformOrigin={{\r\n      vertical: \"top\",\r\n      horizontal: \"center\",\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nfunction AuctionCard(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const auth = useContext(AuthContext);\r\n  const { data, callbackFun, index } = props;\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [isSubmit, setIsSubmit] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [expanded, setExpanded] = React.useState(\"panel1\");\r\n  const [openShare, setOpenShare] = React.useState(false);\r\n  const [reportMessage, setReportMessage] = useState(\"\");\r\n  const [openReport, setOpenReport] = React.useState(false);\r\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeftAuction());\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleChange = (panel) => (event, newExpanded) => {\r\n    setExpanded(newExpanded ? panel : false);\r\n  };\r\n\r\n  const handleClickOpenShare = () => {\r\n    setOpenShare(true);\r\n    setAnchorEl(false);\r\n  };\r\n\r\n  const handleCloseShare = () => {\r\n    setOpenShare(false);\r\n  };\r\n\r\n  const handleClickOpenReport = () => {\r\n    setOpenReport(true);\r\n    setAnchorEl(false);\r\n  };\r\n\r\n  const handleCloseReport = () => {\r\n    setOpenReport(false);\r\n  };\r\n  const updateDimensions = () => {\r\n    var offsetWidth = document.getElementById(\"imagecard\" + index).offsetWidth;\r\n    var newoofsetWidth = offsetWidth - 80;\r\n    document.getElementById(\"imagecard\" + index).style.height =\r\n      newoofsetWidth + \"px\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateDimensions();\r\n  }, [data, index]);\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", updateDimensions);\r\n    return () => window.removeEventListener(\"resize\", updateDimensions);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setTimeLeft(calculateTimeLeftAuction(new Date(data.time)));\r\n    }, 1000);\r\n    return () => clearTimeout(timer);\r\n  });\r\n  const allAuctionListHandler = async () => {\r\n    try {\r\n      const res = await Axios.get(Apiconfigs.listAuction, {\r\n        // params: {\r\n        //   limit: 10,\r\n        //   page: page,\r\n        // },\r\n        headers: {\r\n          token: localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      if (res.data.responseCode === 200) {\r\n        // setAuctionList(res.data.result.docs);\r\n        // setNoOfPages(res.data.result.pages);\r\n      }\r\n      // setIsLoading(false);\r\n    } catch (error) {\r\n      // setIsLoading(false);\r\n    }\r\n  };\r\n  const likesHandler = async () => {\r\n    try {\r\n      const res = await Axios({\r\n        method: \"GET\",\r\n        url: Apiconfigs.likeDislikeAuction + data?._id,\r\n        headers: {\r\n          token: window.localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      if (res.data.responseCode === 200) {\r\n        // allAuctionListHandler();\r\n        // allAuctionListHandler();\r\n        if (callbackFun) {\r\n          callbackFun();\r\n        }\r\n        toast.success(res.data.responseMessage);\r\n      } else {\r\n        // toast.error(res.data.responseMessage);\r\n      }\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n\r\n  const hideUnhideAuctionHandler = async () => {\r\n    try {\r\n      const res = await Axios({\r\n        method: \"PUT\",\r\n        url: Apiconfigs.hide_unhideAuction,\r\n        data: {\r\n          auctionId: data?._id,\r\n        },\r\n        headers: {\r\n          token: window.localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      if (res.data.responseCode === 200) {\r\n        // allAuctionListHandler();\r\n        if (callbackFun) {\r\n          callbackFun();\r\n        }\r\n        toast.success(res.data.responseMessage);\r\n      } else {\r\n        toast.error(res.data.responseMessage);\r\n      }\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n\r\n  const createAuctionReportHandler = async () => {\r\n    setIsSubmit(true);\r\n    if (reportMessage != \"\" && reportMessage.length > 10) {\r\n      try {\r\n        setIsLoading(true);\r\n        const res = await Axios({\r\n          method: \"POST\",\r\n          url: Apiconfigs.createAuctionReport,\r\n          data: {\r\n            auctionId: data?._id,\r\n            message: reportMessage,\r\n          },\r\n          headers: {\r\n            token: window.localStorage.getItem(\"token\"),\r\n          },\r\n        });\r\n        if (res.data.responseCode === 200) {\r\n          if (callbackFun) {\r\n            callbackFun();\r\n          }\r\n          toast.success(res.data.responseMessage);\r\n          handleCloseReport();\r\n        } else {\r\n          toast.error(res.data.responseMessage);\r\n        }\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        toast.error(error.message);\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  let isLike = false;\r\n  if (auth.userData?._id && data) {\r\n    const likeUser = data?.likesUsers?.filter(\r\n      (data) => data === auth.userData?._id\r\n    );\r\n    isLike = likeUser?.length > 0;\r\n  }\r\n\r\n  const fileExtention = data.mediaUrl.split(\".\").pop();\r\n\r\n  const fileType =\r\n    fileExtention == \"mp4\" || fileExtention == \"webp\"\r\n      ? \"video\"\r\n      : fileExtention == \"mp3\"\r\n        ? \"audio\"\r\n        : \"image\";\r\n\r\n  return (\r\n    <>\r\n      <Paper elevation={2} className={classes.root}>\r\n        <Box className=\"top\">\r\n          <Box className=\"Userbox\">\r\n            {/* <figure>\r\n              <img src='images/Ellipse1.png' />\r\n            </figure> */}\r\n            <figure style={{ width: \"50px\", height: \"50px\" }}>\r\n              <img\r\n                src={\r\n                  data?.userId?.profilePic\r\n                    ? data?.userId?.profilePic\r\n                    : \"images/Ellipse1.png\"\r\n                }\r\n                style={{ cursor: \"pointer\", }}\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/about-creators\",\r\n                    search: data?.userId?._id,\r\n                  })\r\n                }\r\n              />\r\n            </figure>\r\n            <Box style={{ marginLeft: \"8px\" }}>\r\n              {/* <Link to=\"#\"> */}{\" \"}\r\n              <Typography\r\n                variant=\"h6\"\r\n                style={{ cursor: \"pointer\", fontWeght: \"500\" }}\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/about-creators\",\r\n                    search: data?.userId?._id,\r\n                  })\r\n                }\r\n              >\r\n                {data?.userId?.userName\r\n                  ? sortAddress(data?.userId?.userName)\r\n                  : sortAddress(data?.userId?.name)}\r\n              </Typography>\r\n              <Typography variant=\"body1\">\r\n                {moment(data?.createdAt).local().fromNow()}\r\n              </Typography>\r\n              {/* </Link> */}\r\n              {/* <Typography variant=\"body2\" component=\"small\">\r\n                {data?.time}\r\n              </Typography> */}\r\n            </Box>\r\n          </Box>\r\n          <IconButton\r\n            onClick={handleClick}\r\n            aria-controls=\"customized-menu\"\r\n            aria-haspopup=\"true\"\r\n            className={classes.menuShare}\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n          <StyledMenu\r\n            id=\"customized-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n            <StyledMenuItem onClick={handleClickOpenShare}>\r\n              <ListItemText primary=\"Share\" />\r\n            </StyledMenuItem>\r\n            {/* <StyledMenuItem\r\n              onClick={() => {\r\n                handleClose();\r\n                hideUnhideAuctionHandler();\r\n              }}\r\n            >\r\n              <ListItemText primary=\"Hide\" />\r\n            </StyledMenuItem> */}\r\n            <StyledMenuItem onClick={handleClickOpenReport}>\r\n              <ListItemText primary=\"Report\" />\r\n            </StyledMenuItem>\r\n          </StyledMenu>\r\n        </Box>\r\n        {fileType == \"image\" && (\r\n          <Box\r\n            id={`imagecard${index}`}\r\n            className={classes.mainimg}\r\n            style={{ background: \"url(\" + data.mediaUrl + \")\" }}\r\n          // onClick={() => {\r\n          //   history.push(\"/about-auction\");\r\n          // }}\r\n          ></Box>\r\n        )}\r\n        {(fileType == \"video\" || fileType == \"audio\") && (\r\n          <Box\r\n            id={`imagecard${index}`}\r\n            className={classes.mainimg}\r\n          // onClick={() => {\r\n          //   history.push(\"/about-auction\");\r\n          // }}\r\n          >\r\n            <video\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              loop={false}\r\n              autoPlay={false}\r\n              muted={true}\r\n              controls\r\n            >\r\n              <source src={data.mediaUrl} type=\"video/mp4\" />\r\n            </video>\r\n          </Box>\r\n        )}\r\n        <Box mt={2}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"h5\" className={classes.textstyle}>\r\n                {data?.title}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Box className={classes.likes}>\r\n                <IconButton\r\n                  className={classes.iconbutton}\r\n                  onClick={likesHandler}\r\n                >\r\n                  {isLike ? (\r\n                    <>\r\n                      <FavoriteIcon style={{ color: \"red\" }} />\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <FavoriteBorderIcon style={{ color: \"#BFBFBF\" }} />\r\n                    </>\r\n                  )}\r\n                </IconButton>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  // color=\"secondary.main\"\r\n                  style={{ marginLeft: \"5px\" }}\r\n                >\r\n                  {data?.likesCount}\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <Box mb={2}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\" color=\"primary.main\">\r\n                STARTING BID\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6} align=\"right\">\r\n              <Typography variant=\"body1\" color=\"primary.main\">\r\n                {data?.amount}&nbsp;\r\n                {tokenName}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\">AUCTION ENDING IN</Typography>\r\n            </Grid>\r\n            <Grid item xs={6} align=\"right\">\r\n              {moment().unix() > moment(data.time).unix() ? (\r\n                <Typography\r\n                  variant=\"body1\"\r\n                  // color=\"primary.main\"\r\n                  className={classes.textstyle}\r\n                >\r\n                  Expired\r\n                </Typography>\r\n              ) : (\r\n                <Typography\r\n                  variant=\"body1\"\r\n                  // color=\"primary.main\"\r\n                  className={classes.textstyle}\r\n                >\r\n                  {`${timeLeft.days ? timeLeft.days : 0}d : ${timeLeft.hours ? timeLeft.hours : 0\r\n                    }h : ${timeLeft.minutes ? timeLeft.minutes : 0}m : ${timeLeft.seconds ? timeLeft.seconds : 0\r\n                    }s`}\r\n                </Typography>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <Box align=\"center\">\r\n          <Button\r\n            style={{ padding: \"6px 10px !important\", fontSize: \"10px\" }}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            size=\"medium\"\r\n            onClick={() =>\r\n              history.push({\r\n                pathname: \"/about-auction\",\r\n                search: data?._id,\r\n              })\r\n            }\r\n          >\r\n            {\" \"}\r\n            View{\" \"}\r\n          </Button>\r\n        </Box>\r\n\r\n        <Dialog\r\n          open={openShare}\r\n          onClose={handleCloseShare}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n          maxWidth=\"xs\"\r\n          fullWidth\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{\"Share Post\"}</DialogTitle>\r\n          <DialogContent>\r\n            <IconButton\r\n              className={classes.cancelBtn}\r\n              onClick={handleCloseShare}\r\n            >\r\n              <MdCancel />\r\n            </IconButton>\r\n            <SocialShareBox url={websiteName + \"/about-auction?\" + data._id} />\r\n          </DialogContent>\r\n        </Dialog>\r\n\r\n        <Dialog\r\n          open={openReport}\r\n          onClose={handleCloseReport}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n          maxWidth=\"xs\"\r\n          fullWidth\r\n        >\r\n          <Box align=\"right\">\r\n            <IconButton\r\n              className={classes.cancelBtn}\r\n              onClick={handleCloseReport}\r\n            >\r\n              <MdCancel />\r\n            </IconButton>\r\n          </Box>\r\n          <Box p={2}>\r\n            <DialogTitle id=\"alert-dialog-title\" align=\"center\">\r\n              {\"Report Post\"}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <Box mb={3}>\r\n                <Typography variant=\"body2\" style={{ fontSize: \"12px\" }}>\r\n                  Describe why you think this item should be removed from\r\n                  marketplace\r\n                </Typography>\r\n                <Box mt={2}>\r\n                  <TextField\r\n                    id=\"outlined-basic\"\r\n                    variant=\"outlined\"\r\n                    name=\"Text Field\"\r\n                    placeholder=\"Tell us some details...\"\r\n                    type=\"text\"\r\n                    fullWidth\r\n                    multiline\r\n                    maxRows={5}\r\n                    onChange={(e) => setReportMessage(e.target.value)}\r\n                    inputProps={{\r\n                      readOnly: isLoading,\r\n                    }}\r\n                  />\r\n                </Box>\r\n                {isSubmit &&\r\n                  (reportMessage == \"\" || reportMessage.length <= 10) && (\r\n                    <FormHelperText error>\r\n                      Please enter valid message, enter minimum 10 character\r\n                    </FormHelperText>\r\n                  )}\r\n              </Box>\r\n              <Box mb={2} align=\"right\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleCloseReport}\r\n                  disabled={isLoading}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  style={{ marginLeft: \"10px\" }}\r\n                  onClick={createAuctionReportHandler}\r\n                  disabled={isLoading}\r\n                >\r\n                  Report {isLoading && <ButtonCircularProgress />}\r\n                </Button>\r\n              </Box>\r\n            </DialogContent>\r\n          </Box>\r\n        </Dialog>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AuctionCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Paper,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  FormControl,\r\n  TextField,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport Page from \"src/component/Page\";\r\nimport AuctionCard from \"src/component/AuctionCard\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport Apiconfigs from \"src/ApiConfig/ApiConfig\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport moment from \"moment\";\r\nimport ButtonCircularProgress from \"src/component/ButtonCircularProgress\";\r\nimport DataLoading from \"src/component/DataLoading\";\r\nimport NoDataFound from \"src/component/NoDataFound\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"25px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      padding: \"10px\",\r\n    },\r\n    \"& .heading\": {\r\n      marginBottom: \"20px\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Auction(props) {\r\n  const { myAuctionList, calBackFunc } = props;\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [auctionList, setAuctionList] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [noOfPages, setNoOfPages] = useState(1);\r\n  const allAuctionDeleteHandler = async () => {\r\n    try {\r\n      const res = await axios.get(Apiconfigs.expiredAuction, {});\r\n      if (res.data.responseCode === 200) {\r\n        // setAuctionList(res.data.result.docs);\r\n        // setNoOfPages(res.data.result.pages);\r\n      }\r\n    } catch (error) { }\r\n  };\r\n  const allAuctionListHandler = async () => {\r\n    try {\r\n      const res = await axios.get(Apiconfigs.listAuction, {\r\n        params: {\r\n          limit: 10,\r\n          page: page,\r\n        },\r\n        headers: {\r\n          token: localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      if (res.data.responseCode === 200) {\r\n        setAuctionList(res.data.result.docs);\r\n        setNoOfPages(res.data.result.pages);\r\n      }\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    allAuctionDeleteHandler();\r\n    allAuctionListHandler();\r\n  }, [page]);\r\n\r\n\r\n  const pageCheck = page === 1 ? 10 : 0;\r\n\r\n  return (\r\n    <>\r\n      <Page title='Auction'>\r\n        <Paper className={classes.root} elevation={2}>\r\n          <Box className='heading'>\r\n            {/* <Typography variant='h3'>Auctions</Typography> */}\r\n          </Box>\r\n          <Box className='heading'>\r\n            {/* <Button\r\n              variant='contained'\r\n              color='secondary'\r\n              size='large'\r\n              onClick={() => setOpen(true)}\r\n            >\r\n              Make a New Auction\r\n            </Button> */}\r\n          </Box>\r\n          {isLoading ? (\r\n            <DataLoading />\r\n          ) : (\r\n            <Grid container spacing={2}>\r\n              {myAuctionList && myAuctionList ? (\r\n                <>\r\n                  {myAuctionList && myAuctionList.length === 0 && (\r\n                    <NoDataFound />\r\n                  )}\r\n                  {myAuctionList &&\r\n                    myAuctionList.map((data, i) => {\r\n                      return (\r\n                        <Grid item lg={3} md={4} sm={6} xs={6}>\r\n                          <AuctionCard\r\n                            callbackFun={allAuctionListHandler}\r\n                            data={data}\r\n                            type='card'\r\n                            index={i}\r\n                            key={i}\r\n                          />\r\n                        </Grid>\r\n                      );\r\n                    })}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {auctionList && auctionList.length === 0 && <NoDataFound />}\r\n                  {auctionList &&\r\n                    auctionList.map((data, i) => {\r\n                      return (\r\n                        <Grid item lg={3} md={4} sm={6} xs={6}>\r\n                          <AuctionCard\r\n                            callbackFun={calBackFunc || allAuctionListHandler}\r\n                            data={data}\r\n                            type='card'\r\n                            key={i}\r\n                          />\r\n                        </Grid>\r\n                      );\r\n                    })}\r\n                </>\r\n              )}\r\n            </Grid>\r\n          )}\r\n        </Paper>\r\n        {auctionList && auctionList.length >= pageCheck && (\r\n          <Box mt={2} display='flex' justifyContent='center'>\r\n            <Pagination\r\n              count={noOfPages}\r\n              page={page}\r\n              onChange={(e, v) => setPage(v)}\r\n            />\r\n          </Box>\r\n        )}\r\n        {open && (\r\n          <MakeAuctionModal\r\n            callbackFun={allAuctionListHandler}\r\n            open={open}\r\n            setOpen={(status) => setOpen(status)}\r\n          />\r\n        )}\r\n      </Page>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Auction;\r\n\r\nexport function MakeAuctionModal({\r\n  open,\r\n  setOpen,\r\n  callbackFun,\r\n  isEdit,\r\n  auctionNFTDetails,\r\n}) {\r\n  const classes = useStyles();\r\n  const [title, setTitle] = useState(\"\");\r\n  console.log(\"title\", title, title.length);\r\n  const [uploadFile, setUploadFile] = useState(\"\");\r\n  const [uploadFileBlob, setUploadFileBlob] = useState(\"\");\r\n  const [uploadFileType, setUploadFileType] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [expiryDate, setExpiryDate] = useState();\r\n  console.log(\r\n    \"expiryDate\",\r\n    moment(expiryDate).local().format(\"DD:MM:YYYY hh:mm\")\r\n  );\r\n  const [startingBid, setStartingBid] = useState(\"\");\r\n  console.log(\"Number(startingBid\", Number(startingBid), startingBid);\r\n  const [isSubmit, setIsSubmit] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const submitHandler = async () => {\r\n    setIsSubmit(true);\r\n    if (\r\n      title != \"\" &&\r\n      uploadFile != \"\" &&\r\n      description != \"\" &&\r\n      description.length < 200 &&\r\n      title.length < 60 &&\r\n      startingBid > 0 &&\r\n      Number(startingBid) < 2000\r\n    ) {\r\n      setIsLoading(true);\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", uploadFile);\r\n        const res = await axios({\r\n          method: \"POST\",\r\n          url: Apiconfigs.updateAuction,\r\n          data: formData,\r\n        });\r\n        if (res.data.responseCode === 200) {\r\n          const uploadFileURL = res.data.result.secure_url;\r\n          const createRes = await axios.post(\r\n            Apiconfigs.createAuctionNft,\r\n            {\r\n              title: title,\r\n              mediaUrl: uploadFileURL,\r\n              details: description,\r\n              time: expiryDate,\r\n              price: startingBid,\r\n            },\r\n            {\r\n              headers: {\r\n                token: localStorage.getItem(\"token\"),\r\n              },\r\n            }\r\n          );\r\n          if (createRes.data.responseCode === 200) {\r\n            if (callbackFun) {\r\n              callbackFun();\r\n            }\r\n            toast.success(createRes.data.responseMessage);\r\n            setOpen(false);\r\n          } else {\r\n            toast.error(createRes.data.responseMessage);\r\n          }\r\n          setIsLoading(false);\r\n        } else {\r\n          toast.error(res.data.responseMessage);\r\n          setIsLoading(false);\r\n        }\r\n      } catch (error) {\r\n        if (error.response) {\r\n          toast.error(error.response.data.responseMessage);\r\n        } else {\r\n          toast.error(error.message);\r\n        }\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateAuctionNFTHandler = async () => {\r\n    setIsSubmit(true);\r\n    if (\r\n      title != \"\" &&\r\n      description != \"\" &&\r\n      startingBid != \"\" &&\r\n      Number(startingBid) > 0 &&\r\n      Number(startingBid) < 2000\r\n    ) {\r\n      setIsLoading(true);\r\n      try {\r\n        let res = \"\";\r\n        if (uploadFile) {\r\n          const formData = new FormData();\r\n          formData.append(\"file\", uploadFile);\r\n          res = await axios({\r\n            method: \"POST\",\r\n            url: Apiconfigs.uploadFile,\r\n            data: formData,\r\n          });\r\n        }\r\n        if (res?.data?.responseCode === 200 || !uploadFile) {\r\n          let body = {\r\n            auctionId: auctionNFTDetails?._id,\r\n            title: title,\r\n            details: description,\r\n            time: expiryDate,\r\n            amount: startingBid,\r\n          };\r\n          if (uploadFile && res?.data?.result?.secure_ur) {\r\n            const uploadFileURL = res.data.result.secure_url;\r\n            body.mediaUrl = uploadFileURL;\r\n          }\r\n          const createRes = await axios.put(Apiconfigs.updateAuction, body, {\r\n            headers: {\r\n              token: localStorage.getItem(\"token\"),\r\n            },\r\n          });\r\n          if (createRes.data.responseCode === 200) {\r\n            if (callbackFun) {\r\n              callbackFun();\r\n            }\r\n            toast.success(createRes.data.responseMessage);\r\n            setOpen(false);\r\n          } else {\r\n            toast.error(createRes.data.responseMessage);\r\n          }\r\n          setIsLoading(false);\r\n        } else {\r\n          toast.error(res.data.responseMessage);\r\n          setIsLoading(false);\r\n        }\r\n      } catch (error) {\r\n        if (error.response) {\r\n          toast.error(error.response.data.responseMessage);\r\n        } else {\r\n          toast.error(error.message);\r\n        }\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (auctionNFTDetails && isEdit) {\r\n      setTitle(auctionNFTDetails?.title);\r\n      setUploadFileBlob(auctionNFTDetails?.mediaUrl);\r\n      setDescription(auctionNFTDetails?.details);\r\n      setExpiryDate(auctionNFTDetails?.time);\r\n      setStartingBid(auctionNFTDetails?.amount);\r\n      const fileExtention = auctionNFTDetails.mediaUrl.split(\".\").pop();\r\n\r\n      const fileType =\r\n        fileExtention == \"mp4\" || fileExtention == \"webp\"\r\n          ? \"video\"\r\n          : fileExtention == \"mp3\"\r\n            ? \"audio\"\r\n            : \"image\";\r\n      setUploadFileType(fileType);\r\n      setUploadFileType(fileType);\r\n    }\r\n  }, [isEdit, auctionNFTDetails]);\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby='alert-dialog-title'\r\n      aria-describedby='alert-dialog-description'\r\n      maxWidth='sm'\r\n      fullWidth\r\n    >\r\n      <DialogTitle id='alert-dialog-title' align='center'>\r\n        {isEdit ? \"Edit Auction\" : \"Make a New Auction\"}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Box className={classes.mainmodalBox}>\r\n          <Grid container direction={\"column\"} spacing={3}>\r\n            <Grid item xs={12}>\r\n              <Box mt={2}>\r\n                <Typography\r\n                  variant='h6'\r\n                  color='primary.main'\r\n                  style={{ paddingBottom: \"8px\" }}\r\n                >\r\n                  Title\r\n                </Typography>\r\n                <TextField\r\n                  id='outlined-basic'\r\n                  variant='outlined'\r\n                  name='Text Field'\r\n                  placeholder='Write here...'\r\n                  type='text'\r\n                  fullWidth\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                  inputProps={{\r\n                    maxLength: 61,\r\n                    readOnly: isLoading,\r\n                  }}\r\n                  error={\r\n                    (isSubmit && title == \"\") ||\r\n                    (title !== \"\" && title.length > 60)\r\n                  }\r\n                  helperText={\r\n                    (isSubmit && title == \"\" && \"Please enter title\") ||\r\n                    (title !== \"\" &&\r\n                      title.length > 60 &&\r\n                      \" Title should be less than or equal to 60 characters\")\r\n                  }\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Box mt={2}>\r\n                {/* <Typography\r\n                  variant=\"h6\"\r\n                  color=\"primary.main\"\r\n                  style={{ paddingBottom: \"8px\" }}\r\n                >\r\n                  Upload a photo or Video\r\n                </Typography>\r\n                <input\r\n                  readOnly={isLoading}\r\n                  type=\"file\"\r\n                  accept=\"image/*,.mp4,.mp3\"\r\n                  onChange={(e) => {\r\n                    if (e.target.files[0]) {\r\n                      setUploadFile(e.target.files[0]);\r\n                      setUploadFileBlob(URL.createObjectURL(e.target.files[0]));\r\n                      const fileExtention = e.target.files[0].name\r\n                        .split(\".\")\r\n                        .pop();\r\n\r\n                      const fileType =\r\n                        fileExtention == \"mp4\" || fileExtention == \"webp\"\r\n                          ? \"video\"\r\n                          : fileExtention == \"mp3\"\r\n                          ? \"audio\"\r\n                          : \"image\";\r\n                      setUploadFileType(fileType);\r\n                    }\r\n                  }}\r\n                />\r\n                <Box>\r\n                  <Typography variant=\"h5\">Add photos/videos</Typography>\r\n                </Box> */}\r\n                {uploadFileBlob && uploadFileType && (\r\n                  <Box>\r\n                    {(uploadFileType == \"video\" ||\r\n                      uploadFileType == \"audio\") && (\r\n                        <video\r\n                          // width='100%'\r\n                          loop={false}\r\n                          autoPlay={false}\r\n                          muted={true}\r\n                          controls\r\n                          style={\r\n                            uploadFileType === \"audio\"\r\n                              ? { height: 75, width: \"100%\" }\r\n                              : { height: 250, width: \"100%\" }\r\n                          }\r\n                        >\r\n                          <source src={uploadFileBlob} type='video/mp4' />\r\n                        </video>\r\n                      )}\r\n                    {uploadFileType == \"image\" && (\r\n                      <img\r\n                        src={uploadFileBlob}\r\n                        style={{ height: 250 }}\r\n                        alt=''\r\n                      />\r\n                    )}\r\n                  </Box>\r\n                )}\r\n\r\n                {isSubmit && uploadFileBlob == \"\" && (\r\n                  <FormHelperText error>Please select file</FormHelperText>\r\n                )}\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Box mt={2}>\r\n                <Typography\r\n                  variant='h6'\r\n                  color='primary.main'\r\n                  style={{ paddingBottom: \"8px\" }}\r\n                >\r\n                  Description\r\n                </Typography>\r\n                <TextField\r\n                  id='outlined-basic'\r\n                  variant='outlined'\r\n                  name='Text Field'\r\n                  placeholder='Write here...'\r\n                  type='text'\r\n                  fullWidth\r\n                  multiline\r\n                  maxRows={5}\r\n                  // rows={5}\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                  inputProps={{\r\n                    maxLength: 201,\r\n                    readOnly: isLoading,\r\n                  }}\r\n                  error={\r\n                    (isSubmit && description == \"\") ||\r\n                    (description !== \"\" && description.length > 200)\r\n                  }\r\n                  helperText={\r\n                    (isSubmit &&\r\n                      description == \"\" &&\r\n                      \"Please enter description\") ||\r\n                    (description !== \"\" &&\r\n                      description.length > 200 &&\r\n                      \"Description should be less than or equal to 200 characters\")\r\n                  }\r\n                />\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6} lg={6} md={6}>\r\n              <Box mt={3}>\r\n                <FormControl fullWidth>\r\n                  <Typography\r\n                    variant='h6'\r\n                    color='primary.main'\r\n                    style={{ paddingBottom: \"8px\" }}\r\n                  >\r\n                    Expiry Date\r\n                  </Typography>\r\n                  <KeyboardDatePicker\r\n                    format='DD/MM/YYYY'\r\n                    inputVariant='outlined'\r\n                    disablePast\r\n                    margin='dense'\r\n                    minDate={moment().add(10, \"hours\")}\r\n                    onChange={(date) => setExpiryDate(date)}\r\n                    value={expiryDate}\r\n                  />\r\n                </FormControl>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Box mt={3}>\r\n                <FormControl fullWidth>\r\n                  <Typography\r\n                    variant='h6'\r\n                    color='primary.main'\r\n                    style={{ paddingBottom: \"8px\" }}\r\n                  >\r\n                    Starting Bid\r\n                  </Typography>\r\n                  <TextField\r\n                    id='outlined-basic'\r\n                    variant='outlined'\r\n                    name='Text Field'\r\n                    type='number'\r\n                    fullWidth\r\n                    value={startingBid}\r\n                    onKeyPress={(event) => {\r\n                      if (event?.key === \"-\" || event?.key === \"+\") {\r\n                        event.preventDefault();\r\n                      }\r\n                    }}\r\n                    onChange={(e) => setStartingBid(e.target.value)}\r\n                    inputProps={{\r\n                      readOnly: isLoading,\r\n                    }}\r\n                    error={\r\n                      (isSubmit && startingBid === \"\") ||\r\n                      (startingBid !== \"\" && Number(startingBid) === 0) ||\r\n                      (startingBid !== \"\" && Number(startingBid) > 2000)\r\n                    }\r\n                    helperText={\r\n                      (isSubmit &&\r\n                        startingBid === \"\" &&\r\n                        \"Please enter starting bid price is required\") ||\r\n                      (startingBid !== \"\" &&\r\n                        Number(startingBid) === 0 &&\r\n                        \"Please enter valid starting bid price\") ||\r\n                      (startingBid !== \"\" &&\r\n                        Number(startingBid) > 2000 &&\r\n                        \"Starting bid price should be less than or equal to 2000\")\r\n                    }\r\n                  />\r\n                </FormControl>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n          <Box mt={4} mb={3} align='center'>\r\n            <Button\r\n              variant='contained'\r\n              size='large'\r\n              color='primary'\r\n              onClick={() => setOpen(false)}\r\n              className={classes.btn1}\r\n              disabled={isLoading}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant='contained'\r\n              size='large'\r\n              color='secondary'\r\n              onClick={() =>\r\n                isEdit ? updateAuctionNFTHandler() : submitHandler()\r\n              }\r\n              style={{ marginLeft: \"8px\" }}\r\n              disabled={isLoading}\r\n            >\r\n              {isEdit ? \"Update\" : \"Submit\"}{\" \"}\r\n              {isLoading && <ButtonCircularProgress />}\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n"],"sourceRoot":""}