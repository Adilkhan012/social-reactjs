{"version":3,"sources":["views/pages/Dashboard/Comment.js"],"names":["useStyles","makeStyles","theme","commentfullBox","position","top","left","fontSize","rightBox","display","alignItems","justifyContent","height","breakpoints","down","paddingTop","width","maxWidth","maxHeight","commentBox","borderTop","borderBottom","marginTop","padding","marginRight","searchaddress","margin","borderRadius","overflow","backgroundColor","minWidth","minHeight","mainBox","emojiBox","zIndex","props","isLike","auth","useContext","AuthContext","data","setOpenCommentBox","openCommentBox","openCommentBoxId","listPublicExclusiveHandler","history","useHistory","classes","React","useState","location","useLocation","Idd","setIdd","dataList","setDataList","isLoading","setIsLoading","message","setMessage","isSubmit","setIsSubmit","inputStr","setInputStr","userData","_id","likeUser","reactOnPost","filter","userId","length","viewExclusivepostHandler","axios","method","url","Apiconfigs","viewExclusivepost","headers","token","window","localStorage","getItem","res","responseCode","result","commentPostHandler","event","preventDefault","commentOnpost","postId","toast","success","responseMessage","error","useEffect","search","substring","id","likesHandler","params","emoji","isVideo","mediaUrl","includes","setShowPicker","title","className","undefined","aria-label","onClick","goBack","container","spacing","item","sm","md","lg","style","cursor","controls","src","type","mt","mb","xs","reactOnPostCount","align","totalComment","postType","amount","tokenName","iconbutton","color","size","comment","map","dataChild","i","key","dataParent","profilePic","alt","onSubmit","variant","name","placeholder","value","onChange","e","target","fullWidth","ml"],"mappings":"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","file":"static/js/72.6fdf778a.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Paper,\r\n  Container,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Page from \"src/component/Page\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport CommentBox from \"src/component/CommentBox\";\r\nimport UserProfile from \"src/component/UserProfile\";\r\nimport { BiCommentDots } from \"react-icons/bi\";\r\nimport { MdCancel } from \"react-icons/md\";\r\nimport axios from \"axios\";\r\nimport { tokenName } from \"src/utils\";\r\nimport ButtonCircularProgress from \"src/component/ButtonCircularProgress\";\r\nimport { toast } from \"react-toastify\";\r\nimport { AuthContext } from \"src/context/Auth\";\r\nimport Apiconfigs from \"src/ApiConfig/ApiConfig\";\r\nimport { BsEmojiLaughing } from \"react-icons/bs\";\r\nimport Picker from \"emoji-picker-react\";\r\nimport NoDataFound from \"src/component/NoDataFound\";\r\nimport PageLoading from \"src/component/PageLoading\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  commentfullBox: {\r\n    position: \"relative\",\r\n    \"& .canelIcon\": {\r\n      position: \"fixed\",\r\n      top: \"20px\",\r\n      left: \"20px\",\r\n      fontSize: \"30px\",\r\n    },\r\n  },\r\n  rightBox: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    height: \"97vh\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      height: \"auto\",\r\n      paddingTop: \"50px\",\r\n    },\r\n    \"& img\": {\r\n      width: \"auto\",\r\n      maxWidth: \"100%\",\r\n      maxHeight: \"90vh\",\r\n    },\r\n    \"& video\": {\r\n      width: \"auto\",\r\n      maxWidth: \"100%\",\r\n      maxHeight: \"90vh\",\r\n    },\r\n  },\r\n  commentBox: {\r\n    borderTop: \"0.5px solid #737373\",\r\n    borderBottom: \"0.5px solid #737373\",\r\n    marginTop: \"16px\",\r\n    padding: \"5px 0\",\r\n    \"& button\": {\r\n      \"& svg\": {\r\n        fontSize: \"20px\",\r\n        marginRight: \"5px\",\r\n      },\r\n    },\r\n  },\r\n  searchaddress: {\r\n    paddingTop: \"16px\",\r\n    \"& .figure\": {\r\n      margin: \"0\",\r\n      marginRight: \"15px\",\r\n      position: \"relative\",\r\n      \"& .profileimage\": {\r\n        display: \"flex\",\r\n        height: \"50px\",\r\n        width: \"50px\",\r\n        borderRadius: \"50%\",\r\n        overflow: \"hidden\",\r\n        backgroundColor: \"#101010\",\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n          height: \"40px\",\r\n          width: \"40px\",\r\n        },\r\n        \"& img\": {\r\n          width: \"auto\",\r\n          minWidth: \"100%\",\r\n          minHeight: \"50px\",\r\n        },\r\n      },\r\n    },\r\n    \"& button\": {\r\n      backgroundColor: \"#373636\",\r\n      height: \"40px\",\r\n      borderRadius: \"5px\",\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        height: \"40px\",\r\n      },\r\n    },\r\n  },\r\n  mainBox: {\r\n    padding: \"20px\",\r\n  },\r\n  emojiBox: {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    zIndex: \"100\",\r\n    // bottom: \"647px\",\r\n  },\r\n}));\r\n\r\nexport default function (props) {\r\n  const auth = useContext(AuthContext);\r\n  const {\r\n    data,\r\n    setOpenCommentBox,\r\n    openCommentBox,\r\n    openCommentBoxId,\r\n    listPublicExclusiveHandler,\r\n  } = props;\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [reciveOpen, setReciveOpen] = useState(false);\r\n  const location = useLocation();\r\n  const [Idd, setIdd] = useState();\r\n  const [dataList, setDataList] = useState();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isLoadingEmoji, setIsLoadingEmoji] = React.useState(false);\r\n  const [isSubmit, setIsSubmit] = React.useState(false);\r\n  const [inputStr, setInputStr] = useState(null);\r\n\r\n  // console.log(\"data From Comment!!!!!! \", data);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setReciveOpen(false);\r\n  };\r\nlet isLike;\r\n  if (auth.userData?._id && dataList) {\r\n    const likeUser = dataList?.reactOnPost?.filter(\r\n      (data) => data.userId === auth.userData?._id\r\n    );\r\n    isLike = likeUser?.length > 0;\r\n  }\r\n\r\n  const viewExclusivepostHandler = async () => {\r\n    try {\r\n      const res = await axios({\r\n        method: \"GET\",\r\n        url:\r\n          Apiconfigs.viewExclusivepost +\r\n          `${openCommentBoxId ? openCommentBoxId : Idd}`,\r\n        headers: {\r\n          token: window.localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      if (res.data.responseCode === 200) {\r\n        setDataList(res.data.result);\r\n      }\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setDataList();\r\n    }\r\n  };\r\n  // let isLike = false;\r\n  // if (auth.userData?._id && dataList) {\r\n  //   const likeUser = dataList?.reactOnPost?.includes()\r\n  //   const likeUser = dataList?.reactOnPost?.map(()=>{\r\n  //     return(\r\n  //       data\r\n  //     )\r\n  //   })\r\n  //   isLike = likeUser?.length > 0;\r\n  // }\r\n  const commentPostHandler = async (event) => {\r\n    event.preventDefault();\r\n    setIsSubmit(true);\r\n\r\n    if (message !== \"\") {\r\n      try {\r\n        // console.log(\"isSubscribed! : \" + data.isSubscribed);\r\n        // if (data.isSubscribed) {\r\n          const res = await axios({\r\n            method: \"POST\",\r\n            url: Apiconfigs.commentOnpost,\r\n            headers: {\r\n              token: window.localStorage.getItem(\"token\"),\r\n            },\r\n            data: {\r\n              postId: dataList._id,\r\n              message: message,\r\n            },\r\n          });\r\n          if (res.data.responseCode === 200) {\r\n            setIsSubmit(false);\r\n            viewExclusivepostHandler();\r\n            // if (openCommentBoxId ||Idd) {\r\n\r\n            // }\r\n            toast.success(res.data.responseMessage);\r\n            setMessage(\"\");\r\n          }\r\n        // } else {\r\n        //   // If the user is not subscribed, show a message or disable the comment functionality\r\n        //   toast.error(\"You must be a subscriber to comment on this post.\");\r\n        //   console.log(\"User is not subscribed!!!!!!!\");\r\n        // }\r\n      } catch (error) {\r\n        toast.error(error);\r\n        setIsSubmit(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (location.search.substring(1, location.search.length)) {\r\n      const id = location.search.substring(1, location.search.length);\r\n      setIdd(id);\r\n    }\r\n\r\n    if (openCommentBoxId || Idd) {\r\n      viewExclusivepostHandler();\r\n    }\r\n    viewExclusivepostHandler();\r\n  }, [location.search, openCommentBoxId, Idd]);\r\n  const likesHandler = async (id) => {\r\n    try {\r\n      // console.log(\"isSubscribed! : \" + data.isSubscribed);\r\n      // if (data.isSubscribed) {\r\n        const res = await axios({\r\n          method: \"GET\",\r\n          url: Apiconfigs.reactOnPost + id,\r\n          headers: {\r\n            token: window.localStorage.getItem(\"token\"),\r\n          },\r\n          data: {\r\n            postId: id,\r\n          },\r\n          params: {\r\n            emoji: inputStr,\r\n          },\r\n        });\r\n        if (res.data.responseCode === 200) {\r\n          // if (dataList.isSubscribed) {\r\n          listPublicExclusiveHandler();\r\n          viewExclusivepostHandler();\r\n          setInputStr(null);\r\n\r\n          toast.success(res.data.responseMessage);\r\n          setIsLoading(false);\r\n          // console.log(\"User is subscribed!!!!!!!\");\r\n        }\r\n      // } else {\r\n      //   // If the user is not subscribed, show a message or disable the comment functionality\r\n      //   toast.error(\"You must be a subscriber to Like on this post.\");\r\n      //   console.log(\"User is not subscribed!!!!!!!\");\r\n      // }\r\n    } catch (error) {\r\n      setInputStr(null);\r\n    }\r\n  };\r\n  const isVideo = dataList?.mediaUrl?.includes(\".mp4\");\r\n  const [showPicker, setShowPicker] = useState(false);\r\n\r\n  const onEmojiClick = () => {\r\n    setInputStr(\"new\");\r\n    setShowPicker(false);\r\n    // likesHandler();\r\n    likesHandler(dataList._id);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if (inputStr) {\r\n  //     likesHandler(dataList._id);\r\n  //   }\r\n  // }, [inputStr]);\r\n\r\n  useEffect(() => {\r\n    viewExclusivepostHandler();\r\n  });\r\n\r\n  return (\r\n    <Page title=\"Dashboard\">\r\n      <Container maxWidth=\"fixed\">\r\n        {isLoading ? (\r\n          <Box className={classes.commentfullBox}>\r\n            <PageLoading />\r\n          </Box>\r\n        ) : (\r\n          <>\r\n            {dataList !== undefined ? (\r\n              <Box className={classes.commentfullBox}>\r\n                <IconButton\r\n                  aria-label=\"cancle\"\r\n                  onClick={() => {\r\n                    if (openCommentBox) {\r\n                      setOpenCommentBox(false);\r\n                    } else {\r\n                      history.goBack();\r\n                    }\r\n                  }}\r\n                  // component={Link}\r\n                  // to=\"/explore\"\r\n                  className=\"canelIcon\"\r\n                >\r\n                  <MdCancel />\r\n                </IconButton>\r\n                <Grid container spacing={2}>\r\n                  <Grid item sm={12} md={6} lg={8}>\r\n                    <Box className={classes.rightBox}>\r\n                      {isVideo ? (\r\n                        <video\r\n                          width=\"100%\"\r\n                          style={{ cursor: \"pointer\" }}\r\n                          controls\r\n                        >\r\n                          <source src={dataList.mediaUrl} type=\"video/mp4\" />\r\n                        </video>\r\n                      ) : (\r\n                        <img\r\n                          src={dataList?.mediaUrl}\r\n                          style={{ cursor: \"pointer\" }}\r\n                        />\r\n                      )}\r\n                    </Box>\r\n                  </Grid>\r\n                  <Grid item sm={12} md={6} lg={4}>\r\n                    <Box mt={3}>\r\n                      <Box className={classes.mainBox}>\r\n                        <Box mb={3}>\r\n                          <UserProfile dataList={dataList} />\r\n                        </Box>\r\n                        <Box>\r\n                          <Grid container alignItems=\"center\">\r\n                            <Grid item xs={5}>\r\n                              {\" \"}\r\n                              {dataList?.reactOnPostCount > 0 ? (\r\n                                <Box>\r\n                                  +{dataList?.reactOnPostCount}&nbsp; Likes\r\n                                </Box>\r\n                              ) : (\r\n                                <Box>\r\n                                  {dataList?.reactOnPostCount}&nbsp;Likes\r\n                                </Box>\r\n                              )}\r\n                            </Grid>\r\n                            <Grid item xs={7} align=\"right\">\r\n                              <label>{dataList?.totalComment} Comments</label>{\" \"}\r\n                              &nbsp; &nbsp; &nbsp; &nbsp;\r\n                              <label>\r\n                                {dataList?.postType === \"PUBLIC\" && (\r\n                                  <>\r\n                                    {dataList?.amount}&nbsp;\r\n                                    {tokenName}\r\n                                  </>\r\n                                )}{\" \"}\r\n                              </label>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Box>\r\n                        <Box className={classes.commentBox} mb={3}>\r\n                          <Grid container>\r\n                          <Grid item xs={4}>\r\n                            {/* <BsEmojiLaughing\r\n                              position=\"end\"\r\n                              style={{\r\n                                fontSize: \"20px\",\r\n                                cursor: \"pointer\",\r\n                              }}\r\n                              onClick={() => setShowPicker((val) => !val)}\r\n                            /> */}\r\n                            <Grid item xs={4} align=\"right\">\r\n                              <IconButton\r\n                                className={classes.iconbutton}\r\n                                onClick={onEmojiClick}\r\n                              >\r\n                                {isLike ? (\r\n                                  <>\r\n                                    <FavoriteIcon style={{ color: \"red\" }} />\r\n                                  </>\r\n                                ) : (\r\n                                  <>\r\n                                    <FavoriteBorderIcon\r\n                                      style={{ color: \"#BFBFBF\" }}\r\n                                    />\r\n                                  </>\r\n                                )}\r\n                                \r\n                              </IconButton>\r\n                            </Grid>\r\n                          </Grid>\r\n                            <Grid item xs={6} align=\"center\">\r\n                              <Button color=\"primary\" size=\"large\">\r\n                                {\" \"}\r\n                                <BiCommentDots />\r\n                                Comments\r\n                              </Button>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Box>\r\n                        <Box className=\"CommentscrollDiv\">\r\n                          {dataList?.comment &&\r\n                            dataList?.comment?.map((dataChild, i) => {\r\n                              return (\r\n                                <CommentBox\r\n                                  key={i}\r\n                                  listPublicExclusiveHandler={\r\n                                    viewExclusivepostHandler\r\n                                  }\r\n                                  data={dataChild}\r\n                                  dataList={dataList}\r\n                                  dataParent={data}\r\n                                />\r\n                              );\r\n                            })}\r\n                        </Box>\r\n                        <Box className={classes.searchaddress} mt={3}>\r\n                          <Grid container spacing={1} alignItems=\"center\">\r\n                            <Grid item xs={2} sm={2}>\r\n                              <Box className=\"figure\">\r\n                                <Box className=\"profileimage\">\r\n                                  <img\r\n                                    src={\r\n                                      auth.userData?.profilePic\r\n                                        ? auth.userData?.profilePic\r\n                                        : \"images/user.png\"\r\n                                    }\r\n                                    alt=\"user data\"\r\n                                  />\r\n                                </Box>\r\n                              </Box>\r\n                            </Grid>\r\n                            <Grid item xs={10} sm={10}>\r\n                              <Box className=\"figure\">\r\n                                <form\r\n                                  onSubmit={(event) =>\r\n                                    commentPostHandler(event)\r\n                                  }\r\n                                >\r\n                                  <Grid container spacing={1}>\r\n                                    <Grid item xs={9} sm={9}>\r\n                                      <TextField\r\n                                        id=\"outlined-basic\"\r\n                                        variant=\"outlined\"\r\n                                        name=\"Text Field\"\r\n                                        placeholder=\"Write here...\"\r\n                                        type=\"text\"\r\n                                        value={message}\r\n                                        onChange={(e) =>\r\n                                          setMessage(e.target.value)\r\n                                        }\r\n                                        fullWidth\r\n                                        error={isSubmit && message === \"\"}\r\n                                      />\r\n                                      <FormHelperText error>\r\n                                        {isSubmit && message === \"\" && (\r\n                                          <Box\r\n                                            ml={1}\r\n                                            style={{ fontSize: \"12px\" }}\r\n                                          >\r\n                                            Comment is required\r\n                                          </Box>\r\n                                        )}\r\n                                      </FormHelperText>\r\n                                    </Grid>\r\n                                    <Grid item xs={3} sm={3} align=\"center\">\r\n                                      <Button\r\n                                        size=\"large\"\r\n                                        color=\"primary\"\r\n                                        type=\"submit\"\r\n                                        style={{ height: \"40px\" }}\r\n                                        fullWidth\r\n                                        onClick={commentPostHandler}\r\n                                      >\r\n                                        <SendIcon\r\n                                          style={{ color: \"#E31A89\" }}\r\n                                        />\r\n                                      </Button>\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </form>\r\n                              </Box>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Box>\r\n                      </Box>\r\n                    </Box>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            ) : (\r\n              <NoDataFound />\r\n            )}\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"sourceRoot":""}