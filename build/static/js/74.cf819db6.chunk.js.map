{"version":3,"sources":["views/pages/Promotion/Promotion.js"],"names":["useStyles","makeStyles","theme","heading","color","breakpoints","down","fontSize","maxWidth","lineHeight","marginTop","donation","padding","border","cursor","backgroundColor","bannerBox","root","button","fontWeight","boxShadow","borderBottom","borderRadius","height","background","width","Buttonbox","marginRight","minWidth","boxSizing","fontFamily","cancelBtn","position","top","right","mainmodalBox","outline","display","alignItems","textAlign","justifyContent","left","opacity","margin","overflow","maxHeight","Interest","classes","useState","description","setDescription","auth","useContext","AuthContext","isLoading","isSubmit","setIsSubmit","image","setimage","setimageurl","React","open","setOpen","setcoverPost","collectionlistAll","duration","setDuration","list","setlist","setStatus","titlePost","setTitlePost","portUrl","setPortUrl","cover","setcover","loader","setLoader","handleClickOpen","handleClose","activities","useRef","minAgeCheck","setMinAge","maxAgeCheck","setMaxAge","selectedTeam","setSelectedTeam","intrestValue","intrestList","setIntrestList","durationList","setSurationList","durationId","setDurationId","durationAmount","setAmounDuration","validPromotionUrl","value","test","listDurationHandler","id","axios","method","url","Apiconfigs","listDuration","res","data","responseCode","result","docs","setDurationDays","setDurationCount","useEffect","map","listInterestHandler","listInterest","addInterestHandler","intrestValueArr","length","split","i","singlerIntrestValue","createInterest","headers","token","window","localStorage","getItem","name","createPromotionleHandle","event","preventDefault","selectuser","Number","ApiConfig","createPostPromotion","details","mediaUrl","postTitle","dateTime","amount","interest","concat","minAge","maxAge","then","toast","success","responseMessage","response_message","error","catch","response","message","className","elevation","container","spacing","item","lg","xs","align","variant","mt","onClick","style","disabled","onClose","aria-labelledby","aria-describedby","fullWidth","UserBox","src","userData","profilePic","userName","onSubmit","placeholder","type","Boolean","onChange","e","target","ml","multiline","minRows","multiple","options","_event","newTeam","getOptionLabel","option","renderInput","params","label","helperText","onKeyPress","key","paddingRight","statusData","_id","handleDurationFunc","marginLeft","direction","addphotos","accept","files","URL","createObjectURL","file","cb","reader","FileReader","readAsDataURL","onload","onerror","err","getBase64","controls","mb","size","alt","overflowY","overflowX","isVideo","includes","mr","updateSelectedBundle"],"mappings":"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","file":"static/js/74.cf819db6.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef, useContext, useMemo } from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  makeStyles,\r\n  Paper,\r\n  Container,\r\n  IconButton,\r\n  TextField,\r\n  FormControl,\r\n  MenuItem,\r\n  Select,\r\n  Avatar,\r\n  FormHelperText,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport JoditEditor from \"jodit-react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { AiOutlineCloudUpload } from \"react-icons/ai\";\r\nimport Axios from \"axios\";\r\nimport Apiconfigs from \"src/ApiConfig/ApiConfig\";\r\nimport { toast } from \"react-toastify\";\r\nimport { AuthContext } from \"src/context/Auth\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { MdPhoto, MdCancel, MdAddToPhotos } from \"react-icons/md\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport ButtonCircularProgress from \"src/component/ButtonCircularProgress\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport ApiConfig from \"src/ApiConfig/ApiConfig\";\r\nimport { MdOutlineAddBox } from \"react-icons/md\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  heading: {\r\n    \"& h4\": {\r\n      color: \"#696969\",\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        fontSize: \"18px\",\r\n      },\r\n    },\r\n\r\n    \"& p\": {\r\n      color: \"#696969\",\r\n      maxWidth: \"384px\",\r\n      lineHeight: \"24px\",\r\n      marginTop: \"10px\",\r\n    },\r\n  },\r\n  donation: {\r\n    \"& span\": {\r\n      fontSize: \"12px\",\r\n      padding: \"2px 5px\",\r\n      border: \"1px solid #e31a89\",\r\n      cursor: \"pointer\",\r\n      \"&.active\": {\r\n        backgroundColor: \"#e31a89\",\r\n      },\r\n    },\r\n  },\r\n  bannerBox: {\r\n    padding: \"150px 0\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      padding: \"90px 0\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  root: {\r\n    padding: \"25px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      padding: \"10px\",\r\n    },\r\n  },\r\n  button: {\r\n    fontWeight: \"400\",\r\n    fontSize: \"14px\",\r\n    lineHeight: \"0px\",\r\n    boxShadow: \"none\",\r\n    borderBottom: \"0\",\r\n    borderRadius: \"0\",\r\n    height: \"40px\",\r\n    background: \"transparent\",\r\n    color: \"#7E6196 \",\r\n    \"& svg\": {\r\n      width: \"34px\",\r\n      height: \"35px\",\r\n      background: \"#FCF2FA\",\r\n      borderRadius: \"10px\",\r\n      padding: \"5px 6px\",\r\n      color: \"rgba(152, 126, 171, 0.5)\",\r\n    },\r\n    \"&:hover\": {\r\n      backgroundColor: \"#E6E6E6\",\r\n      boxShadow: \"none\",\r\n      borderRadius: \"5px\",\r\n    },\r\n  },\r\n  Buttonbox: {\r\n    \"& Button\": {\r\n      marginRight: \"5px\",\r\n      minWidth: \"106px\",\r\n      boxSizing: \"border-box\",\r\n      fontWeight: \"400\",\r\n      borderRadius: \"10px\",\r\n      padding: \"11px 16px\",\r\n      background: \"#242526\",\r\n      color: \"#9E9E9E\",\r\n      fontFamily: \"'Montserrat'\",\r\n      marginTop: \"7px\",\r\n      fontSize: \"14px\",\r\n      \"&:hover\": {\r\n        background: \"#EC167F\",\r\n        color: \"#fff\",\r\n      },\r\n      \"&:active\": {\r\n        background: \"#EC167F\",\r\n        color: \"#fff\",\r\n      },\r\n    },\r\n  },\r\n  cancelBtn: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    right: 0,\r\n  },\r\n  mainmodalBox: {\r\n    \"& .formControl\": {\r\n      width: \"100%\",\r\n      backgroundColor: \"transparent\",\r\n      border: \"none\",\r\n      color: \"#fff\",\r\n      \"&:focus-visible\": {\r\n        outline: \"none\",\r\n      },\r\n    },\r\n    \"& .addphotos\": {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      textAlign: \"center\",\r\n      justifyContent: \"center\",\r\n      padding: \"30px 20px\",\r\n      border: \"1px dashed\",\r\n      cursor: \"pointer\",\r\n      position: \"relative\",\r\n      \"& input\": {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        opacity: 0,\r\n      },\r\n      \"& svg\": {\r\n        fontSize: \"30px\",\r\n      },\r\n    },\r\n  },\r\n\r\n  mainmodalBox: {\r\n    \"& .formControl\": {\r\n      width: \"100%\",\r\n      backgroundColor: \"transparent\",\r\n      border: \"none\",\r\n      color: \"#fff\",\r\n      \"&:focus-visible\": {\r\n        outline: \"none\",\r\n      },\r\n    },\r\n    \"& .addphotos\": {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      textAlign: \"center\",\r\n      justifyContent: \"center\",\r\n      padding: \"30px 20px\",\r\n      border: \"1px dashed\",\r\n      cursor: \"pointer\",\r\n      position: \"relative\",\r\n      \"& input\": {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        opacity: 0,\r\n      },\r\n      \"& svg\": {\r\n        fontSize: \"30px\",\r\n      },\r\n    },\r\n  },\r\n  UserBox: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    \"& h6\": {\r\n      fontWeight: \"600\",\r\n    },\r\n    \"& select\": {\r\n      backgroundColor: \"#595a5a\",\r\n      color: \"#cac7c7\",\r\n      padding: \"5px 10px\",\r\n      borderRadius: \"3px\",\r\n      border: \"none\",\r\n      \"&:focus-visible\": {\r\n        outline: \"none\",\r\n      },\r\n    },\r\n    \"& figure\": {\r\n      margin: \"0\",\r\n      marginRight: \"15px\",\r\n      height: \"60px\",\r\n      width: \"60px\",\r\n      borderRadius: \"50%\",\r\n      overflow: \"hidden\",\r\n      backgroundColor: \"#101010\",\r\n      \"& img\": {\r\n        width: \"auto\",\r\n        maxWidth: \"100%\",\r\n        maxHeight: \"60px\",\r\n      },\r\n    },\r\n  },\r\n  addphotos: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: \"30px 20px\",\r\n    border: \"0.25px solid #525455\",\r\n    borderRadius: \"14px\",\r\n    cursor: \"pointer\",\r\n    position: \"relative\",\r\n    \"& input\": {\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      opacity: 0,\r\n    },\r\n    \"& svg\": {\r\n      fontSize: \"30px\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Interest() {\r\n  const classes = useStyles();\r\n  const [description, setDescription] = useState(\"\");\r\n  const auth = useContext(AuthContext);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [isSubmit, setIsSubmit] = useState(false);\r\n  const [image, setimage] = useState(\"\");\r\n  const [imageurl, setimageurl] = useState(\"\");\r\n  const [open, setOpen] = React.useState(false);\r\n  const [coverPost, setcoverPost] = useState(\"\");\r\n  const [collectionlistAll, setCollectionlist] = useState([]);\r\n  const [duration, setDuration] = useState(\"\");\r\n  const [list, setlist] = useState(\"\");\r\n  const [statusList, setStatus] = useState(false);\r\n  const [titlePost, setTitlePost] = useState(\"\");\r\n  const [portUrl, setPortUrl] = useState(\"\");\r\n\r\n  const [cover, setcover] = useState();\r\n  const [loader, setLoader] = React.useState(false);\r\n\r\n  const updateSelectedBundle = (data) => {\r\n    setStatus(true);\r\n    setlist(data);\r\n  };\r\n\r\n  const getBase64 = (file, cb) => {\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = function () {\r\n      cb(reader.result);\r\n    };\r\n    reader.onerror = function (err) { };\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const [activities, setActivities] = useState(\"Select intreset\");\r\n\r\n  const editor = useRef(null);\r\n\r\n  const config = {\r\n    readonly: false,\r\n  };\r\n  const [minAgeCheck, setMinAge] = useState(\"\");\r\n  const [maxAgeCheck, setMaxAge] = useState(\"\");\r\n  const [selectedTeam, setSelectedTeam] = useState();\r\n  const [isOpenInterest, setIsopenInterest] = useState(false);\r\n  const [intrestValue, setIntrest] = useState(\"\");\r\n  const [intrestList, setIntrestList] = useState([]);\r\n  const [durationList, setSurationList] = useState([]);\r\n  const [durationId, setDurationId] = useState();\r\n  const [durationAmount, setAmounDuration] = useState();\r\n  const validPromotionUrl = (value) => {\r\n    const re = /((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/;\r\n    return re.test(value);\r\n  };\r\n  const handleDurationFunc = (data) => {\r\n    setDuration(data?.duration);\r\n    setAmounDuration(data?.amount);\r\n    setDurationId(data?._id);\r\n  };\r\n  const listDurationHandler = async (id) => {\r\n    try {\r\n      const res = await axios({\r\n        method: \"GET\",\r\n        url: Apiconfigs.listDuration,\r\n        // headers: {\r\n        //   token: window.localStorage.getItem(\"token\"),\r\n        // },\r\n        // data: {\r\n        //   name: id,\r\n        // },\r\n      });\r\n      if (res.data.responseCode === 200) {\r\n        setSurationList(res.data.result.docs);\r\n      }\r\n    } catch (error) { }\r\n  };\r\n  const [durationDays, setDurationDays] = useState(\"Days\");\r\n  const [durationCount, setDurationCount] = useState(0);\r\n  useEffect(() => {\r\n    const ab = durationList?.map((data) => {\r\n      if (data.duration == 365) {\r\n        setDurationDays(\"Year\");\r\n        setDurationCount(1);\r\n      } else if (data.duration < 30) {\r\n        if (data.duration < 7) {\r\n          setDurationDays(\"Days\");\r\n          setDurationCount(data.duration / 1);\r\n        } else {\r\n          setDurationDays(\"Week\");\r\n          setDurationCount(data.duration / 7);\r\n        }\r\n      } else if (data.duration > 30 && data.duration < 365) {\r\n        setDurationDays(\"Month\");\r\n        setDurationCount(data.duration / 30);\r\n      } else if (data.duration > 365) {\r\n        if (data.duration == 365) {\r\n          setDurationDays(\"Year\");\r\n          setDurationCount(1);\r\n        } else {\r\n          setDurationDays(\"Year\");\r\n          setDurationCount(data.duration / 365);\r\n        }\r\n      }\r\n      return data;\r\n    });\r\n  }, [durationList]);\r\n\r\n  const listInterestHandler = async (id) => {\r\n    try {\r\n      const res = await axios({\r\n        method: \"GET\",\r\n        url: Apiconfigs.listInterest,\r\n        // headers: {\r\n        //   token: window.localStorage.getItem(\"token\"),\r\n        // },\r\n        // data: {\r\n        //   name: id,\r\n        // },\r\n      });\r\n      if (res.data.responseCode === 200) {\r\n        setIntrestList(res.data.result.docs);\r\n      }\r\n    } catch (error) { }\r\n  };\r\n  useEffect(() => {\r\n    listInterestHandler();\r\n    listDurationHandler();\r\n  }, []);\r\n  const addInterestHandler = async (id) => {\r\n    const intrestValueArr =\r\n      intrestValue.length > 0 ? intrestValue.split(\",\") : [];\r\n    for (let i = 0; i < intrestValueArr.length; i++) {\r\n      const singlerIntrestValue = intrestValueArr[i];\r\n      try {\r\n        const res = await axios({\r\n          method: \"POST\",\r\n          url: Apiconfigs.createInterest,\r\n          headers: {\r\n            token: window.localStorage.getItem(\"token\"),\r\n          },\r\n          data: {\r\n            name: singlerIntrestValue,\r\n          },\r\n        });\r\n        if (res.data.responseCode === 200) {\r\n        }\r\n      } catch (error) { }\r\n    }\r\n  };\r\n\r\n  const createPromotionleHandle = async (event) => {\r\n    event.preventDefault();\r\n    setIsSubmit(true);\r\n    const selectuser = selectedTeam\r\n      ? selectedTeam?.map((data) => data.name)\r\n      : [];\r\n\r\n    if (\r\n      description !== \"\" &&\r\n      titlePost !== \"\" &&\r\n      portUrl !== \"\" &&\r\n      cover !== \"\" &&\r\n      minAgeCheck !== \"\" &&\r\n      maxAgeCheck !== \"\" &&\r\n      duration &&\r\n      validPromotionUrl(portUrl) &&\r\n      description.length <= 200 &&\r\n      titlePost.length <= 60 &&\r\n      Number(minAgeCheck) >= 1 &&\r\n      Number(minAgeCheck) < 99 && // Number(minAgeCheck) < Number(maxAgeCheck) &&\r\n      Number(maxAgeCheck) >= 1 &&\r\n      Number(maxAgeCheck) <= 99 &&\r\n      (selectuser || intrestValue != \"\")\r\n    ) {\r\n      setLoader(true);\r\n\r\n      const intrestValueArr =\r\n        intrestValue.length > 0 ? intrestValue.split(\",\") : [];\r\n      if (intrestValueArr.length > 0) {\r\n        await addInterestHandler();\r\n      }\r\n      axios({\r\n        method: \"POST\",\r\n        url: ApiConfig.createPostPromotion,\r\n        data: {\r\n          details: description,\r\n          mediaUrl: cover,\r\n          postTitle: titlePost,\r\n          url: portUrl,\r\n          dateTime: duration,\r\n          amount: durationAmount,\r\n          interest: selectuser.concat(intrestValueArr),\r\n          minAge: minAgeCheck,\r\n          maxAge: maxAgeCheck,\r\n        },\r\n        headers: {\r\n          token: localStorage.getItem(\"token\"),\r\n        },\r\n      })\r\n        .then(async (res) => {\r\n          if (res.data.responseCode === 200) {\r\n            setIsSubmit(false);\r\n            // listPublicExclusiveHandler();\r\n            setDescription(\"\");\r\n            setTitlePost(\"\");\r\n            setcoverPost(\"\");\r\n            setimageurl(\"\");\r\n            setimage(\"\");\r\n            toast.success(res.data.responseMessage);\r\n            setOpen(false);\r\n            setLoader(false);\r\n            if (res.data.result.docs) {\r\n              toast.success(res.response_message);\r\n              setLoader(false);\r\n            } else {\r\n              toast.error(res.response_message);\r\n            }\r\n          }\r\n          setLoader(false);\r\n        })\r\n        .catch((error) => {\r\n          setLoader(false);\r\n          if (error?.response?.data?.responseMessage) {\r\n            toast.error(error?.response?.data?.responseMessage);\r\n          } else {\r\n            toast.error(error.message);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box className={classes.bannerBox}>\r\n\r\n        <Paper className={classes.root} elevation={2}>\r\n          <Box className={classes.root}>\r\n            <Grid container spacing>\r\n              <Grid item lg={6} xs={6} align=\"left\">\r\n                <Box className={classes.heading}>\r\n                  <Typography variant=\"h3\">Promotion</Typography>\r\n                  <Box mt={2}>\r\n                    <Button onClick={handleClickOpen}>\r\n                      {\" \"}\r\n                      <MdPhoto\r\n                        style={{ color: \"#e31a89\", marginRight: \"10px\" }}\r\n                      />{\" \"}\r\n                      <label>Photo / Video</label>\r\n                    </Button>\r\n                  </Box>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item lg={6} xs={6} align=\"right\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{ backgroundColor: \"#e31a89\", color: \"#fff\" }}\r\n                  onClick={handleClickOpen}\r\n                  disabled={isLoading}\r\n                >\r\n                  Create Promotion\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Paper>\r\n\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n          maxWidth=\"sm\"\r\n          fullWidth\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            <Typography variant=\"h5\">Create Promotion</Typography>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <IconButton className={classes.cancelBtn} onClick={handleClose}>\r\n              <MdCancel />\r\n            </IconButton>\r\n            <Box className={classes.mainmodalBox}>\r\n              <Box className={classes.UserBox}>\r\n                <Avatar\r\n                  style={{\r\n                    width: \"50px\",\r\n                    height: \"50px\",\r\n                    marginRight: \"10px\",\r\n                  }}\r\n                  src={\r\n                    auth?.userData?.profilePic\r\n                      ? auth?.userData?.profilePic\r\n                      : \"images/user.png\"\r\n                  }\r\n                />\r\n\r\n                <Typography variant=\"h6\">\r\n                  {auth?.userData?.userName\r\n                    ? auth?.userData?.userName\r\n                    : auth?.userData?.name}\r\n                </Typography>\r\n              </Box>\r\n              <form onSubmit={(event) => createPromotionleHandle(event)}>\r\n                <Box mt={2}>\r\n                  <TextField\r\n                    id=\"outlined-basic\"\r\n                    variant=\"outlined\"\r\n                    name=\"Text Field\"\r\n                    placeholder=\"Title\"\r\n                    type=\"text\"\r\n                    fullWidth\r\n                    error={\r\n                      Boolean(isSubmit && titlePost === \"\") ||\r\n                      (titlePost !== \"\" && titlePost.length > 60)\r\n                    }\r\n                    onChange={(e) => setTitlePost(e.target.value)}\r\n                  />\r\n                  {/* <FormHelperText error>\r\n                      {isSubmit && titlePost === \"\" && (\r\n                        <Box ml={1}>Title is required</Box>\r\n                      )}\r\n                    </FormHelperText> */}\r\n                  <FormHelperText error>\r\n                    {(isSubmit && titlePost === \"\" && (\r\n                      <Box ml={1}>Title is required</Box>\r\n                    )) ||\r\n                      (titlePost !== \"\" && titlePost.length > 60 && (\r\n                        <Box ml={1}>\r\n                          Title should be less than or equal to 60 characters\r\n                        </Box>\r\n                      ))}\r\n                  </FormHelperText>\r\n                </Box>\r\n                <Box mt={2}>\r\n                  {/* <JoditEditor\r\n                    ref={editor}\r\n                    // disabled={isEdit}\r\n                    value={description}\r\n                    config={config}\r\n                    name=\"descritionValue\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    tabIndex={1}\r\n                    error={Boolean(isSubmit && !description)}\r\n                    onBlur={(e) => setDescription(e)} // preferred to use only this option to update the content for performance reasons\r\n                    onChange={(newContent) => {\r\n                      // setDescription(newContent);\r\n                      // onChange(newContent);\r\n                    }}\r\n                  /> */}\r\n                  <TextField\r\n                    type=\"text\"\r\n                    multiline\r\n                    minRows={4}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                    name=\"descritionValue\"\r\n                    variant=\"outlined\"\r\n                    placeholder=\"Description\"\r\n                    fullWidth\r\n                    error={\r\n                      Boolean(isSubmit && !description) ||\r\n                      (description !== \"\" && description.length > 200)\r\n                    }\r\n                  />\r\n                  {/* <FormHelperText error>\r\n                      {isSubmit && !description && (\r\n                        <Box ml={1}>Description is required</Box>\r\n                      )}\r\n                    </FormHelperText> */}\r\n                  <FormHelperText error>\r\n                    {(isSubmit && description === \"\" && (\r\n                      <Box ml={1}>Description is required</Box>\r\n                    )) ||\r\n                      (description !== \"\" && description.length > 200 && (\r\n                        <Box ml={1}>\r\n                          Description should be less than or equal to 200\r\n                          characters\r\n                        </Box>\r\n                      ))}\r\n                  </FormHelperText>\r\n                </Box>\r\n                <Box mt={2}>\r\n                  <Autocomplete\r\n                    multiple\r\n                    id=\"tags-standard\"\r\n                    options={intrestList}\r\n                    value={selectedTeam}\r\n                    onChange={(_event, newTeam) => {\r\n                      setSelectedTeam(newTeam);\r\n                    }}\r\n                    getOptionLabel={(option) => option?.name}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        variant=\"outlined\"\r\n                        label=\"Interest\"\r\n                        placeholder=\"Users\"\r\n                        error={Boolean(isSubmit && !selectedTeam)}\r\n                        helperText={\r\n                          isSubmit &&\r\n                          !selectedTeam &&\r\n                          \"Please select atleast one intrest\"\r\n                        }\r\n                      />\r\n                    )}\r\n                  />\r\n                  <FormHelperText error>\r\n                    {isSubmit && activities === \"\" && (\r\n                      <Box ml={1}>Please select atleast on intrest</Box>\r\n                    )}\r\n                  </FormHelperText>\r\n\r\n                  {/* <Box mt={1} style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                    {\" \"}\r\n                    <MdOutlineAddBox\r\n                      onClick={() => setIsopenInterest(true)}\r\n                      style={{\r\n                        fontSize: \"23px\",\r\n                        color: \"rgb(227, 26, 137)\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                    />\r\n                    <small style={{ fontSize: \"13px\", marginLeft: \"7px\" }}>\r\n                      {\" \"}\r\n                      Add Intrest\r\n                    </small>\r\n                  </Box> */}\r\n                </Box>\r\n                {/* {intrestList.length === 0 && (\r\n                  <Box mt={2} align=\"center\">\r\n                    <TextField\r\n                      id=\"outlined-basic\"\r\n                      variant=\"outlined\"\r\n                      name=\"Text Field\"\r\n                      placeholder=\"Intrest name, Please enter comma separated values\"\r\n                      type=\"text\"\r\n                      fullWidth\r\n                      value={intrestValue}\r\n                      // error={Boolean(isSubmit && intrestValue === \"\")}\r\n\r\n                      onChange={(e) => setIntrest(e.target.value)}\r\n                    />\r\n                    <Button\r\n                      onClick={() => {\r\n                        setIsopenInterest(false);\r\n                        setIntrest(\"\");\r\n                      }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </Box>\r\n                )} */}\r\n                {/* {isOpenInterest && (\r\n                  <Box mt={2}>\r\n                    <TextField\r\n                      id=\"outlined-basic\"\r\n                      variant=\"outlined\"\r\n                      name=\"Text Field\"\r\n                      placeholder=\"Intrest name, Please enter comma separated values\"\r\n                      type=\"text\"\r\n                      fullWidth\r\n                      value={intrestValue}\r\n                      onChange={(e) => setIntrest(e.target.value)}\r\n                    />\r\n                    <Button\r\n                      onClick={() => {\r\n                        setIsopenInterest(true);\r\n                        setIntrest(\"\");\r\n                      }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </Box>\r\n                )} */}\r\n                <Box mt={2}>\r\n                  <FormControl fullWidth>\r\n                    <TextField\r\n                      id=\"outlined-basic\"\r\n                      variant=\"outlined\"\r\n                      name=\"Text Field\"\r\n                      placeholder=\"Minimum age (year)\"\r\n                      type=\"number\"\r\n                      onKeyPress={(event) => {\r\n                        if (event?.key === \"-\" || event?.key === \"+\") {\r\n                          event.preventDefault();\r\n                        }\r\n                      }}\r\n                      fullWidth\r\n                      value={minAgeCheck}\r\n                      error={\r\n                        Boolean(isSubmit && minAgeCheck === \"\") ||\r\n                        (minAgeCheck !== \"\" && Number(minAgeCheck) > 99) ||\r\n                        (minAgeCheck !== \"\" && Number(minAgeCheck) < 1)\r\n                      }\r\n                      onChange={(e) => setMinAge(e.target.value)}\r\n                    />\r\n                    <FormHelperText error>\r\n                      {(isSubmit &&\r\n                        (minAgeCheck === \"\" ||\r\n                          Number(minAgeCheck) > Number(maxAgeCheck)) && (\r\n                          <Box ml={1}>\r\n                            Min age is required, It should be less then max\r\n                            age\r\n                          </Box>\r\n                        )) ||\r\n                        (minAgeCheck !== \"\" && Number(minAgeCheck) < 1 && (\r\n                          <Box ml={1}>Min age should be greator then 0</Box>\r\n                        )) ||\r\n                        (minAgeCheck !== \"\" && Number(minAgeCheck) > 99 && (\r\n                          <Box ml={1}>Min age should be less then 100</Box>\r\n                        ))}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                </Box>\r\n                <Box mt={2}>\r\n                  <FormControl fullWidth>\r\n                    <TextField\r\n                      id=\"outlined-basic\"\r\n                      variant=\"outlined\"\r\n                      name=\"Text Field\"\r\n                      placeholder=\"Maximum age (year)\"\r\n                      type=\"number\"\r\n                      onKeyPress={(event) => {\r\n                        if (event?.key === \"-\" || event?.key === \"+\") {\r\n                          event.preventDefault();\r\n                        }\r\n                      }}\r\n                      fullWidth\r\n                      value={maxAgeCheck}\r\n                      error={\r\n                        Boolean(isSubmit && maxAgeCheck === \"\") ||\r\n                        (maxAgeCheck !== \"\" && Number(maxAgeCheck) < 1) ||\r\n                        (maxAgeCheck !== \"\" && Number(maxAgeCheck) > 99)\r\n                      }\r\n                      onChange={(e) => setMaxAge(e.target.value)}\r\n                    />\r\n                    <FormHelperText error>\r\n                      {(isSubmit &&\r\n                        (maxAgeCheck === \"\" ||\r\n                          Number(maxAgeCheck) < Number(minAgeCheck)) && (\r\n                          <Box ml={1}>\r\n                            Max age is required, It should be greater than min\r\n                            age\r\n                          </Box>\r\n                        )) ||\r\n                        (maxAgeCheck !== \"\" && Number(maxAgeCheck) < 1 && (\r\n                          <Box ml={1}>Max age should be greator then 0</Box>\r\n                        )) ||\r\n                        (maxAgeCheck !== \"\" && Number(maxAgeCheck) > 99 && (\r\n                          <Box ml={1}>Max age should be less then 100</Box>\r\n                        ))}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                </Box>\r\n                <Box mt={2}>\r\n                  <TextField\r\n                    id=\"outlined-basic\"\r\n                    variant=\"outlined\"\r\n                    name=\"Text Field\"\r\n                    placeholder=\"Promotion Url\"\r\n                    type=\"text\"\r\n                    fullWidth\r\n                    error={\r\n                      Boolean(isSubmit && portUrl === \"\") ||\r\n                      (portUrl !== \"\" && !validPromotionUrl(portUrl))\r\n                    }\r\n                    onChange={(e) => setPortUrl(e.target.value)}\r\n                  />\r\n                  {/* <FormHelperText error>\r\n                      {isSubmit && titlePost === \"\" && (\r\n                        <Box ml={1}>Title is required</Box>\r\n                      )}\r\n                    </FormHelperText> */}\r\n                  <FormHelperText error>\r\n                    {(isSubmit && portUrl === \"\" && (\r\n                      <Box ml={1}>Promotion url is required</Box>\r\n                    )) ||\r\n                      (portUrl !== \"\" && !validPromotionUrl(portUrl) && (\r\n                        <Box ml={1}>\r\n                          Please enter valid promotion url\r\n                        </Box>\r\n                      ))}\r\n                  </FormHelperText>\r\n                </Box>\r\n                <Box mt={3}>\r\n                  <Grid container spacing={1}>\r\n                    <Grid item xs={4} align=\"left\">\r\n                      <Typography variant=\"h6\">Duration</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.donation}>\r\n                      <Box>\r\n                        <Grid container spacing={3} style={{ paddingRight: \"20px\" }}>\r\n                          {durationList &&\r\n                            durationList?.map((data, i) => {\r\n                              const statusData = data._id === durationId;\r\n                              return (\r\n                                <Grid item xs={6} key={i}>\r\n                                  <span\r\n                                    style={{\r\n                                      fontSize: \"14px\",\r\n                                      marginRight: \"8px\",\r\n                                      width: \"100%\",\r\n                                      display: \"flex\",\r\n                                      alignItems: \"center\",\r\n                                      justifyContent: \"center\",\r\n                                      borderRadius: \"5px\",\r\n                                      height: \"100%\",\r\n                                    }}\r\n                                    className={statusData ? \"active\" : null}\r\n                                    onClick={() => handleDurationFunc(data)}\r\n                                  >\r\n                                    {data?.duration}&nbsp; Days,{\" \"}\r\n                                    {data?.amount} Share\r\n                                  </span>\r\n                                </Grid>\r\n                              );\r\n                            })}\r\n                        </Grid>\r\n                      </Box>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <FormHelperText error >\r\n                    {isSubmit && !duration && (\r\n                      <Box style={{ marginTop: '10px', marginLeft: \"6px\" }}>Please add duration </Box>\r\n                    )}\r\n                  </FormHelperText>\r\n                </Box>\r\n\r\n                <Box>\r\n                  <Grid container direction={\"column\"} spacing={2}>\r\n                    <Grid item xs={12}>\r\n                      <Box mt={4} className={classes.addphotos}>\r\n                        <input\r\n                          // accept=\"video/*\"\r\n                          accept=\".jpg,.gif,.png,.svg,.jpeg,.mp4\"\r\n                          // accept=\"image/*\"\r\n                          type=\"file\"\r\n                          error={Boolean(isSubmit && image === \"\")}\r\n                          onChange={(e) => {\r\n                            setimage(e.target.files[0]);\r\n                            setimageurl(\r\n                              URL.createObjectURL(e.target.files[0])\r\n                            );\r\n                            getBase64(e.target.files[0], (result) => {\r\n                              setcover(result);\r\n                            });\r\n                          }}\r\n                        />\r\n                        <Box>\r\n                          {image?.type === \"video/mp4\" ||\r\n                            image?.type === \"image/jpeg\" ||\r\n                            image?.type === \"image/png\" ||\r\n                            image?.type === \"image/gif\" ||\r\n                            image?.type === \"image/jpg\" ||\r\n                            image?.type === \"image/svg\" ? (\r\n                            <>\r\n                              {image?.type === \"video/mp4\" ? (\r\n                                <>\r\n                                  <video\r\n                                    style={{\r\n                                      width: \"100%\",\r\n                                      maxHeight: \"213px\",\r\n                                    }}\r\n                                    controls\r\n                                  >\r\n                                    <source src={cover} type=\"video/mp4\" />\r\n                                  </video>\r\n                                  <Box mt={2} mb={2}>\r\n                                    Uploaded Successfully\r\n                                  </Box>\r\n                                  <Button\r\n                                    variant=\"contained\"\r\n                                    size=\"large\"\r\n                                    color=\"secondary\"\r\n                                    type=\"submit\"\r\n                                    onClick={() => {\r\n                                      setimageurl(\"\");\r\n                                      setimage(\"\");\r\n                                      setcover(\"\");\r\n                                    }}\r\n                                  >\r\n                                    Remove\r\n                                  </Button>\r\n                                </>\r\n                              ) : (\r\n                                <>\r\n                                  <img src={cover} alt=\"\" width=\"200px\" />\r\n                                  <Box mt={2} mb={2}>\r\n                                    Uploaded Successfully\r\n                                  </Box>\r\n                                  <Button\r\n                                    variant=\"contained\"\r\n                                    size=\"large\"\r\n                                    color=\"secondary\"\r\n                                    type=\"submit\"\r\n                                    onClick={() => {\r\n                                      setimageurl(\"\");\r\n                                      setimage(\"\");\r\n                                      setcover(\"\");\r\n                                    }}\r\n                                  >\r\n                                    Remove\r\n                                  </Button>\r\n                                </>\r\n                              )}\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              {\" \"}\r\n                              <MdAddToPhotos />\r\n                              <Typography variant=\"h5\">\r\n                                Add photos/videos\r\n                              </Typography>\r\n                              {/* <small>or drag and drop</small> */}\r\n                            </>\r\n                          )}\r\n                        </Box>\r\n                      </Box>\r\n                      <Box mt={1}>\r\n                        <FormHelperText error>\r\n                          {isSubmit && image === \"\" && (\r\n                            <Box ml={1}>Image is required</Box>\r\n                          )}\r\n                        </FormHelperText>\r\n                      </Box>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n\r\n                <Box mt={2}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    // onClick={createPromotionleHandle}\r\n                    color=\"secondary\"\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    disabled={loader}\r\n                  >\r\n                    Submit {loader && <ButtonCircularProgress />}\r\n                  </Button>\r\n                </Box>\r\n              </form>\r\n\r\n              <Box\r\n                style={{\r\n                  display: \"flex\",\r\n                  overflowY: \"hidden\",\r\n                  overflowX: \"auto\",\r\n                  direction: \"ltr\",\r\n                }}\r\n              >\r\n                {/* <Slider {...settings}> */}\r\n                {collectionlistAll.map((data, i) => {\r\n                  const statusData = data._id === list;\r\n                  // const status = list.includes(data._id);\r\n                  const isVideo = data.image.includes(\".mp4\");\r\n\r\n                  return (\r\n                    <Box\r\n                      key={i}\r\n                      mr={2}\r\n                      style={\r\n                        list\r\n                          ? {\r\n                            width: \"200px\",\r\n                            minWidth: \"200px\",\r\n                            height: \"150px\",\r\n                            background: \"#710d44\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\",\r\n                            borderRadius: \"10px\",\r\n                          }\r\n                          : {\r\n                            width: \"200px\",\r\n                            minWidth: \"200px\",\r\n                            height: \"150px\",\r\n                            background: \"#710d44\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\",\r\n                            borderRadius: \"10px\",\r\n                          }\r\n                      }\r\n                      onClick={() => {\r\n                        updateSelectedBundle(data._id);\r\n                      }}\r\n                    >\r\n                      {/* {status && (\r\n                        <figure style={{ width: \"200px\", height: \"150px\" }}>\r\n                          <img\r\n                            style={{ width: \"150px\", height: \"150px\" }}\r\n                            src={data?.image}\r\n                            alt=\"\"\r\n                          />\r\n                        </figure>\r\n                      )} */}\r\n\r\n                      {/* <Typography>{data.name}</Typography> */}\r\n\r\n                      {!statusData ? (\r\n                        <figure style={{ height: \"147px\", margin: \"0 auto\" }}>\r\n                          {isVideo ? (\r\n                            <video\r\n                              width=\"100%\"\r\n                              style={{\r\n                                width: \"100%\",\r\n                                maxHeight: \"150px\",\r\n                                borderRadius: \"11px\",\r\n                                background: \"rgb(0, 0, 0)\",\r\n                              }}\r\n                              controls\r\n                            // onClick={handleClickOpen2}\r\n                            >\r\n                              <source src={data.image} type=\"video/mp4\" />\r\n                            </video>\r\n                          ) : (\r\n                            <img\r\n                              style={{\r\n                                width: \"100%\",\r\n                                maxHeight: \"150px\",\r\n                                borderRadius: \"11px\",\r\n                                background: \"rgb(0, 0, 0)\",\r\n                              }}\r\n                              src={data?.image}\r\n                              alt=\"\"\r\n                            />\r\n                          )}\r\n                        </figure>\r\n                      ) : (\r\n                        <span>selected</span>\r\n                      )}\r\n                    </Box>\r\n                  );\r\n                })}\r\n\r\n                {/* <Select\r\n                  fullWidth\r\n                  value={selectedCollectionId}\r\n                  onChange={(e) => setSelectedCollectionId(e.target.value)}\r\n                >\r\n                  <MenuItem value={\"select\"}>Select</MenuItem>\r\n                  {collectionlistAll &&\r\n                    collectionlistAll.map((data, i) => {\r\n                      return (\r\n                        <MenuItem key={i} value={data._id}>\r\n                          {data.name}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                </Select> */}\r\n                {/* </Slider> */}\r\n              </Box>\r\n            </Box>\r\n          </DialogContent>\r\n        </Dialog>\r\n\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}