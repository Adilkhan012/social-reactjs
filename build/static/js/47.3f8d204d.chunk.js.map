{"version":3,"sources":["views/auth/signup/CheckEmail.js","component/Page.js","../node_modules/@material-ui/core/esm/Link/Link.js"],"names":["useStyles","makeStyles","theme","get","alignItems","textAlign","marginTop","marginBottom","loginBox","padding","CheckEmail","classes","history","useHistory","React","useState","title","maxWidth","mt","mb","variant","className","elevation","type","color","fullWidth","size","onClick","push","component","RouterComponent","to","Page","props","children","Link","ref","_props$color","_props$component","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","other","_objectWithoutProperties","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","useForkRef","Typography","_extends","clsx","root","concat","capitalize","button","event","withStyles","underlineNone","textDecoration","underlineHover","underlineAlways","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","cursor","userSelect","verticalAlign","borderStyle","name"],"mappings":"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","file":"static/js/47.3f8d204d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  makeStyles,\r\n  Typography,\r\n  Button,\r\n  Link,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport Page from \"src/component/Page\";\r\nimport { Link as RouterComponent, useHistory } from \"react-router-dom\";\r\nimport { FaTransgender } from \"react-icons/fa\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  get: {\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    marginTop: \"5rem\",\r\n    marginBottom: \"1rem\",\r\n  },\r\n  loginBox: {\r\n    padding: \"40px 30px\",\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n\r\nfunction CheckEmail() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [value, setValue] = React.useState();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  return (\r\n    <>\r\n      <Page title=\"Check Email\">\r\n        <Container maxWidth=\"sm\">\r\n          <Box textAlign=\"center\" mt={5} mb={5}>\r\n            <Typography variant=\"h2\">Check your email</Typography>\r\n            <Typography variant=\"h6\">\r\n              We’ve sent a link to your email address: abcd@gmail.com\r\n            </Typography>\r\n          </Box>\r\n          <Paper\r\n            className=\"coin_list\"\r\n            elevation={2}\r\n            className={classes.loginBox}\r\n          >\r\n            <Box mb={3}>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                fullWidth\r\n                size=\"large\"\r\n                onClick={() => history.push(\"/\")}\r\n              >\r\n                Skip Now\r\n              </Button>\r\n            </Box>\r\n            <Box>\r\n              Don’t receive an email?&nbsp;\r\n              <Link component={RouterComponent} to=\"/\">\r\n                Resend\r\n              </Link>\r\n            </Box>\r\n          </Paper>\r\n        </Container>\r\n      </Page>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CheckEmail;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nexport default function Page(props) {\r\n  const { title, children } = props;\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      <div>{children}</div>\r\n    </>\r\n  );\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);"],"sourceRoot":""}