{"version":3,"sources":["views/pages/StaticPage/SubscriberList.js"],"names":["useStyles","makeStyles","theme","root","padding","root1","display","justifyContent","borderBottom","box","main","backgroundColor","borderRadius","dot","width","height","mainContent","alignItems","border","margin","position","maxWidth","background","backdropFilter","objectFit","btnSection","type","fontSize","color","SubscriberList","data","classes","useState","dataList","setDataList","isLoading","setIsLoading","history","useHistory","listPublicExclusiveHandler","axios","method","url","Apiconfigs","listFollowerUser","headers","token","window","localStorage","getItem","res","responseCode","result","followers","useEffect","className","pb","variant","length","container","direction","spacing","map","i","item","xs","key","pt","src","profilePic","ml","style","cursor","onClick","push","pathname","search","_id","userName","name","moment","createdAt","local","fromNow"],"mappings":";4kNAWA,IAAMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,QAEXC,MAAO,CACLC,QAAS,OACTC,eAAgB,gBAChBC,aAAc,wBAEhBC,IAAK,CACHH,QAAS,OACTC,eAAgB,gBAChBC,aAAc,wBAEhBE,KAAM,CACJC,gBAAiB,QACjBC,aAAc,OACdR,QAAS,QAEXS,IAAK,CACHC,MAAO,MACPC,OAAQ,MACRH,aAAc,MACdD,gBAAiB,WAEnBK,YAAa,CACXV,QAAS,OACTW,WAAY,SAEZ,WAAY,CACVH,MAAO,OACPI,OAAQ,oBACRH,OAAQ,OACRI,OAAQ,SACRC,SAAU,WACVC,SAAU,QACVC,WACE,uFACFV,aAAc,MACdW,eAAgB,cAGlB,QAAS,CACPT,MAAO,OACPC,OAAQ,OACRS,UAAW,QACXZ,aAAc,QAGlBa,WAAY,CACVnB,QAAS,OACTC,eAAgB,MAChBU,WAAY,UAEdS,KAAM,CACJC,SAAU,OACVC,MAAO,eA4GIC,UAxGf,YAAkC,EAARC,KAAS,IAC3BC,EAAU/B,IAChB,EAAgCgC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EAAUC,cACVC,EAA0B,uCAAG,oGAE/BH,GAAa,GAFkB,SAGbI,IAAM,CACtBC,OAAQ,MACRC,IAAKC,IAAWC,iBAChBC,QAAS,CACPC,MAAOC,OAAOC,aAAaC,QAAQ,YAPR,OAUD,OAPxBC,EAHyB,QAUvBpB,KAAKqB,eACXjB,EAAYgB,EAAIpB,KAAKsB,OAAOC,WAC5BjB,GAAa,IAZgB,gDAe/BA,GAAa,GAfkB,yDAAH,qDAqBhC,OAHAkB,qBAAU,WACRf,MACC,IAED,oCACE,kBAAC,IAAD,CAAOgB,UAAWxB,EAAQ5B,MACxB,kBAAC,IAAD,CAAKoD,UAAWxB,EAAQrB,MACtB,kBAAC,IAAD,CAAK6C,UAAWxB,EAAQtB,IAAK+C,GAAI,GAC/B,kBAAC,IAAD,CAAYC,QAAQ,MAApB,oBAEDtB,EACC,kBAAC,IAAD,MAEA,oCACGF,GAAYA,EAASyB,OAAS,EAC7B,kBAAC,IAAD,CAAMC,WAAS,EAACC,UAAW,SAAUC,QAAS,GAC3C5B,IAAQ,OACPA,QADO,IACPA,OADO,EACPA,EAAU6B,KAAI,SAAChC,EAAMiC,GACnB,OACE,kBAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,IAAKH,GACtB,kBAAC,IAAD,CAAKI,GAAI,EAAGX,GAAI,EAAGD,UAAWxB,EAAQ1B,OACpC,kBAAC,IAAD,CAAKkD,UAAWxB,EAAQf,aACtB,gCACE,yBACEoD,KACM,OAAJtC,QAAI,IAAJA,OAAA,EAAAA,EAAMuC,YAAN,OACIvC,QADJ,IACIA,OADJ,EACIA,EAAMuC,WACN,qBAKV,kBAAC,IAAD,CAAKC,GAAI,GACP,kBAAC,IAAD,CACEC,MAAO,CAAEC,OAAQ,WACjBf,QAAQ,QACRgB,QAAS,WACPpC,EAAQqC,KAAK,CACXC,SAAU,kBACVC,OAAQ9C,EAAK+C,SAIZ,OAAJ/C,QAAI,IAAJA,OAAA,EAAAA,EAAMgD,UAAN,OAAiBhD,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAMgD,SAAvB,OAAkChD,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAMiD,MAE3C,kBAAC,IAAD,CACEtB,QAAQ,QACRF,UAAWxB,EAAQL,MAElBsD,IAAM,OAAClD,QAAD,IAACA,OAAD,EAACA,EAAMmD,WAAWC,QAAQC,oBAsBnD,kBAAC,IAAD","file":"static/js/78.ae65c9ee.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { makeStyles, Typography, Paper, Box, Grid } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport NoDataFound from \"src/component/NoDataFound\";\r\n\r\nimport Apiconfigs from \"src/ApiConfig/ApiConfig\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport DataLoading from \"src/component/DataLoading\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"25px\",\r\n  },\r\n  root1: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    borderBottom: \"0.25px solid #737373\",\r\n  },\r\n  box: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    borderBottom: \"0.25px solid #737373\",\r\n  },\r\n  main: {\r\n    backgroundColor: \"black\",\r\n    borderRadius: \"15px\",\r\n    padding: \"20px\",\r\n  },\r\n  dot: {\r\n    width: \"5px\",\r\n    height: \"5px\",\r\n    borderRadius: \"50%\",\r\n    backgroundColor: \"#B55A06\",\r\n  },\r\n  mainContent: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n\r\n    \"& figure\": {\r\n      width: \"50px\",\r\n      border: \"2px solid #161616\",\r\n      height: \"50px\",\r\n      margin: \"0 auto\",\r\n      position: \"relative\",\r\n      maxWidth: \"130px\",\r\n      background:\r\n        \"linear-gradient(152.97deg, rgba(255, 255, 255, 0.2) 0%, rgba(255, 255, 255, 0) 100%)\",\r\n      borderRadius: \"50%\",\r\n      backdropFilter: \"blur(42px)\",\r\n    },\r\n\r\n    \"& img\": {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      objectFit: \"cover\",\r\n      borderRadius: \"50%\",\r\n    },\r\n  },\r\n  btnSection: {\r\n    display: \"flex\",\r\n    justifyContent: \"end\",\r\n    alignItems: \"center\",\r\n  },\r\n  type: {\r\n    fontSize: \"10px\",\r\n    color: \"#838282\",\r\n  },\r\n}));\r\n\r\nfunction SubscriberList({ data }) {\r\n  const classes = useStyles();\r\n  const [dataList, setDataList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const history = useHistory();\r\n  const listPublicExclusiveHandler = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const res = await axios({\r\n        method: \"GET\",\r\n        url: Apiconfigs.listFollowerUser,\r\n        headers: {\r\n          token: window.localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      if (res.data.responseCode === 200) {\r\n        setDataList(res.data.result.followers);\r\n        setIsLoading(false);\r\n      }\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    listPublicExclusiveHandler();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Box className={classes.main}>\r\n          <Box className={classes.box} pb={3}>\r\n            <Typography variant=\"h4\">All Subscribers</Typography>\r\n          </Box>\r\n          {isLoading ? (\r\n            <DataLoading />\r\n          ) : (\r\n            <>\r\n              {dataList && dataList.length > 0 ? (\r\n                <Grid container direction={\"cloumn\"} spacing={1}>\r\n                  {dataList &&\r\n                    dataList?.map((data, i) => {\r\n                      return (\r\n                        <Grid item xs={12} key={i}>\r\n                          <Box pt={1} pb={2} className={classes.root1}>\r\n                            <Box className={classes.mainContent}>\r\n                              <figure>\r\n                                <img\r\n                                  src={\r\n                                    data?.profilePic\r\n                                      ? data?.profilePic\r\n                                      : \"images/user.png\"\r\n                                  }\r\n                                />\r\n                              </figure>\r\n\r\n                              <Box ml={2}>\r\n                                <Typography\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  variant=\"body2\"\r\n                                  onClick={() => {\r\n                                    history.push({\r\n                                      pathname: \"/about-creators\",\r\n                                      search: data._id,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  {data?.userName ? data?.userName : data?.name}\r\n                                </Typography>\r\n                                <Typography\r\n                                  variant=\"body2\"\r\n                                  className={classes.type}\r\n                                >\r\n                                  {moment(data?.createdAt).local().fromNow()}\r\n                                </Typography>\r\n                              </Box>\r\n                            </Box>\r\n                            {/* <Box\r\n                              mt={2.5}\r\n                              mr={2}\r\n                              style={{\r\n                                height: \"10px\",\r\n                                width: \"10px\",\r\n                                backgroundColor: \"green\",\r\n                                borderRadius: \"50%\",\r\n                              }}\r\n                            >\r\n                              {\" \"}\r\n                            </Box> */}\r\n                          </Box>\r\n                        </Grid>\r\n                      );\r\n                    })}\r\n                </Grid>\r\n              ) : (\r\n                <NoDataFound />\r\n              )}\r\n            </>\r\n          )}\r\n        </Box>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SubscriberList;\r\n"],"sourceRoot":""}