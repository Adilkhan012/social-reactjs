{"version":3,"sources":["views/pages/Better/Better.js"],"names":["useStyles","makeStyles","theme","heading","fontSize","color","breakpoints","down","maxWidth","lineHeight","marginTop","bannerBox","padding","root","button","fontWeight","boxShadow","borderBottom","borderRadius","height","background","width","backgroundColor","Buttonbox","marginRight","minWidth","boxSizing","fontFamily","Interest","history","useHistory","classes","auth","useContext","AuthContext","useState","isLoading","setIsLoading","allintrestList","setAllIntrestList","intrestValue","selectedTeam","setSelectedTeam","listInterestHandler","id","Axios","method","url","Apiconfigs","listInterest","res","data","responseCode","list","result","docs","map","i","name","useEffect","addInterestHandler","length","split","put","addInterest","interest","headers","token","localStorage","getItem","toast","success","responseMessage","handleUserProfileApi","setTimeout","push","error","message","warn","userData","className","elevation","align","variant","mt","multiple","options","value","defaultValue","onChange","_event","newTeam","getOptionLabel","option","renderInput","params","label","style","marginBottom","textAlign","display","overflow","onClick","disabled"],"mappings":";0oNAmBA,IAAMA,EAAYC,aAAW,SAACC,GAAD,YAAY,CACvCC,QAAS,CACP,OAAO,aACLC,SAAU,OACVC,MAAO,WACNH,EAAMI,YAAYC,KAAK,MAAQ,CAC9BH,SAAU,SAId,MAAO,CACLC,MAAO,UACPG,SAAU,QACVC,WAAY,OACZC,UAAW,SAGfC,WAAS,GACPC,QAAS,sBADF,cAENV,EAAMI,YAAYC,KAAK,MAAQ,CAC9BK,QAAS,WAHJ,cAKP,UAAW,CACTP,MAAO,UACPD,SAAU,SAPL,GAUTS,KAAK,aACHD,QAAS,QACRV,EAAMI,YAAYC,KAAK,MAAQ,CAC9BK,QAAS,SAGbE,OAAQ,CACNC,WAAY,MACZX,SAAU,OACVK,WAAY,MACZO,UAAW,OACXC,aAAc,IACdC,aAAc,IACdC,OAAQ,OACRC,WAAY,cACZf,MAAO,WACP,QAAS,CACPgB,MAAO,OACPF,OAAQ,OACRC,WAAY,UACZF,aAAc,OACdN,QAAS,UACTP,MAAO,4BAET,UAAW,CACTiB,gBAAiB,UACjBN,UAAW,OACXE,aAAc,QAGlBK,UAAW,CACT,WAAY,CACVC,YAAa,MACbC,SAAU,QACVC,UAAW,aACXX,WAAY,MACZG,aAAc,OACdN,QAAS,YACTQ,WAAY,UACZf,MAAO,UACPsB,WAAY,eACZjB,UAAW,MACXN,SAAU,OACV,UAAW,CACTgB,WAAY,UACZf,MAAO,QAET,WAAY,CACVe,WAAY,UACZf,MAAO,cAMA,SAASuB,IAAY,IAAD,MAC3BC,EAAUC,cAEVC,EAAU/B,IACVgC,EAAOC,qBAAWC,KACxB,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,mBAAS,IAAjD,mBACA,GADA,UAC4CA,mBAAS,KAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAAmCJ,mBAAS,IAA5C,mBAAOK,EAAP,KACA,GADA,KACwCL,sBAAxC,mBAAOM,EAAP,KAAqBC,EAArB,KAEA,EAA4CP,oBAAS,GAArD,mBAYMQ,GAZN,UAYyB,uCAAG,WAAOC,GAAP,kGAENC,IAAM,CACtBC,OAAQ,MACRC,IAAKC,IAAWC,eAJM,OAMM,OAJxBC,EAFkB,QAMhBC,KAAKC,eACLC,EAAOH,EAAIC,KAAKG,OAAOC,KAAKC,KAAI,SAACL,EAAMM,GAAP,OAAaN,EAAKO,QACxDnB,EAAkBc,IARI,uGAAH,uDAYzBM,qBAAU,WACRhB,MACC,IAEH,IAqBMiB,EAAkB,uCAAG,0FACT,OAAZnB,QAAY,IAAZA,OAAA,EAAAA,EAAcoB,QAAS,GADF,iCAGrBxB,GAAa,GACWG,EAAasB,MAAM,KAJtB,SASHjB,IAAMkB,IACtBf,IAAWgB,YACX,CACEC,SAAUxB,GAEZ,CACEyB,QAAS,CACPC,MAAOC,aAAaC,QAAQ,YAhBb,OAoBS,OAXxBnB,EATe,QAoBbC,KAAKC,cAEXkB,IAAMC,QAAQrB,EAAIC,KAAKqB,iBACvBxC,EAAKyC,uBACLC,YAAW,WACT7C,EAAQ8C,KAAK,cACZ,MAGHL,IAAMM,MAAM1B,EAAIC,KAAKqB,iBAEvBnC,GAAa,GA/BQ,kDAiCrBiC,IAAMM,MAAM,KAAMC,SAClBxC,GAAa,GAlCQ,gCAqCvBiC,IAAMQ,KAAK,6BArCY,0DAAH,qDAgDxB,OAPAnB,qBAAU,WACY,IAAD,EAAf3B,EAAK+C,UAEPrC,EAAe,UAACV,EAAK+C,gBAAN,aAAC,EAAed,YAEhC,CAACjC,EAAK+C,WAGP,oCACE,kBAAC,IAAD,CAAKC,UAAWjD,EAAQpB,WACtB,kBAAC,IAAD,CAAOqE,UAAWjD,EAAQlB,KAAMoE,UAAW,GACzC,kBAAC,IAAD,CAAKD,UAAWjD,EAAQlB,MACtB,kBAAC,IAAD,CAAKmE,UAAWjD,EAAQ5B,QAAS+E,MAAM,UACrC,kBAAC,IAAD,CAAYC,QAAQ,MAApB,qCAGA,kBAAC,IAAD,CAAYA,QAAQ,SAApB,8CAKF,kBAAC,IAAD,CAAKC,GAAI,GACP,kBAAC,IAAD,CACEC,UAAQ,EACRzC,GAAG,gBACH0C,QAAShD,EACTiD,MAAO9C,EACP+C,aAAY,UAAExD,EAAK+C,gBAAP,aAAE,EAAed,SAC7BwB,SAAU,SAACC,EAAQC,GACjBjD,EAAgBiD,IAElBC,eAAgB,SAACC,GAAD,OAAYA,GAC5BC,YAAa,SAACC,GAAD,OACX,kBAAC,IAAD,iBACMA,EADN,CAEEZ,QAAQ,WACRa,MAAM,kBA+Cd,kBAAC,IAAD,CAAKhB,UAAWjD,EAAQR,UAAW6D,GAAI,GAqBrC,kBAAC,IAAD,CAAKa,MAAO,CAAEC,aAAc,UAA5B,kBACA,kBAAC,IAAD,CACEd,GAAI,EACJe,UAAU,OACVC,QAAQ,OACRH,MAAO,CACLzF,SAAU,OACV6F,SAAU,OACV3F,UAAW,SAPf,OAUGsB,QAVH,IAUGA,GAVH,UAUGA,EAAM+C,gBAVT,iBAUG,EAAgBd,gBAVnB,aAUG,EAA0BT,KAAI,SAACL,GAC9B,OACE,kBAAC,IAAD,CACE8C,MAAO,CACL7E,WAAY,UACZI,YAAa,OACbN,aAAc,MACdN,QAAS,QAGVuC,OAKT,kBAAC,IAAD,CAAKiC,GAAI,EAAGe,UAAU,UACpB,kBAAC,IAAD,CACEhB,QAAQ,YACRc,MAAO,CAAE3E,gBAAiB,UAAWjB,MAAO,QAC5CiG,QAAS,kBAAM1C,KACf2C,SAAUnE,GAJZ,UAMUA,GAAa,kBAAC,IAAD","file":"static/js/68.9d44a5af.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  makeStyles,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Axios from \"axios\";\r\nimport Apiconfigs from \"src/ApiConfig/ApiConfig\";\r\nimport { toast } from \"react-toastify\";\r\nimport { AuthContext } from \"src/context/Auth\";\r\nimport ButtonCircularProgress from \"src/component/ButtonCircularProgress\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { MdOutlineAddBox } from \"react-icons/md\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  heading: {\r\n    \"& h4\": {\r\n      fontSize: \"30px\",\r\n      color: \"#696969\",\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        fontSize: \"18px\",\r\n      },\r\n    },\r\n\r\n    \"& p\": {\r\n      color: \"#696969\",\r\n      maxWidth: \"384px\",\r\n      lineHeight: \"24px\",\r\n      marginTop: \"10px\",\r\n    },\r\n  },\r\n  bannerBox: {\r\n    padding: \"10px 0px 150px 0px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      padding: \"90px 0\",\r\n    },\r\n    \"& label\": {\r\n      color: \"#e8aa3e\",\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n  root: {\r\n    padding: \"25px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      padding: \"10px\",\r\n    },\r\n  },\r\n  button: {\r\n    fontWeight: \"400\",\r\n    fontSize: \"14px\",\r\n    lineHeight: \"0px\",\r\n    boxShadow: \"none\",\r\n    borderBottom: \"0\",\r\n    borderRadius: \"0\",\r\n    height: \"40px\",\r\n    background: \"transparent\",\r\n    color: \"#7E6196 \",\r\n    \"& svg\": {\r\n      width: \"34px\",\r\n      height: \"35px\",\r\n      background: \"#FCF2FA\",\r\n      borderRadius: \"10px\",\r\n      padding: \"5px 6px\",\r\n      color: \"rgba(152, 126, 171, 0.5)\",\r\n    },\r\n    \"&:hover\": {\r\n      backgroundColor: \"#E6E6E6\",\r\n      boxShadow: \"none\",\r\n      borderRadius: \"5px\",\r\n    },\r\n  },\r\n  Buttonbox: {\r\n    \"& Button\": {\r\n      marginRight: \"5px\",\r\n      minWidth: \"106px\",\r\n      boxSizing: \"border-box\",\r\n      fontWeight: \"400\",\r\n      borderRadius: \"10px\",\r\n      padding: \"11px 16px\",\r\n      background: \"#242526\",\r\n      color: \"#9E9E9E\",\r\n      fontFamily: \"'Montserrat'\",\r\n      marginTop: \"7px\",\r\n      fontSize: \"14px\",\r\n      \"&:hover\": {\r\n        background: \"#EC167F\",\r\n        color: \"#fff\",\r\n      },\r\n      \"&:active\": {\r\n        background: \"#EC167F\",\r\n        color: \"#fff\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Interest() {\r\n  const history = useHistory();\r\n\r\n  const classes = useStyles();\r\n  const auth = useContext(AuthContext);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [interestList, setInterestList] = useState([]);\r\n  const [allintrestList, setAllIntrestList] = useState([]);\r\n  const [intrestValue, setIntrest] = useState(\"\");\r\n  const [selectedTeam, setSelectedTeam] = useState();\r\n\r\n  const [isOpenInterest, setIsopenInterest] = useState(false);\r\n  const updateCollectionListHanlder = (id) => {\r\n    let colList = interestList;\r\n    let updatedList = colList.map((item, i) => {\r\n      if (item.name == id) {\r\n        return { ...item, isSelect: !item.isSelect };\r\n      }\r\n      return item;\r\n    });\r\n    setInterestList(updatedList);\r\n  };\r\n\r\n  const listInterestHandler = async (id) => {\r\n    try {\r\n      const res = await Axios({\r\n        method: \"GET\",\r\n        url: Apiconfigs.listInterest,\r\n      });\r\n      if (res.data.responseCode === 200) {\r\n        const list = res.data.result.docs.map((data, i) => data.name);\r\n        setAllIntrestList(list);\r\n      }\r\n    } catch (error) {}\r\n  };\r\n  useEffect(() => {\r\n    listInterestHandler();\r\n  }, []);\r\n\r\n  const createInterestHandler = async (id) => {\r\n    const intrestValueArr = intrestValue.split(\",\");\r\n    for (let i = 0; i < intrestValueArr.length; i++) {\r\n      const singlerIntrestValue = intrestValueArr[i];\r\n      try {\r\n        const res = await Axios({\r\n          method: \"POST\",\r\n          url: Apiconfigs.createInterest,\r\n          headers: {\r\n            token: localStorage.getItem(\"token\"),\r\n          },\r\n          data: {\r\n            name: singlerIntrestValue,\r\n          },\r\n        });\r\n        if (res.data.responseCode === 200) {\r\n        }\r\n      } catch (error) {}\r\n    }\r\n  };\r\n\r\n  const addInterestHandler = async () => {\r\n    if (selectedTeam?.length > 2) {\r\n      try {\r\n        setIsLoading(true);\r\n        const intrestValueArr = intrestValue.split(\",\");\r\n        // if (intrestValueArr.length > 0) {\r\n        //   // await createInterestHandler();\r\n        // }\r\n\r\n        const res = await Axios.put(\r\n          Apiconfigs.addInterest,\r\n          {\r\n            interest: selectedTeam,\r\n          },\r\n          {\r\n            headers: {\r\n              token: localStorage.getItem(\"token\"),\r\n            },\r\n          }\r\n        );\r\n        if (res.data.responseCode === 200) {\r\n          // history.push(\"/explore\");\r\n          toast.success(res.data.responseMessage);\r\n          auth.handleUserProfileApi();\r\n          setTimeout(() => {\r\n            history.push(\"/explore\");\r\n          }, 3000);\r\n          \r\n        } else {\r\n          toast.error(res.data.responseMessage);\r\n        }\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        toast.error(error.message);\r\n        setIsLoading(false);\r\n      }\r\n    } else {\r\n      toast.warn(\"Select atleast 3 interest\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (auth.userData) {\r\n      // const interest = auth.userData?.interest;\r\n      setSelectedTeam(auth.userData?.interest);\r\n    }\r\n  }, [auth.userData]);\r\n\r\n  return (\r\n    <>\r\n      <Box className={classes.bannerBox}>\r\n        <Paper className={classes.root} elevation={2}>\r\n          <Box className={classes.root}>\r\n            <Box className={classes.heading} align=\"center\">\r\n              <Typography variant=\"h4\">\r\n                Tell us more about your interest.\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                Pick at least 3 favorite topics of yours.\r\n              </Typography>\r\n            </Box>\r\n\r\n            <Box mt={2}>\r\n              <Autocomplete\r\n                multiple\r\n                id=\"tags-standard\"\r\n                options={allintrestList}\r\n                value={selectedTeam}\r\n                defaultValue={auth.userData?.interest}\r\n                onChange={(_event, newTeam) => {\r\n                  setSelectedTeam(newTeam);\r\n                }}\r\n                getOptionLabel={(option) => option}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    variant=\"outlined\"\r\n                    label=\"Interest\"\r\n                    // autoComplete=\"none\"\r\n                    // placeholder=\"Interest\"\r\n                  />\r\n                )}\r\n              />\r\n              {/* <Box className={classes.Buttonbox}>\r\n                <Box mt={1} style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                  <MdOutlineAddBox\r\n                    onClick={() => setIsopenInterest(!isOpenInterest)}\r\n                    style={{\r\n                      fontSize: \"23px\",\r\n                      color: \"rgb(227, 26, 137)\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                  />\r\n                  <small style={{ fontSize: \"13px\", marginLeft: \"7px\" }}>\r\n                    {\" \"}\r\n                    Add Intrest\r\n                  </small>\r\n                </Box>{\" \"}\r\n              </Box> */}\r\n              {/* {isOpenInterest && (\r\n                <Box mt={2}>\r\n                  <TextField\r\n                    id=\"outlined-basic\"\r\n                    variant=\"outlined\"\r\n                    name=\"Text Field\"\r\n                    placeholder=\"Intrest name, Please enter comma separated values\"\r\n                    type=\"text\"\r\n                    fullWidth\r\n                    value={intrestValue}\r\n                    filterSelectedOptions\r\n                    onChange={(e) => setIntrest(e.target.value)}\r\n                  />\r\n                  <Button\r\n                    onClick={() => {\r\n                      setIsopenInterest(false);\r\n                      setIntrest(\"\");\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </Box>\r\n              )} */}\r\n            </Box>\r\n\r\n            <Box className={classes.Buttonbox} mt={3}>\r\n              {/* <Box className={classes.TabButtonsBox}>\r\n                <Box className={classes.Buttonbox}>\r\n                  {interestList.map((data, i) => {\r\n                    return (\r\n                      <Button\r\n                        key={i}\r\n                        variant='contained'\r\n                        style={\r\n                          data?.isSelect\r\n                            ? { backgroundColor: \"#e31a89\", color: \"#fff\" }\r\n                            : { backgroundColor: \"#242526\" }\r\n                        }\r\n                        onClick={() => updateCollectionListHanlder(data.name)}\r\n                      >\r\n                        {data.name}\r\n                      </Button>\r\n                    );\r\n                  })}\r\n                </Box>\r\n              </Box> */}\r\n              <Box style={{ marginBottom: \"-10px\" }}>Your interests</Box>\r\n              <Box\r\n                mt={3}\r\n                textAlign=\"left\"\r\n                display=\"flex\"\r\n                style={{\r\n                  maxWidth: \"100%\",\r\n                  overflow: \"auto\",\r\n                  marginTop: \"24px\",\r\n                }}\r\n              >\r\n                {auth?.userData?.interest?.map((data) => {\r\n                  return (\r\n                    <Typography\r\n                      style={{\r\n                        background: \"#e31a89\",\r\n                        marginRight: \"10px\",\r\n                        borderRadius: \"5px\",\r\n                        padding: \"5px\",\r\n                      }}\r\n                    >\r\n                      {data}\r\n                    </Typography>\r\n                  );\r\n                })}\r\n              </Box>\r\n              <Box mt={3} textAlign=\"center\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{ backgroundColor: \"#e31a89\", color: \"#fff\" }}\r\n                  onClick={() => addInterestHandler()}\r\n                  disabled={isLoading}\r\n                >\r\n                  Submit {isLoading && <ButtonCircularProgress />}\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Paper>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}